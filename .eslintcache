[{"/var/www/html/SmartSwap_frontend/src/index.js":"1","/var/www/html/SmartSwap_frontend/src/reportWebVitals.js":"2","/var/www/html/SmartSwap_frontend/src/App.js":"3","/var/www/html/SmartSwap_frontend/src/pages/ownLicence02.js":"4","/var/www/html/SmartSwap_frontend/src/pages/smartSwapLicence.js":"5","/var/www/html/SmartSwap_frontend/src/pages/ownLicence.js":"6","/var/www/html/SmartSwap_frontend/src/pages/home.js":"7","/var/www/html/SmartSwap_frontend/src/constants.js":"8","/var/www/html/SmartSwap_frontend/src/helper/validation.js":"9","/var/www/html/SmartSwap_frontend/src/config/web3Config.js":"10","/var/www/html/SmartSwap_frontend/src/config/notificationConfig.js":"11","/var/www/html/SmartSwap_frontend/src/helper/swapFactoryContract.js":"12","/var/www/html/SmartSwap_frontend/src/config/constantConfig.js":"13","/var/www/html/SmartSwap_frontend/src/helper/reimbursementContract.js":"14","/var/www/html/SmartSwap_frontend/src/components/WalletPopup.js":"15","/var/www/html/SmartSwap_frontend/src/components/RightSideMenu.js":"16","/var/www/html/SmartSwap_frontend/src/components/CoinPopup.js":"17","/var/www/html/SmartSwap_frontend/src/components/Header.js":"18","/var/www/html/SmartSwap_frontend/src/components/SidePopup.js":"19","/var/www/html/SmartSwap_frontend/src/components/withdraw_token.js":"20","/var/www/html/SmartSwap_frontend/src/components/LiquidityProvider.js":"21","/var/www/html/SmartSwap_frontend/src/components/liquidity_fountain_for_SPs.js":"22","/var/www/html/SmartSwap_frontend/src/components/Deposit-withdraw.js":"23","/var/www/html/SmartSwap_frontend/src/components/CreateLicense.js":"24","/var/www/html/SmartSwap_frontend/src/components/NoDomain.js":"25","/var/www/html/SmartSwap_frontend/src/components/HowItWorks.js":"26","/var/www/html/SmartSwap_frontend/src/components/CefiToDefi.js":"27","/var/www/html/SmartSwap_frontend/src/components/LedgerHistory.js":"28","/var/www/html/SmartSwap_frontend/src/components/PeerPopup.js":"29","/var/www/html/SmartSwap_frontend/src/components/About.js":"30","/var/www/html/SmartSwap_frontend/src/dispatcher.js":"31","/var/www/html/SmartSwap_frontend/src/helper/axiosRequest.js":"32","/var/www/html/SmartSwap_frontend/src/helper/spContract.js":"33"},{"size":478,"mtime":1638334037545,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":1638334037549,"results":"36","hashOfConfig":"35"},{"size":726,"mtime":1638334037545,"results":"37","hashOfConfig":"35"},{"size":31607,"mtime":1638334037549,"results":"38","hashOfConfig":"35"},{"size":23814,"mtime":1638334037549,"results":"39","hashOfConfig":"35"},{"size":118187,"mtime":1638334037549,"results":"40","hashOfConfig":"35"},{"size":205891,"mtime":1638334037549,"results":"41","hashOfConfig":"35"},{"size":2001,"mtime":1638349464639,"results":"42","hashOfConfig":"35"},{"size":987,"mtime":1638334037545,"results":"43","hashOfConfig":"35"},{"size":3456,"mtime":1638334037545,"results":"44","hashOfConfig":"35"},{"size":957,"mtime":1638334037545,"results":"45","hashOfConfig":"35"},{"size":10663,"mtime":1638341345357,"results":"46","hashOfConfig":"35"},{"size":7762,"mtime":1638347409507,"results":"47","hashOfConfig":"35"},{"size":11250,"mtime":1638334037545,"results":"48","hashOfConfig":"35"},{"size":6490,"mtime":1638334037545,"results":"49","hashOfConfig":"35"},{"size":12160,"mtime":1638343010078,"results":"50","hashOfConfig":"35"},{"size":9845,"mtime":1638334037545,"results":"51","hashOfConfig":"35"},{"size":9615,"mtime":1638334037545,"results":"52","hashOfConfig":"35"},{"size":10336,"mtime":1638334037545,"results":"53","hashOfConfig":"35"},{"size":2638,"mtime":1638334037545,"results":"54","hashOfConfig":"35"},{"size":83556,"mtime":1638347498947,"results":"55","hashOfConfig":"35"},{"size":1828,"mtime":1638334037545,"results":"56","hashOfConfig":"35"},{"size":10922,"mtime":1638334037545,"results":"57","hashOfConfig":"35"},{"size":13909,"mtime":1638334037545,"results":"58","hashOfConfig":"35"},{"size":1268,"mtime":1638334037545,"results":"59","hashOfConfig":"35"},{"size":9755,"mtime":1638334037545,"results":"60","hashOfConfig":"35"},{"size":5289,"mtime":1638334037545,"results":"61","hashOfConfig":"35"},{"size":16385,"mtime":1638334037545,"results":"62","hashOfConfig":"35"},{"size":4308,"mtime":1638334037545,"results":"63","hashOfConfig":"35"},{"size":29782,"mtime":1638334037545,"results":"64","hashOfConfig":"35"},{"size":69,"mtime":1638334037545,"results":"65","hashOfConfig":"35"},{"size":1145,"mtime":1637038843674,"results":"66","hashOfConfig":"35"},{"size":2297,"mtime":1637038843678,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1aewyrg",{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":66,"fixableErrorCount":0,"fixableWarningCount":2,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":42,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":4,"source":"109","usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":42,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":1,"source":"115","usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"70"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"144","usedDeprecatedRules":"70"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"70"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":50,"fixableErrorCount":0,"fixableWarningCount":11,"source":"150","usedDeprecatedRules":"70"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"/var/www/html/SmartSwap_frontend/src/index.js",[],["157","158"],"/var/www/html/SmartSwap_frontend/src/reportWebVitals.js",[],"/var/www/html/SmartSwap_frontend/src/App.js",[],"/var/www/html/SmartSwap_frontend/src/pages/ownLicence02.js",["159","160","161","162","163","164","165","166","167"],"import React, { PureComponent, lazy, Suspense } from \"react\";\nimport {\n    Redirect,\n} from 'react-router-dom';\nimport web3Js from 'web3';\nimport Web3 from \"web3\";\nimport web3Config from \"../config/web3Config\";\nimport Validation from \"../helper/validation\";\nimport swapFactoryAbi from \"../abis/swapFactory.json\";\nimport tokenAbi from \"../abis/tokenAbi.json\";\nimport constantConfig from \"../config/constantConfig\";\nimport notificationConfig from \"../config/notificationConfig\";\nimport SwapFactoryContract from \"../helper/swapFactoryContract\";\nimport { LoopCircleLoading } from 'react-loadingg';\nimport CONSTANT from \"../constants\";\nimport data from \"../config/constantConfig\";\nimport Header from \"../components/Header\";\nimport RightSideMenu from \"../components/RightSideMenu\";\nimport WalletPopup from \"../components/WalletPopup\";\nimport CoinPopup from \"../components/CoinPopup\";\nimport SidePopup from \"../components/SidePopup\";\nconst $ = window.$;\nexport default class ownLicence02 extends PureComponent {\n    constructor(props) {\n        super();\n        this.setSendCurrency = this.setSendCurrency.bind(this)\n        this.setReceiveCurrency = this.setReceiveCurrency.bind(this)\n        this.state = {\n            web3: null,\n            web3Check: false,\n            btnClick: false,\n            swapFactory: null,\n            swapLoading: false,\n            selectedSendCurrency: \"BNB\",\n            selectedReceiveCurrency: \"ETH\",\n            instanceSwapFactoryBinance: null,\n            instanceSwapFactoryEthereum: null,\n            tokenInstance: {},\n            txLink: \"\",\n            wrapBox: \"swap\",\n            txIdSent: null,\n            txSentStatus: \"pending\",\n            txSentTime: null,\n            tokenReceive: \"0\",\n            txReceiveTime: null,\n            txIdReceive: null,\n            txLinkSend: '',\n            txLinkReturn: '',\n            receiveFundAmount: \"\",\n            sendFundAmount: \"\",\n            actualSendFundAmount: 0,\n            approxReceiveFundAmount: 0,\n            showLedger: false,\n            currencyPrices: {},\n            estimatedGasFee: \"0\",\n            tokenBalances: {\n                \"JNTR\": 0,\n                \"JNTR/b\": 0,\n                \"JNTR/e\": 0,\n                \"JNTR_APPROVED\": 0,\n                \"JNTR/b_APPROVED\": 0,\n                \"JNTR/e_APPROVED\": 0,\n            }\n        }\n    }\n    componentWillMount = async () => {\n        await this.fetchPrice();\n    }\n    componentDidMount = async () => {\n        this.setState({\n            web3Ethereum: new Web3(new Web3.providers.WebsocketProvider(CONSTANT.RPC_PROVIDER_ETHEREUM)),\n            web3Binance: new Web3(new Web3.providers.HttpProvider(CONSTANT.RPC_PROVIDER_BINANCE))\n        })\n        this.setState({\n            loading: true\n        }, async () => {\n            await this.initInstance();\n        })\n    };\n    async initInstance() {\n        let { web3Binance, web3Ethereum } = this.state;\n        let instanceSwapFactoryBinance = null;\n        let instanceSwapFactoryEthereum = null;\n        instanceSwapFactoryBinance = new web3Binance.eth.Contract(swapFactoryAbi, constantConfig[CONSTANT.NETWORK_ID.BINANCE].swapFactoryContract);\n        instanceSwapFactoryEthereum = new web3Ethereum.eth.Contract(swapFactoryAbi, constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].swapFactoryContract);\n        let tokenInstance = {};\n        tokenInstance[\"JNTR\"] = new web3Binance.eth.Contract(tokenAbi, \"0x1350044d6a653E87Ed3384DC1D2f6b1A7F138e0A\");\n        tokenInstance[\"JNTR/b\"] = new web3Binance.eth.Contract(tokenAbi, \"0x001667842cc59cadb0a335bf7c7f77b3c75f41c2\");\n        tokenInstance[\"JNTR/e\"] = new web3Ethereum.eth.Contract(tokenAbi, \"0x40a99d086d517f06f9d1ed564f51ef75b8f7f042\");\n        this.setState({\n            instanceSwapFactoryBinance,\n            instanceSwapFactoryEthereum,\n            tokenInstance\n        }, () => {\n            this.listenTransferEvent()\n        });\n    }\n    updateTokenBalance = async () => {\n        if (this.state.web3 !== null) {\n            const { tokenInstance, tokenBalances, web3 } = this.state;\n            // Balances\n            tokenBalances[\"JNTR\"] = web3Js.utils.fromWei(await tokenInstance[\"JNTR\"].methods.balanceOf(web3Config.getAddress()).call(), \"ether\");\n            tokenBalances[\"JNTR/b\"] = web3Js.utils.fromWei(await tokenInstance[\"JNTR/b\"].methods.balanceOf(web3Config.getAddress()).call(), \"ether\");\n            tokenBalances[\"JNTR/e\"] = web3Js.utils.fromWei(await tokenInstance[\"JNTR/e\"].methods.balanceOf(web3Config.getAddress()).call(), \"ether\");\n            // Approve Balances\n            tokenBalances[\"JNTR_APPROVED\"] = web3Js.utils.fromWei(await tokenInstance[\"JNTR\"].methods.allowance(web3Config.getAddress(), \"0x309208d15fba3207be6c760771ca3b4846e1be93\").call(), \"ether\");\n            tokenBalances[\"JNTR/b_APPROVED\"] = web3Js.utils.fromWei(await tokenInstance[\"JNTR/b\"].methods.allowance(web3Config.getAddress(), \"0x309208d15fba3207be6c760771ca3b4846e1be93\").call(), \"ether\");\n            tokenBalances[\"JNTR/e_APPROVED\"] = web3Js.utils.fromWei(await tokenInstance[\"JNTR/e\"].methods.allowance(web3Config.getAddress(), \"0xeaf41806fcc2a3893a662dbba7a111630f9f6704\").call(), \"ether\");\n            this.setState({\n                tokenBalances: tokenBalances\n            }, () => {\n                this.forceUpdate();\n                // this.updateButton()\n            })\n        }\n    }\n    async connectWallet() {\n        this.setState({ btnClick: true });\n        await web3Config.connectWallet(0);\n        let networkId = web3Config.getNetworkId();\n        if (!constantConfig.allowedNetwork.includes(networkId)) {\n            notificationConfig.error(\"Please Select Kovan or BSC Test Network\");\n            this.setState({ btnClick: false });\n            return\n        }\n        if (constantConfig.tokenDetails[this.state.selectedSendCurrency].networkId !== networkId && networkId === 97) {\n            notificationConfig.warning(\"Change metamask network to Ethereum!\")\n            return\n        } else if (constantConfig.tokenDetails[this.state.selectedSendCurrency].networkId !== networkId && networkId === 42) {\n            notificationConfig.warning(\"Change metamask network to Binance!\")\n            return\n        }\n        this.setState({\n            web3: web3Config.getWeb3(),\n            btnClick: false\n        }, () => {\n            // this.changeCurrency(false)\n            setInterval(() => {\n                this.updateTokenBalance()\n            }, 3000)\n        })\n    }\n    async swap() {\n        let web3 = web3Config.getWeb3();\n        let networkId = web3Config.getNetworkId();\n        let address = web3Config.getAddress();\n        if (web3 === null)\n            return 0\n        let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\n        let { sendFundAmount } = this.state;\n        if (sendFundAmount === \"\" || sendFundAmount === 0) {\n            notificationConfig.error(\"Enter value to swap\")\n            return;\n        }\n        let actualSendFundAmount = (await this.getActualAmount(sendFundAmount, this.state.selectedSendCurrency)).toString()\n        let value = 0, swapAmount = 0;\n        try {\n            value = web3Js.utils\n                .toWei(actualSendFundAmount.toString());\n        } catch (e) {\n            value = (actualSendFundAmount * 10 ** 18).toFixed(0);\n        }\n        swapAmount = value;\n        if (constantConfig.tokenDetails[this.state.selectedSendCurrency].approveRequire) {\n            value = 0;\n        }\n        swapFactory.swap(CONSTANT.currencyAddresses[this.state.selectedSendCurrency], CONSTANT.currencyAddresses[this.state.selectedReceiveCurrency], value, swapAmount, (hash) => {\n            this.setState({\n                swapLoading: true,\n                txIdSent: hash,\n                txLinkSend: data[networkId].explorer + \"/tx/\" + hash\n            });\n        }, () => {\n            // this.init()\n            this.setState({\n                swapLoading: false,\n                showLedger: true,\n                wrapBox: \"success\"\n            });\n            notificationConfig.success(\"Swap Success\");\n        })\n    }\n    async approve() {\n        let web3 = web3Config.getWeb3();\n        let networkId = web3Config.getNetworkId();\n        let address = web3Config.getAddress();\n        if (web3 === null)\n            return 0\n        let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\n        swapFactory.approveJNTRTokenForSwapFactory(constantConfig.tokenDetails[this.state.selectedSendCurrency].address, constantConfig[networkId].swapFactoryContract, (hash) => {\n            this.setState({\n                approveLoading: true,\n                // txIdSent: hash,\n                // txLinkSend: data[networkId].explorer + \"/tx/\" + hash\n            });\n        }, () => {\n            // this.init()\n            this.setState({\n                approveLoading: false,\n                // showLedger: true,\n                // wrapBox: \"success\"\n            });\n            notificationConfig.success(\"Approve Success\");\n        })\n    }\n    async estimateGasAndFee() {\n        let web3 = web3Config.getWeb3();\n        let networkId = web3Config.getNetworkId();\n        let address = web3Config.getAddress();\n        if (web3 === null)\n            return 0\n        let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\n        let { sendFundAmount } = this.state;\n        if (sendFundAmount === \"\" || sendFundAmount === 0) {\n            notificationConfig.error(\"Enter value to swap\")\n            return;\n        }\n        let actualSendFundAmount = (await this.getActualAmount(sendFundAmount, this.state.selectedSendCurrency)).toString()\n        let value = 0, swapAmount = 0;\n        try {\n            value = web3Js.utils.toWei(actualSendFundAmount.toString());\n        } catch (e) {\n            value = (actualSendFundAmount * 10 ** 18).toFixed(0);\n        }\n        swapAmount = value;\n        if (constantConfig.tokenDetails[this.state.selectedSendCurrency].approveRequire) {\n            value = 0;\n        }\n        swapFactory.estimateSwapGasFee(CONSTANT.currencyAddresses[this.state.selectedSendCurrency], CONSTANT.currencyAddresses[this.state.selectedReceiveCurrency], value, swapAmount, \"350000\", (estGas) => {\n            this.setState({\n                estimatedGasFee: estGas\n            })\n        })\n    }\n    async recivedToken(e) {\n        let dollarAmount = Number(e.target.value)\n        this.setState({\n            sendFundAmount: dollarAmount\n        }, () => {\n            this.setAmount(dollarAmount)\n        })\n    }\n    async setAmount(dollarAmount) {\n        this.setState({\n            actualSendFundAmount: await this.getActualAmount(dollarAmount, this.state.selectedSendCurrency),\n            approxReceiveFundAmount: await this.getActualAmount(dollarAmount, this.state.selectedReceiveCurrency)\n        }, () => {\n            this.estimateGasAndFee()\n        })\n    }\n    async getActualAmount(dollarAmount, currency) {\n        if (dollarAmount <= 0)\n            return 0;\n        else\n            return (dollarAmount / this.state.currencyPrices[currency])\n    }\n    async fetchPrice() {\n        var { currencyPrices } = this.state;\n        const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=ethereum,binancecoin&vs_currencies=usd`);\n        const json = await response.json();\n        currencyPrices[\"ETH\"] = json[\"ethereum\"][\"usd\"];\n        currencyPrices[\"BNB\"] = json[\"binancecoin\"][\"usd\"];\n        currencyPrices[\"JNTR/e\"] = 0.062166;\n        currencyPrices[\"JNTR/b\"] = 0.054237;\n        currencyPrices[\"JNTR\"] = 0.5320;\n        this.setState({\n            currencyPrices\n        })\n    }\n    changeCurrency(check) {\n        // if(check && this.state.web3 === null){\n        let selectedSendCurrency = this.state.selectedSendCurrency;\n        let selectedReceiveCurrency = this.state.selectedReceiveCurrency;\n        this.setState({\n            selectedSendCurrency: selectedReceiveCurrency,\n            selectedReceiveCurrency: selectedSendCurrency\n        }, () => {\n            if (this.state.sendFundAmount !== \"\")\n                this.setAmount(this.state.sendFundAmount);\n            this.forceUpdate()\n        })\n        // } else if(this.state.web3 !== null && check) {\n        //     notificationConfig.warning(\"Please change metamask network!\")\n        // }\n    }\n    setSendCurrency(currency) {\n        this.setState({ selectedSendCurrency: currency }, () => {\n            this.closePopup(\"sendCurPop\");\n        })\n    }\n    setReceiveCurrency(currency) {\n        this.setState({ selectedReceiveCurrency: currency }, () => {\n            this.closePopup(\"receiveCurPop\");\n        })\n    }\n    openPopup(id) {\n        $(\"#\" + id).fadeIn();\n    }\n    closePopup(id) {\n        $(\"#\" + id).fadeOut();\n    }\n    changeWrapBox(which) {\n        this.setState({\n            wrapBox: which,\n            txIdSent: null,\n            txSentStatus: \"pending\",\n            txSentTime: null,\n            tokenReceive: \"0\",\n            txReceiveTime: null,\n            txIdReceive: null,\n            txLinkSend: '',\n            txLinkReturn: '',\n            receiveFundAmount: \"\",\n            sendFundAmount: \"\",\n            actualSendFundAmount: 0,\n            approxReceiveFundAmount: 0,\n            showLedger: false\n        })\n    }\n    async listenTransferEvent() {\n        const { instanceSwapFactoryEthereum, instanceSwapFactoryBinance } = this.state;\n        if (instanceSwapFactoryEthereum !== null) {\n            instanceSwapFactoryEthereum.events.ClaimApprove({\n                fromBlock: 'latest'\n            }, function (error, event) {\n                console.log(event);\n            })\n                .on(\"connected\", function (subscriptionId) {\n                    console.log(subscriptionId);\n                })\n                .on('data', function (event) {\n                    console.log(event); // same results as the optional callback above\n                    if ((event.returnValues.user).toLocaleLowerCase() === web3Config.getAddress().toLocaleLowerCase()) {\n                        let txLinkReturn = constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].explorer + '/tx/' + event.transactionHash;\n                        let returnAmount = web3Js.utils.fromWei((event.returnValues.amountA).toLocaleLowerCase());\n                        this.updateLedgerAfterResponse(event.transactionHash, txLinkReturn, returnAmount)\n                    }\n                }.bind(this))\n                .on('changed', function (event) {\n                    console.log(event)\n                    // remove event from local database\n                })\n                .on('error', function (error, receipt) { // If the transaction was rejected by the network with a receipt, the second parameter will be the receipt.\n                    console.log(error, receipt)\n                });\n        }\n        if (instanceSwapFactoryBinance !== null) {\n            let { web3Binance } = this.state;\n            let initialBlock = await web3Binance.eth.getBlockNumber();\n            setInterval(async () => {\n                const currentBlock = await web3Binance.eth.getBlockNumber();\n                instanceSwapFactoryBinance.getPastEvents(\"allEvents\",\n                    {\n                        fromBlock: initialBlock,\n                        toBlock: currentBlock // You can also specify 'latest'          \n                    })\n                    .then(async function (result) {\n                        for (let i = 0; i < result.length; i++) {\n                            console.log(result[i].event)\n                            if (result[i].event === \"ClaimApprove\") {\n                                console.log(result[i])\n                                if ((result[i].returnValues.user).toLocaleLowerCase() === web3Config.getAddress().toLocaleLowerCase()) {\n                                    let txLinkReturn = constantConfig[CONSTANT.NETWORK_ID.BINANCE].explorer + '/tx/' + result[i].transactionHash;\n                                    let returnAmount = web3Js.utils.fromWei(result[i].returnValues.amountA).toLocaleLowerCase();\n                                    this.updateLedgerAfterResponse(result[i].transactionHash, txLinkReturn, returnAmount)\n                                }\n                            }\n                        }\n                    }.bind(this))\n                    .catch((err) => console.error(err));\n                initialBlock = currentBlock;\n            }, 10000)\n        }\n    }\n    updateLedgerAfterResponse(hash, txLinkReturn, returnAmount) {\n        this.setState({\n            isSendingOrder: false,\n            txSentStatus: \"Success\",\n            txSentTime: new Date().toUTCString(),\n            tokenReceive: \"2\",\n            txReceiveTime: new Date().toUTCString(),\n            txIdReceive: hash,\n            whichButton: \"4\",\n            txLinkReturn: txLinkReturn,\n            receiveFundAmount: returnAmount\n        }, async () => {\n            //   await this.enableInputs();\n        })\n    }\n    scrollToLedger() {\n        $(\"html\").animate({ scrollTop: 650 });\n    }\n    render() {\n        return (\n            <main id=\"main\" className=\"smartSwap\">\n                <div className=\"fullscreen-bg\">\n                    <div className=\"fsbg_sad01\"></div>\n                    <div className=\"fsbg_container\">\n                        <video loop autoPlay muted className=\"fullscreen-bg__video\" >\n                            <source src=\"video/smartswap.webm\" type=\"video/webm\" />\n                            <source src=\"video/smartswap.mp4\" type=\"video/mp4\" />\n                            <source src=\"video/smartswap.ogv\" type=\"video/ogg\" />\n                        </video>\n                    </div>\n                </div>\n                <div className=\"main\">\n                    {/* <!--======================= RIGHT SIDE MENU =====================--> */}\n                    <RightSideMenu web3={this.state.web3} web3Config={web3Config}></RightSideMenu>\n                    {/* <!--======================= RIGHT SIDE MENU END  =====================-->\n                    <!--======================= HEADER START =====================--> */}\n                    <Header web3={this.state.web3} web3Config={web3Config}></Header>\n                    {/* <!--======================= HEADER END =====================--> */}\n                    <div className=\"mainBlock\">\n                        {/* <!--======================= SWAP BLOCK START =====================--> */}\n                        <div className=\"swap-Block\">\n                            <div className=\"container-Grid\">\n                                <div className=\"smeTitle01-v2\">Get Your Own License For FREE</div>\n                            </div>\n                            <div className=\"swap-textBox\">\n                                <div className=\"container-Grid\">\n                                    <div className=\"gwFormMbox\">\n                                        <div className='gwFormLMbox'>\n                                            <div className='gwFormSTitle01'><span>1</span> Set up your fees and reimbursement</div>\n                                            <div className=\"gwFormSbox01\">\n                                                <div className=\"gwFormTitle01\" >Choose the fees that you want to charge your users\n                                                <i class=\"help-circle\"> <i class=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text\" aria-hidden=\"true\"></i> </i></div>\n                                                <div className=\"gwFormSFormbox01\">\n                                                    <input type=\"text\" /> <span>%</span>\n                                                </div>\n                                            </div>\n                                            <div className=\"gwFormSbox01\">\n                                                <div className=\"gwFormTitle01\" >Add your native token smart contract</div>\n                                                <div className=\"gwFormSFormbox01\">\n                                                    <input type=\"text\" /> <span>JNTR</span>\n                                                </div>\n                                            </div>\n                                            <div className=\"gwFormSbox01\">\n                                                <div className=\"gwFormTitle01\" >Deposit amount of tokens to cover the reimbursement <i class=\"help-circle\">\n                                                    <i class=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text\" aria-hidden=\"true\"></i></i></div>\n                                                <div className=\"gwFormSFormbox01\">\n                                                    <input type=\"text\" /> <span>JNTR</span>\n                                                </div>\n                                            </div>\n                                            <div className=\"gwFormSbox01\">\n                                                <div className=\"gwFormSFormbox02\">\n                                                    <div className=\"md-radio md-radio-inline\">\n                                                        <input type=\"radio\" id=\"radio148\" name=\"stepin52\" value=\"option146\" />\n                                                        <label htmlFor=\"radio148\">Display all tokens <i class=\"help-circle\">\n                                                            <i class=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text\" aria-hidden=\"true\"></i>\n                                                        </i></label>\n                                                    </div>\n                                                    <div className=\"md-radio md-radio-inline\">\n                                                        <input type=\"radio\" id=\"radio149\" name=\"stepin52\" value=\"option145\" />\n                                                        <label htmlFor=\"radio149\">Display token lists <i class=\"help-circle\">\n                                                            <i class=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text\" aria-hidden=\"true\"></i>\n                                                        </i></label>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className='gwFormRMbox'>\n                                            <div className='gwFormSTitle01'><span>2</span>Set up your design </div>\n                                            <div className=\"gwFormSbox01\">\n                                                <div className=\"gwFormTitle01\" >Type of license </div>\n                                                <div className=\"gwFormSFormbox02\">\n                                                    <div className=\"md-radio md-radio-inline\">\n                                                        <input type=\"radio\" id=\"radio145\" name=\"stepin50\" value=\"option146\" />\n                                                        <label htmlFor=\"radio145\">Zero integration <i class=\"help-circle\">\n                                                            <i class=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text\" aria-hidden=\"true\"></i>\n                                                        </i></label>\n                                                    </div>\n                                                    <div className=\"md-radio md-radio-inline\">\n                                                        <input type=\"radio\" id=\"radio146\" checked name=\"stepin50\" value=\"option145\" />\n                                                        <label htmlFor=\"radio146\">Smart contract integration <i class=\"help-circle\">\n                                                            <i class=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text\" aria-hidden=\"true\"></i>\n                                                        </i></label>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"colorPlateMBox\">\n                                                <div class=\"colorPlateTitle01\">swapMulti</div>\n                                                <div className='settingCodeBx'>\n                                                    function swapMulti ( <br />\n                                                IERC20[] memory tokens,<br />\n                                                uint256 amounts,<br />\n                                                uint256 minReturn,<br />\n                                                uint256[] memory distribution,<br />\n                                                uint256[] memory flags <br />\n                                                ) public payable returns (uint256)\n                                                </div>\n                                                <div className='settingCodeBxText01'>\n                                                    Swap <span>amount</span> first element of <span>tokens</span> of the latest element. The length of <span>flags</span> array should be 1 element less than <span>tokens</span> array length. Each element from <span>flags</span> arrau corresponds to 2 neighboring elements from <span>tokens</span> array.\n                                                </div>\n                                                <div className='setCodeTable'>\n                                                    <table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"10\">\n                                                        <tbody>\n                                                            <tr>\n                                                                <th align=\"left\" valign=\"middle\" scope=\"col\">Params</th>\n                                                                <th align=\"left\" valign=\"middle\" scope=\"col\">Type</th>\n                                                                <th align=\"left\" valign=\"middle\" scope=\"col\">Description</th>\n                                                            </tr>\n                                                            <tr>\n                                                                <td align=\"left\" valign=\"middle\">tokens</td>\n                                                                <td align=\"left\" valign=\"middle\">IERC20[]</td>\n                                                                <td align=\"left\" valign=\"middle\">Addresses of tokens or <span>address(0)</span> for Ether</td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td align=\"left\" valign=\"middle\">amount</td>\n                                                                <td align=\"left\" valign=\"middle\">uint256</td>\n                                                                <td align=\"left\" valign=\"middle\">Amount of tokens</td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td align=\"left\" valign=\"middle\">minReturn</td>\n                                                                <td align=\"left\" valign=\"middle\">uint256</td>\n                                                                <td align=\"left\" valign=\"middle\">Minimum expected return, else revert transaction</td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td align=\"left\" valign=\"middle\">distribution</td>\n                                                                <td align=\"left\" valign=\"middle\">uint256[]</td>\n                                                                <td align=\"left\" valign=\"middle\">Array of weights for volume distribution (returned by <span>getRespectReturn</span>)<br /></td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td align=\"left\" valign=\"middle\">flags</td>\n                                                                <td align=\"left\" valign=\"middle\">uint256[]</td>\n                                                                <td align=\"left\" valign=\"middle\">The sequence of flags for enabling and disabling some features (default: <span>0</span>), see flags description</td>\n                                                            </tr>\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"gwFormSFormbox03\">\n                                        <button className=\"gwFormBTN01\">GET YOUR OWN LICENSE FOR FREE</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {/* <!--======================= SWAP BLOCK END =====================--> */}\n                    </div>\n                    {/* <!--======================= WALLET POPUP START =====================--> */}\n                    <WalletPopup web3={this.state.web3} web3Config={web3Config}></WalletPopup>\n                    {/* <!--======================= WALLET POPUP END =====================-->\n                    <!--======================= COIN POPUP START =====================--> */}\n                    <CoinPopup web3={this.state.web3} web3Config={web3Config} setCurrency={this.setSendCurrency} popId={\"sendCurPop\"} opositeSelectedCurrrency={this.state.selectedReceiveCurrency} selectedCurrrency={this.state.selectedSendCurrency}></CoinPopup>\n                    <CoinPopup web3={this.state.web3} web3Config={web3Config} setCurrency={this.setReceiveCurrency} popId={\"receiveCurPop\"} opositeSelectedCurrrency={this.state.selectedSendCurrency} selectedCurrrency={this.state.selectedReceiveCurrency}></CoinPopup>\n                    {/* <!--======================= COIN POPUP END =====================-->\n                    <!--======================= SIDE POPUP START =====================--> */}\n                    <SidePopup web3={this.state.web3} web3Config={web3Config}></SidePopup>\n                    {/* <!--======================= SIDE POPUP END =====================--> */}\n                    {/* <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/gnaJlUA20lk\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> */}\n                </div>\n            </main>\n        )\n    }\n}","/var/www/html/SmartSwap_frontend/src/pages/smartSwapLicence.js",["168","169","170","171","172","173","174","175","176","177","178","179","180"],"import React, { PureComponent, lazy, Suspense } from \"react\";\nimport {\n    Redirect,\n} from 'react-router-dom';\nimport web3Js from 'web3';\nimport Web3 from \"web3\";\nimport web3Config from \"../config/web3Config\";\nimport Validation from \"../helper/validation\";\nimport swapFactoryAbi from \"../abis/swapFactory.json\";\nimport tokenAbi from \"../abis/tokenAbi.json\";\nimport constantConfig from \"../config/constantConfig\";\nimport notificationConfig from \"../config/notificationConfig\";\nimport SwapFactoryContract from \"../helper/swapFactoryContract\";\nimport { LoopCircleLoading } from 'react-loadingg';\nimport CONSTANT from \"../constants\";\nimport data from \"../config/constantConfig\";\nimport Header from \"../components/Header\";\nimport RightSideMenu from \"../components/RightSideMenu\";\nimport WalletPopup from \"../components/WalletPopup\";\nimport CoinPopup from \"../components/CoinPopup\";\nimport SidePopup from \"../components/SidePopup\";\n\nconst $ = window.$;\n\nexport default class SmartSwapLicence extends PureComponent {\n\n    constructor(props) {\n        super();\n        this.setSendCurrency = this.setSendCurrency.bind(this)\n        this.setReceiveCurrency = this.setReceiveCurrency.bind(this)\n        this.state = {\n            web3: null,\n            web3Check: false,\n            btnClick: false,\n            swapFactory: null,\n            swapLoading: false,\n            selectedSendCurrency: \"BNB\",\n            selectedReceiveCurrency: \"ETH\",\n            instanceSwapFactoryBinance: null,\n            instanceSwapFactoryEthereum: null,\n            tokenInstance: {},\n            txLink: \"\",\n            wrapBox: \"swap\",\n            txIdSent: null,\n            txSentStatus: \"pending\",\n            txSentTime: null,\n            tokenReceive: \"0\",\n            txReceiveTime: null,\n            txIdReceive: null,\n            txLinkSend: '',\n            txLinkReturn: '',\n            receiveFundAmount: \"\",\n            sendFundAmount: \"\",\n            actualSendFundAmount: 0,\n            approxReceiveFundAmount: 0,\n            showLedger: false,\n            currencyPrices: {},\n            estimatedGasFee: \"0\",\n            tokenBalances: {\n                \"JNTR\": 0,\n                \"JNTR/b\": 0,\n                \"JNTR/e\": 0,\n                \"JNTR_APPROVED\": 0,\n                \"JNTR/b_APPROVED\": 0,\n                \"JNTR/e_APPROVED\": 0,\n            }\n        }\n    }\n\n    componentWillMount = async () => {\n        await this.fetchPrice();\n    }\n\n    componentDidMount = async () => {\n        this.setState({\n            web3Ethereum: new Web3(new Web3.providers.WebsocketProvider(CONSTANT.RPC_PROVIDER_ETHEREUM)),\n            web3Binance: new Web3(new Web3.providers.HttpProvider(CONSTANT.RPC_PROVIDER_BINANCE))\n        })\n\n        this.setState({\n            loading: true\n        }, async () => {\n            await this.initInstance();\n        })\n    };\n\n    async initInstance() {\n        let { web3Binance, web3Ethereum } = this.state;\n        let instanceSwapFactoryBinance = null;\n        let instanceSwapFactoryEthereum = null;\n\n        instanceSwapFactoryBinance = new web3Binance.eth.Contract(swapFactoryAbi, constantConfig[CONSTANT.NETWORK_ID.BINANCE].swapFactoryContract);\n        instanceSwapFactoryEthereum = new web3Ethereum.eth.Contract(swapFactoryAbi, constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].swapFactoryContract);\n\n        let tokenInstance = {};\n        tokenInstance[\"JNTR\"] = new web3Binance.eth.Contract(tokenAbi, \"0x1350044d6a653E87Ed3384DC1D2f6b1A7F138e0A\");\n        tokenInstance[\"JNTR/b\"] = new web3Binance.eth.Contract(tokenAbi, \"0x001667842cc59cadb0a335bf7c7f77b3c75f41c2\");\n        tokenInstance[\"JNTR/e\"] = new web3Ethereum.eth.Contract(tokenAbi, \"0x40a99d086d517f06f9d1ed564f51ef75b8f7f042\");\n\n        this.setState({\n            instanceSwapFactoryBinance,\n            instanceSwapFactoryEthereum,\n            tokenInstance\n        }, () => {\n            this.listenTransferEvent()\n        });\n    }\n\n    updateTokenBalance = async () => {\n\n        if (this.state.web3 !== null) {\n\n            const { tokenInstance, tokenBalances, web3 } = this.state;\n            // Balances\n            tokenBalances[\"JNTR\"] = web3Js.utils.fromWei(await tokenInstance[\"JNTR\"].methods.balanceOf(web3Config.getAddress()).call(), \"ether\");\n            tokenBalances[\"JNTR/b\"] = web3Js.utils.fromWei(await tokenInstance[\"JNTR/b\"].methods.balanceOf(web3Config.getAddress()).call(), \"ether\");\n            tokenBalances[\"JNTR/e\"] = web3Js.utils.fromWei(await tokenInstance[\"JNTR/e\"].methods.balanceOf(web3Config.getAddress()).call(), \"ether\");\n\n            // Approve Balances\n            tokenBalances[\"JNTR_APPROVED\"] = web3Js.utils.fromWei(await tokenInstance[\"JNTR\"].methods.allowance(web3Config.getAddress(), \"0x309208d15fba3207be6c760771ca3b4846e1be93\").call(), \"ether\");\n            tokenBalances[\"JNTR/b_APPROVED\"] = web3Js.utils.fromWei(await tokenInstance[\"JNTR/b\"].methods.allowance(web3Config.getAddress(), \"0x309208d15fba3207be6c760771ca3b4846e1be93\").call(), \"ether\");\n            tokenBalances[\"JNTR/e_APPROVED\"] = web3Js.utils.fromWei(await tokenInstance[\"JNTR/e\"].methods.allowance(web3Config.getAddress(), \"0xeaf41806fcc2a3893a662dbba7a111630f9f6704\").call(), \"ether\");\n            this.setState({\n                tokenBalances: tokenBalances\n            }, () => {\n                this.forceUpdate();\n                // this.updateButton()\n            })\n        }\n    }\n\n    async connectWallet() {\n        this.setState({ btnClick: true });\n        await web3Config.connectWallet(0);\n        let networkId = web3Config.getNetworkId();\n\n        if (!constantConfig.allowedNetwork.includes(networkId)) {\n            notificationConfig.error(\"Please Select Kovan or BSC Test Network\");\n            this.setState({ btnClick: false });\n            return\n        }\n\n        if (constantConfig.tokenDetails[this.state.selectedSendCurrency].networkId !== networkId && networkId === 97) {\n            notificationConfig.warning(\"Change metamask network to Ethereum!\")\n            return\n        } else if (constantConfig.tokenDetails[this.state.selectedSendCurrency].networkId !== networkId && networkId === 42) {\n            notificationConfig.warning(\"Change metamask network to Binance!\")\n            return\n        }\n\n\n        this.setState({\n            web3: web3Config.getWeb3(),\n            btnClick: false\n        }, () => {\n            // this.changeCurrency(false)\n            setInterval(() => {\n                this.updateTokenBalance()\n            }, 3000)\n        })\n    }\n\n    async swap() {\n        let web3 = web3Config.getWeb3();\n        let networkId = web3Config.getNetworkId();\n        let address = web3Config.getAddress();\n\n        if (web3 === null)\n            return 0\n\n        let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\n\n        let { sendFundAmount } = this.state;\n        if (sendFundAmount === \"\" || sendFundAmount === 0) {\n            notificationConfig.error(\"Enter value to swap\")\n            return;\n        }\n\n        let actualSendFundAmount = (await this.getActualAmount(sendFundAmount, this.state.selectedSendCurrency)).toString()\n\n        let value = 0, swapAmount = 0;\n        try {\n            value = web3Js.utils\n                .toWei(actualSendFundAmount.toString());\n        } catch (e) {\n            value = (actualSendFundAmount * 10 ** 18).toFixed(0);\n        }\n        swapAmount = value;\n\n        if (constantConfig.tokenDetails[this.state.selectedSendCurrency].approveRequire) {\n            value = 0;\n        }\n\n        swapFactory.swap(CONSTANT.currencyAddresses[this.state.selectedSendCurrency], CONSTANT.currencyAddresses[this.state.selectedReceiveCurrency], value, swapAmount, (hash) => {\n            this.setState({\n                swapLoading: true,\n                txIdSent: hash,\n                txLinkSend: data[networkId].explorer + \"/tx/\" + hash\n            });\n        }, () => {\n            // this.init()\n            this.setState({\n                swapLoading: false,\n                showLedger: true,\n                wrapBox: \"success\"\n            });\n            notificationConfig.success(\"Swap Success\");\n        })\n    }\n\n    async approve() {\n        let web3 = web3Config.getWeb3();\n        let networkId = web3Config.getNetworkId();\n        let address = web3Config.getAddress();\n\n        if (web3 === null)\n            return 0\n\n        let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\n\n        swapFactory.approveJNTRTokenForSwapFactory(constantConfig.tokenDetails[this.state.selectedSendCurrency].address, constantConfig[networkId].swapFactoryContract, (hash) => {\n            this.setState({\n                approveLoading: true,\n                // txIdSent: hash,\n                // txLinkSend: data[networkId].explorer + \"/tx/\" + hash\n            });\n        }, () => {\n            // this.init()\n            this.setState({\n                approveLoading: false,\n                // showLedger: true,\n                // wrapBox: \"success\"\n            });\n            notificationConfig.success(\"Approve Success\");\n        })\n    }\n\n    async estimateGasAndFee() {\n        let web3 = web3Config.getWeb3();\n        let networkId = web3Config.getNetworkId();\n        let address = web3Config.getAddress();\n\n        if (web3 === null)\n            return 0\n\n        let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\n\n        let { sendFundAmount } = this.state;\n        if (sendFundAmount === \"\" || sendFundAmount === 0) {\n            notificationConfig.error(\"Enter value to swap\")\n            return;\n        }\n\n        let actualSendFundAmount = (await this.getActualAmount(sendFundAmount, this.state.selectedSendCurrency)).toString()\n\n        let value = 0, swapAmount = 0;\n        try {\n            value = web3Js.utils.toWei(actualSendFundAmount.toString());\n        } catch (e) {\n            value = (actualSendFundAmount * 10 ** 18).toFixed(0);\n        }\n\n        swapAmount = value;\n\n        if (constantConfig.tokenDetails[this.state.selectedSendCurrency].approveRequire) {\n            value = 0;\n        }\n\n        swapFactory.estimateSwapGasFee(CONSTANT.currencyAddresses[this.state.selectedSendCurrency], CONSTANT.currencyAddresses[this.state.selectedReceiveCurrency], value, swapAmount, \"350000\", (estGas) => {\n            this.setState({\n                estimatedGasFee: estGas\n            })\n        })\n    }\n\n    async recivedToken(e) {\n        let dollarAmount = Number(e.target.value)\n        this.setState({\n            sendFundAmount: dollarAmount\n        }, () => {\n            this.setAmount(dollarAmount)\n        })\n    }\n\n    async setAmount(dollarAmount) {\n        this.setState({\n            actualSendFundAmount: await this.getActualAmount(dollarAmount, this.state.selectedSendCurrency),\n            approxReceiveFundAmount: await this.getActualAmount(dollarAmount, this.state.selectedReceiveCurrency)\n        }, () => {\n            this.estimateGasAndFee()\n        })\n    }\n\n    async getActualAmount(dollarAmount, currency) {\n        if (dollarAmount <= 0)\n            return 0;\n        else\n            return (dollarAmount / this.state.currencyPrices[currency])\n    }\n\n    async fetchPrice() {\n        var { currencyPrices } = this.state;\n        const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=ethereum,binancecoin&vs_currencies=usd`);\n        const json = await response.json();\n        currencyPrices[\"ETH\"] = json[\"ethereum\"][\"usd\"];\n        currencyPrices[\"BNB\"] = json[\"binancecoin\"][\"usd\"];\n        currencyPrices[\"JNTR/e\"] = 0.062166;\n        currencyPrices[\"JNTR/b\"] = 0.054237;\n        currencyPrices[\"JNTR\"] = 0.5320;\n        this.setState({\n            currencyPrices\n        })\n    }\n\n    changeCurrency(check) {\n        // if(check && this.state.web3 === null){\n        let selectedSendCurrency = this.state.selectedSendCurrency;\n        let selectedReceiveCurrency = this.state.selectedReceiveCurrency;\n        this.setState({\n            selectedSendCurrency: selectedReceiveCurrency,\n            selectedReceiveCurrency: selectedSendCurrency\n        }, () => {\n            if (this.state.sendFundAmount !== \"\")\n                this.setAmount(this.state.sendFundAmount);\n            this.forceUpdate()\n        })\n        // } else if(this.state.web3 !== null && check) {\n        //     notificationConfig.warning(\"Please change metamask network!\")\n        // }\n    }\n\n    setSendCurrency(currency) {\n        this.setState({ selectedSendCurrency: currency }, () => {\n            this.closePopup(\"sendCurPop\");\n        })\n\n    }\n\n    setReceiveCurrency(currency) {\n        this.setState({ selectedReceiveCurrency: currency }, () => {\n            this.closePopup(\"receiveCurPop\");\n        })\n    }\n\n    openPopup(id) {\n        $(\"#\" + id).fadeIn();\n    }\n\n    closePopup(id) {\n        $(\"#\" + id).fadeOut();\n    }\n\n    changeWrapBox(which) {\n        this.setState({\n            wrapBox: which,\n            txIdSent: null,\n            txSentStatus: \"pending\",\n            txSentTime: null,\n            tokenReceive: \"0\",\n            txReceiveTime: null,\n            txIdReceive: null,\n            txLinkSend: '',\n            txLinkReturn: '',\n            receiveFundAmount: \"\",\n            sendFundAmount: \"\",\n            actualSendFundAmount: 0,\n            approxReceiveFundAmount: 0,\n            showLedger: false\n        })\n    }\n\n    async listenTransferEvent() {\n        const { instanceSwapFactoryEthereum, instanceSwapFactoryBinance } = this.state;\n        if (instanceSwapFactoryEthereum !== null) {\n            instanceSwapFactoryEthereum.events.ClaimApprove({\n                fromBlock: 'latest'\n            }, function (error, event) {\n                console.log(event);\n            })\n                .on(\"connected\", function (subscriptionId) {\n                    console.log(subscriptionId);\n                })\n                .on('data', function (event) {\n                    console.log(event); // same results as the optional callback above\n                    if ((event.returnValues.user).toLocaleLowerCase() === web3Config.getAddress().toLocaleLowerCase()) {\n                        let txLinkReturn = constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].explorer + '/tx/' + event.transactionHash;\n                        let returnAmount = web3Js.utils.fromWei((event.returnValues.amountA).toLocaleLowerCase());\n                        this.updateLedgerAfterResponse(event.transactionHash, txLinkReturn, returnAmount)\n                    }\n                }.bind(this))\n                .on('changed', function (event) {\n                    console.log(event)\n                    // remove event from local database\n                })\n                .on('error', function (error, receipt) { // If the transaction was rejected by the network with a receipt, the second parameter will be the receipt.\n                    console.log(error, receipt)\n                });\n        }\n\n        if (instanceSwapFactoryBinance !== null) {\n            let { web3Binance } = this.state;\n\n            let initialBlock = await web3Binance.eth.getBlockNumber();\n\n            setInterval(async () => {\n                const currentBlock = await web3Binance.eth.getBlockNumber();\n\n                instanceSwapFactoryBinance.getPastEvents(\"allEvents\",\n                    {\n                        fromBlock: initialBlock,\n                        toBlock: currentBlock // You can also specify 'latest'          \n                    })\n                    .then(async function (result) {\n                        for (let i = 0; i < result.length; i++) {\n                            console.log(result[i].event)\n                            if (result[i].event === \"ClaimApprove\") {\n                                console.log(result[i])\n                                if ((result[i].returnValues.user).toLocaleLowerCase() === web3Config.getAddress().toLocaleLowerCase()) {\n                                    let txLinkReturn = constantConfig[CONSTANT.NETWORK_ID.BINANCE].explorer + '/tx/' + result[i].transactionHash;\n                                    let returnAmount = web3Js.utils.fromWei(result[i].returnValues.amountA).toLocaleLowerCase();\n                                    this.updateLedgerAfterResponse(result[i].transactionHash, txLinkReturn, returnAmount)\n                                }\n                            }\n                        }\n                    }.bind(this))\n                    .catch((err) => console.error(err));\n                initialBlock = currentBlock;\n            }, 10000)\n        }\n    }\n\n    updateLedgerAfterResponse(hash, txLinkReturn, returnAmount) {\n        this.setState({\n            isSendingOrder: false,\n            txSentStatus: \"Success\",\n            txSentTime: new Date().toUTCString(),\n            tokenReceive: \"2\",\n            txReceiveTime: new Date().toUTCString(),\n            txIdReceive: hash,\n            whichButton: \"4\",\n            txLinkReturn: txLinkReturn,\n            receiveFundAmount: returnAmount\n        }, async () => {\n            //   await this.enableInputs();\n        })\n    }\n\n    scrollToLedger() {\n        $(\"html\").animate({ scrollTop: 650 });\n    }\n\n    render() {\n        return (\n            <main id=\"main\" className=\"smartSwap\">\n\n\n                <div className=\"fullscreen-bg\">\n                    <div className=\"fsbg_sad01\"></div>\n                    <div className=\"fsbg_container\">\n                        <video loop autoPlay muted className=\"fullscreen-bg__video\" >\n                            <source src=\"video/smartswap.webm\" type=\"video/webm\" />\n                            <source src=\"video/smartswap.mp4\" type=\"video/mp4\" />\n                            <source src=\"video/smartswap.ogv\" type=\"video/ogg\" />\n                        </video>\n                    </div>\n                </div> \n                <div className=\"main\">\n                    {/* <!--======================= RIGHT SIDE MENU =====================--> */}\n                    <RightSideMenu web3={this.state.web3} web3Config={web3Config}></RightSideMenu>\n                    {/* <!--======================= RIGHT SIDE MENU END  =====================-->\n                    <!--======================= HEADER START =====================--> */}\n                    <Header web3={this.state.web3} web3Config={web3Config}></Header>\n                    {/* <!--======================= HEADER END =====================--> */}\n                    <div className=\"mainBlock\"> \n                        {/* <!--======================= SWAP BLOCK START =====================--> */}\n                        <div className=\"reserve-Block\">\n                            <div className=\"container-Grid\">\n                                <div className=\"smeTitle01-v2\">Apply for FREE Smartswap license</div>\n                            </div>\n                            <div className=\"swap-textBox\">\n                                <div className=\"container-Grid\">\n\n                                    <div class=\"form-Block\">\n                                        <div class=\"email-Box\">\n                                            <input type=\"text\" placeholder=\"Your email address\" />\n                                            <a href=\"javascript:void(0);\" class=\"btn-Continue ani-1\">Continue</a>\n                                        </div>\n                                        <div class=\"form-Wrap\">\n                                            <div class=\"form-Box\">\n                                                <label>Full Name</label>\n                                                <input type=\"text\" />\n                                            </div>\n                                            <div class=\"form-Box\">\n                                                <label>Phone</label>\n                                                <input type=\"text\" />\n                                            </div>\n                                            <div class=\"form-Box\">\n                                                <label>Company Name</label>\n                                                <input type=\"text\" />\n                                            </div>\n                                            <div class=\"form-Box\">\n                                                <label>Company Website</label>\n                                                <input type=\"text\" />\n                                            </div>\n                                            <div class=\"form-Box\">\n                                                <label>Daily Active Users</label>\n                                                <input type=\"text\" />\n                                            </div>\n                                            <div class=\"form-Box\">\n                                                <a href=\"javascript:void(0);\" class=\"btn-Apply ani-1\">apply for social currency licence</a>\n                                            </div>\n                                        </div>\n                                    </div>\n\n\n\n\n                                </div>\n                            </div>\n                        </div>\n\n\n                        {/* <div class=\"follow-Block\">\n                            <div class=\"container-Grid\">\n                                <div class=\"Title03\">Your SmartSwap request has been received. We will be in touch shortly. Meanwhile, follow us on your favorite social media platforms.</div>\n                                <ul class=\"social-Icons\">\n                                    <li><a href=\"javascript:void(0);\" class=\"ani-1\"><i class=\"fab fa-linkedin-in\"></i></a></li>\n                                    <li><a href=\"javascript:void(0);\" class=\"ani-1\"><i class=\"fab fa-facebook-f\"></i></a></li>\n                                    <li><a href=\"javascript:void(0);\" class=\"ani-1\"><i class=\"fab fa-twitter\"></i></a></li>\n                                </ul>\n                            </div>\n                        </div> */}\n                        {/* <!--======================= SWAP BLOCK END =====================--> */}\n                    </div>\n                    {/* <!--======================= WALLET POPUP START =====================--> */}\n                    <WalletPopup web3={this.state.web3} web3Config={web3Config}></WalletPopup>\n                    {/* <!--======================= WALLET POPUP END =====================-->\n                    <!--======================= COIN POPUP START =====================--> */}\n                    <CoinPopup web3={this.state.web3} web3Config={web3Config} setCurrency={this.setSendCurrency} popId={\"sendCurPop\"} opositeSelectedCurrrency={this.state.selectedReceiveCurrency} selectedCurrrency={this.state.selectedSendCurrency}></CoinPopup>\n                    <CoinPopup web3={this.state.web3} web3Config={web3Config} setCurrency={this.setReceiveCurrency} popId={\"receiveCurPop\"} opositeSelectedCurrrency={this.state.selectedSendCurrency} selectedCurrrency={this.state.selectedReceiveCurrency}></CoinPopup>\n                    {/* <!--======================= COIN POPUP END =====================-->\n                    <!--======================= SIDE POPUP START =====================--> */}\n                    <SidePopup web3={this.state.web3} web3Config={web3Config}></SidePopup>\n                    {/* <!--======================= SIDE POPUP END =====================--> */}\n                    {/* <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/gnaJlUA20lk\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> */}\n                </div>\n            </main>\n        )\n    }\n}","/var/www/html/SmartSwap_frontend/src/pages/ownLicence.js",["181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211"],"import React, { PureComponent, lazy, Suspense } from \"react\";\nimport InputRange from \"react-input-range\";\n\nimport { Redirect } from \"react-router-dom\";\nimport web3Js from \"web3\";\nimport Web3 from \"web3\";\nimport web3Config from \"../config/web3Config\";\nimport Validation from \"../helper/validation\";\nimport swapFactoryAbi from \"../abis/swapFactory.json\";\nimport tokenAbi from \"../abis/tokenAbi.json\";\nimport constantConfig from \"../config/constantConfig\";\nimport notificationConfig from \"../config/notificationConfig\";\nimport SwapFactoryContract from \"../helper/swapFactoryContract\";\nimport { LoopCircleLoading } from \"react-loadingg\";\nimport CONSTANT from \"../constants\";\nimport data from \"../config/constantConfig\";\nimport WithDrawToken from \"../components/withdraw_token\";\nimport Header from \"../components/Header\";\nimport RightSideMenu from \"../components/RightSideMenu\";\nimport WalletPopup from \"../components/WalletPopup\";\nimport CoinPopup from \"../components/CoinPopup\";\nimport SidePopup from \"../components/SidePopup\";\nimport Collapse from \"@kunukn/react-collapse\";\nimport CreateLicence from \"../components/CreateLicense\";\nimport axios from \"axios\";\nimport Highlight from \"react-highlight\";\nimport { ChromePicker } from \"react-color\";\nimport ReimbursementContract from \"../helper/reimbursementContract\";\nimport { isValidAddress } from \"ethereumjs-util\";\nimport reimbursementAbi from \"../abis/reimbursementAbi.json\";\nimport tokenVaultAbi from \"../abis/tokenVaultAbi.json\";\nimport DepositToken from \"../components/Deposit-withdraw\";\n\nconst $ = window.$;\n\nconst validatesubDomain = (value) => {\n  const reg = /^[a-zA-Z0-9&_-]+$/;\n  const isvalid = reg.test(value);\n  return isvalid;\n};\nconst isValidURL = (string) => {\n  // var res = string.match(\n  //   /((http|https):\\/\\/.)(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g\n  // );\n  var res = string.match(\n    /^((ftp|http|https):\\/\\/)?(www.)?(?!.*(ftp|http|https|www.))[a-zA-Z0-9_-]+(\\.[a-zA-Z]+)+((\\/)[\\w#]+)*(\\/\\w+\\?[a-zA-Z0-9_]+=\\w+(&[a-zA-Z0-9_]+=\\w+)*)?$/gm\n  );\n  return res !== null;\n};\nconst toBase64 = (file) =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = (error) => reject(error);\n  });\n\nconst copyAffiliateLink = (e, id) => {\n  e.preventDefault();\n  var copyText = document.getElementById(id);\n  copyText.select();\n  document.execCommand(\"copy\");\n  notificationConfig.success(\"Copied Successfully!\")\n};\n\nexport default class ownLicence extends PureComponent {\n  constructor(props) {\n    super();\n    this.setSendCurrency = this.setSendCurrency.bind(this);\n    this.setReceiveCurrency = this.setReceiveCurrency.bind(this);\n    this.changeTypeofLicense = this.changeTypeofLicense.bind(this);\n    this._onChangeRadio = this._onChangeRadio.bind(this);\n    this.getFees = this.getFees.bind(this);\n    // this.updateLicenseAddress = this.updateLicenseAddress.bind(this)\n    const { location } = props;\n    this.state = {\n      value: 0,\n      isOpen1: false,\n      web3: null,\n      web3Check: false,\n      btnClick: false,\n      swapFactory: null,\n      swapLoading: false,\n      selectedSendCurrency: \"BNB\",\n      selectedReceiveCurrency: \"ETH\",\n      instanceReimbursementBinance: null,\n      instanceReimbursementEthereum: null,\n      tokenInstance: {},\n      txLink: \"\",\n      wrapBox: \"swap\",\n      txIdSent: null,\n      txSentStatus: \"pending\",\n      txSentTime: null,\n      tokenReceive: \"0\",\n      txReceiveTime: null,\n      txIdReceive: null,\n      txLinkSend: \"\",\n      txLinkReturn: \"\",\n      receiveFundAmount: \"\",\n      sendFundAmount: \"\",\n      actualSendFundAmount: 0,\n      approxReceiveFundAmount: 0,\n      showLedger: false,\n      currencyPrices: {},\n      estimatedGasFee: \"0\",\n      tokenBalances: {\n        JNTR: 0,\n        \"JNTR/b\": 0,\n        \"JNTR/e\": 0,\n        JNTR_APPROVED: 0,\n        \"JNTR/b_APPROVED\": 0,\n        \"JNTR/e_APPROVED\": 0,\n      },\n      showFeeInpt: true,\n      zeroIntegrationShow: true,\n      \"bsc\": false,\n      \"ethereum\": false,\n      \"polygon\": false,\n      bgimage:\n        typeof location.state === \"undefined\"\n          ? \"\"\n          : location.state.cloneData\n            ? location.state.cloneData.bgimage\n            : \"\",\n      logoImage:\n        typeof location.state === \"undefined\"\n          ? \"\"\n          : location.state.cloneData\n            ? location.state.cloneData.logoImage\n            : \"\",\n      error: \"\",\n      isloading: false,\n      subDomain:\n        typeof location.state === \"undefined\"\n          ? \"\"\n          : location.state.cloneData\n            ? location.state.cloneData.subDomain\n            : \"\",\n      logoUrl:\n        typeof location.state === \"undefined\"\n          ? \"\"\n          : location.state.cloneData\n            ? location.state.cloneData.logoUrl\n            : \"\",\n      primaryColor:\n        typeof location.state === \"undefined\"\n          ? \"#fff\"\n          : location.state.cloneData\n            ? location.state.cloneData.primaryColor\n            : \"#fff\",\n      showPrimaryColor: false,\n      showSwapButtonColor: false,\n      secondaryColor:\n        typeof location.state === \"undefined\"\n          ? \"#5c6bc0\"\n          : location.state.cloneData\n            ? location.state.cloneData.secondaryColor\n            : \"#5c6bc0\",\n      swapButtonColor:\n        typeof location.state === \"undefined\"\n          ? \"#91dc27\"\n          : location.state.cloneData\n            ? location.state.cloneData.swapButtonColor\n            : \"#91dc27\",\n      showSecondaryColor: false,\n      formData: {\n        primaryColor: { value: \"\", error: \"\", errormsg: \"\" },\n        secondaryColor: { value: \"\", error: \"\", errormsg: \"\" },\n        subDomain: { value: \"\", error: \"\", errormsg: \"\" },\n      },\n      visitDomain: \"\",\n      fontStyle:\n        typeof location.state === \"undefined\"\n          ? \"Default\"\n          : location.state.cloneData\n            ? location.state.cloneData.fontStyle\n            : \"Default\",\n      backgroundOverLay:\n        typeof location.state === \"undefined\"\n          ? \"60\"\n          : location.state.cloneData\n            ? location.state.cloneData.backgroundOverLay\n            : \"60\",\n      cloneData:\n        typeof location.state === \"undefined\"\n          ? {}\n          : location.state.cloneData\n            ? location.state.cloneData\n            : {},\n      typeofLicense: \"Zero integration\",\n      newColor: false,\n      changeFee: \"Yes\",\n      changeText:\n        typeof location.state === \"undefined\"\n          ? \"Yes\"\n          : location.state.cloneData\n            ? location.state.cloneData.changeText\n            : \"Yes\",\n      sideBar:\n        typeof location.state === \"undefined\"\n          ? \"true\"\n          : location.state.cloneData\n            ? location.state.cloneData.sideBar\n            : \"true\",\n      displayToken: \"Display token lists\",\n      bscLicenseAddress: CONSTANT.ZERO_ADDRESS,\n      ethLicenseAddress: CONSTANT.ZERO_ADDRESS,\n      bscLicenseFees: 0,\n      ethLicenseFees: 0,\n      bscLicenseFeesCurrent: 0,\n      ethLicenseFeesCurrent: 0,\n      bscLicenseTokenBalance: 0,\n      ethLicenseTokenBalance: 0,\n      allowClone: false,\n      licenseeData: null,\n      depositWithdrawNetwork: null,\n      depositWithdrawVaultAddress: null,\n      depositTokenAddress: CONSTANT.ZERO_ADDRESS\n    };\n  }\n  componentWillMount = async () => {\n    await this.fetchPrice();\n  };\n  componentDidMount = async () => {\n    window.scrollTo(0, 0);\n    this.setState({\n      web3Ethereum: new Web3(\n        new Web3.providers.WebsocketProvider(CONSTANT.RPC_PROVIDER_ETHEREUM)\n      ),\n      web3Binance: new Web3(\n        new Web3.providers.HttpProvider(CONSTANT.RPC_PROVIDER_BINANCE)\n      ),\n    });\n    this.setState(\n      {\n        loading: true,\n        licenseeData: web3Config.getLicenseeData()\n      },\n      async () => {\n        await this.initInstance();\n      }\n    );\n    console.log(\"-------------license-data-------------------------------------\", web3Config.getLicenseeData())\n  };\n  async initInstance() {\n    let { web3Binance, web3Ethereum } = this.state;\n    let instanceReimbursementBinance = null;\n    let instanceReimbursementEthereum = null;\n    instanceReimbursementBinance = new web3Binance.eth.Contract(\n      reimbursementAbi,\n      constantConfig[CONSTANT.NETWORK_ID.BINANCE].reimbursementContract\n    );\n    instanceReimbursementEthereum = new web3Ethereum.eth.Contract(\n      reimbursementAbi,\n      constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].reimbursementContract\n    );\n\n    this.setState(\n      {\n        instanceReimbursementBinance,\n        instanceReimbursementEthereum,\n      },\n      () => {\n        // this.listenTransferEvent();\n      }\n    );\n  }\n  updateTokenBalance = async () => {\n    if (this.state.web3 !== null) {\n      const { tokenInstance, tokenBalances, web3 } = this.state;\n      // Balances\n      tokenBalances[\"JNTR\"] = web3Js.utils.fromWei(\n        await tokenInstance[\"JNTR\"].methods\n          .balanceOf(web3Config.getAddress())\n          .call(),\n        \"ether\"\n      );\n      tokenBalances[\"JNTR/b\"] = web3Js.utils.fromWei(\n        await tokenInstance[\"JNTR/b\"].methods\n          .balanceOf(web3Config.getAddress())\n          .call(),\n        \"ether\"\n      );\n      tokenBalances[\"JNTR/e\"] = web3Js.utils.fromWei(\n        await tokenInstance[\"JNTR/e\"].methods\n          .balanceOf(web3Config.getAddress())\n          .call(),\n        \"ether\"\n      );\n      // Approve Balances\n      tokenBalances[\"JNTR_APPROVED\"] = web3Js.utils.fromWei(\n        await tokenInstance[\"JNTR\"].methods\n          .allowance(\n            web3Config.getAddress(),\n            \"0x309208d15fba3207be6c760771ca3b4846e1be93\"\n          )\n          .call(),\n        \"ether\"\n      );\n      tokenBalances[\"JNTR/b_APPROVED\"] = web3Js.utils.fromWei(\n        await tokenInstance[\"JNTR/b\"].methods\n          .allowance(\n            web3Config.getAddress(),\n            \"0x309208d15fba3207be6c760771ca3b4846e1be93\"\n          )\n          .call(),\n        \"ether\"\n      );\n      tokenBalances[\"JNTR/e_APPROVED\"] = web3Js.utils.fromWei(\n        await tokenInstance[\"JNTR/e\"].methods\n          .allowance(\n            web3Config.getAddress(),\n            \"0xeaf41806fcc2a3893a662dbba7a111630f9f6704\"\n          )\n          .call(),\n        \"ether\"\n      );\n      this.setState(\n        {\n          tokenBalances: tokenBalances,\n        },\n        () => {\n          this.forceUpdate();\n          // this.updateButton()\n        }\n      );\n    }\n  };\n  async connectWallet() {\n    this.setState({ btnClick: true });\n    await web3Config.connectWallet(0);\n    let networkId = web3Config.getNetworkId();\n    if (!constantConfig.allowedNetwork.includes(networkId)) {\n      notificationConfig.error(\"Please Select Kovan or BSC Test Network\");\n      this.setState({ btnClick: false });\n      return;\n    }\n    // if (\n    //   constantConfig.tokenDetails[this.state.selectedSendCurrency].networkId !==\n    //   networkId &&\n    //   networkId === 97\n    // ) {\n    //   notificationConfig.warning(\"Change metamask network to Ethereum!\");\n    //   return;\n    // } else if (\n    //   constantConfig.tokenDetails[this.state.selectedSendCurrency].networkId !==\n    //   networkId &&\n    //   networkId === 42\n    // ) {\n    //   notificationConfig.warning(\"Change metamask network to Binance!\");\n    //   return;\n    // }\n    this.setState(\n      {\n        web3: web3Config.getWeb3(),\n        btnClick: false,\n      },\n      async () => {\n        await this.getData([web3Config.getAddress()])\n        let licenseeData = await web3Config.getLicenseeData()\n        if (licenseeData !== null) {\n          const href = window.location.href;\n          const domaindata = href\n            .replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, \"\")\n            .split(\"/\")[0];\n          this.clearPreview();\n          this.setState({\n            licenseeData: licenseeData,\n            bscLicenseAddress: licenseeData.bscLicenseAddress,\n            ethLicenseAddress: licenseeData.ethLicenseAddress,\n            bscLicenseFees: licenseeData.bscLicenseAddress !== CONSTANT.ZERO_ADDRESS ? (await this.getFees(\"BSC\", licenseeData.bscLicenseAddress, constantConfig[CONSTANT.NETWORK_ID.BINANCE].swapFactoryContract)).fees : 0,\n            ethLicenseFees: licenseeData.ethLicenseAddress !== CONSTANT.ZERO_ADDRESS ? (await this.getFees(\"Ethereum\", licenseeData.ethLicenseAddress, constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].swapFactoryContract)).fees : 0,\n            bscLicenseTokenBalance: licenseeData.bscLicenseAddress !== CONSTANT.ZERO_ADDRESS ? (await this.getFees(\"BSC\", licenseeData.bscLicenseAddress, constantConfig[CONSTANT.NETWORK_ID.BINANCE].swapFactoryContract)).tokenBalance : 0,\n            ethLicenseTokenBalance: licenseeData.ethLicenseAddress !== CONSTANT.ZERO_ADDRESS ? (await this.getFees(\"Ethereum\", licenseeData.ethLicenseAddress, constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].swapFactoryContract)).tokenBalance : 0,\n            visitDomain: `http://${licenseeData.subDomain}.${domaindata}`,\n          }, () => {\n            this.setIsValidLicenseAddress()\n          });\n        }\n      }\n\n    );\n  }\n\n  async getFees(network, vaultAddress, projectContractAddress) {\n    let currInstance = null;\n    if (network === \"BSC\") {\n      currInstance = this.state.instanceReimbursementBinance;\n      let fees = Number(await currInstance.methods.getLicenseeFee(vaultAddress, projectContractAddress).call());\n      let tokenBalance = await currInstance.methods.getAvailableTokens(vaultAddress).call();\n      return { fees: fees, tokenBalance: web3Js.utils.fromWei(tokenBalance) };\n    } else if (network === \"Ethereum\") {\n      currInstance = this.state.instanceReimbursementEthereum;\n      let fees = Number(await currInstance.methods.getLicenseeFee(vaultAddress, projectContractAddress).call());\n      let tokenBalance = await currInstance.methods.getAvailableTokens(vaultAddress).call();\n      return { fees: fees, tokenBalance: web3Js.utils.fromWei(tokenBalance) };\n    }\n  }\n\n  getData = async (domain) => {\n    // this.setState({\n    //   isloading: true,\n    // });\n    try {\n      const res = await axios.get(\n        `https://wildcard.bswap.info:1830/api/v1/subdomain/getSubDomain/${domain[0]}`\n      );\n      console.log(res);\n      if (res.data.response_code === 200) {\n        if (isValidAddress(domain[0])) {\n          await web3Config.setLicenseeData(res.data.result)\n        } else {\n          // const r = document.querySelector(\":root\");\n          // r.style.setProperty(\"--text-color\", res.data.result.primaryColors);\n          // r.style.setProperty(\n          //   \"--button-bg-color\",\n          //   res.data.result.seconderyColor\n          // );\n          // r.style.setProperty(\n          //   \"--req-bg\",\n          //   `url(${res.data.result.backGroundImage})`\n          // );\n          // r.style.setProperty(\"--swap-btn-color\", res.data.result.swapButton);\n          // this.setState({\n          //   cloneData: {\n          //     bgimage: res.data.result.backGroundImage,\n          //     logoImage: res.data.result.logo,\n          //     subDomain: res.data.result.subDomain,\n          //     primaryColor: res.data.result.primaryColors,\n          //     secondaryColor: res.data.result.seconderyColor,\n          //     fontStyle: res.data.result.fontStyle,\n          //     backgroundOverLay: res.data.result.backgroundOverLay,\n          //     swapButtonColor: res.data.result.swapButton,\n          //     logoUrl: res.data.result.logoUrl,\n          //     sideBar: res.data.result.sideBar\n          //   },\n          //   licenseeAddress: {\n          //     56: res.data.result.bscLicenseAddress,\n          //     1: res.data.result.ethLicenseAddress,\n          //     97: res.data.result.bscLicenseAddress,\n          //     42: res.data.result.ethLicenseAddress\n          //   }\n          // });\n        }\n      } else if (res.data.response_code === 404) {\n        // this.setState({\n        //   noSubDomain: true,\n        // });\n        // setTimeout(() => {\n        //   this.openPopup(\"NoDomain\");\n        // }, 100);\n      }\n      // this.setState({\n      //   isloading: false,\n      // });\n    } catch (error) {\n      console.log(error.response);\n      // this.setState({\n      //   isloading: false,\n      // });\n    }\n  };\n\n  async swap() {\n    let web3 = web3Config.getWeb3();\n    let networkId = web3Config.getNetworkId();\n    let address = web3Config.getAddress();\n    if (web3 === null) return 0;\n    let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\n    let { sendFundAmount } = this.state;\n    if (sendFundAmount === \"\" || sendFundAmount === 0) {\n      notificationConfig.error(\"Enter value to swap\");\n      return;\n    }\n    let actualSendFundAmount = (\n      await this.getActualAmount(\n        sendFundAmount,\n        this.state.selectedSendCurrency\n      )\n    ).toString();\n    let value = 0,\n      swapAmount = 0;\n    try {\n      value = web3Js.utils.toWei(actualSendFundAmount.toString());\n    } catch (e) {\n      value = (actualSendFundAmount * 10 ** 18).toFixed(0);\n    }\n    swapAmount = value;\n    if (\n      constantConfig.tokenDetails[this.state.selectedSendCurrency]\n        .approveRequire\n    ) {\n      value = 0;\n    }\n    swapFactory.swap(\n      CONSTANT.currencyAddresses[this.state.selectedSendCurrency],\n      CONSTANT.currencyAddresses[this.state.selectedReceiveCurrency],\n      value,\n      swapAmount,\n      (hash) => {\n        this.setState({\n          swapLoading: true,\n          txIdSent: hash,\n          txLinkSend: data[networkId].explorer + \"/tx/\" + hash,\n        });\n      },\n      () => {\n        // this.init()\n        this.setState({\n          swapLoading: false,\n          showLedger: true,\n          wrapBox: \"success\",\n        });\n        notificationConfig.success(\"Swap Success\");\n      }\n    );\n  }\n  async approve() {\n    let web3 = web3Config.getWeb3();\n    let networkId = web3Config.getNetworkId();\n    let address = web3Config.getAddress();\n    if (web3 === null) return 0;\n    let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\n    swapFactory.approveJNTRTokenForSwapFactory(\n      constantConfig.tokenDetails[this.state.selectedSendCurrency].address,\n      constantConfig[networkId].swapFactoryContract,\n      (hash) => {\n        this.setState({\n          approveLoading: true,\n          // txIdSent: hash,\n          // txLinkSend: data[networkId].explorer + \"/tx/\" + hash\n        });\n      },\n      () => {\n        // this.init()\n        this.setState({\n          approveLoading: false,\n          // showLedger: true,\n          // wrapBox: \"success\"\n        });\n        notificationConfig.success(\"Approve Success\");\n      }\n    );\n  }\n  async estimateGasAndFee() {\n    let web3 = web3Config.getWeb3();\n    let networkId = web3Config.getNetworkId();\n    let address = web3Config.getAddress();\n    if (web3 === null) return 0;\n    let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\n    let { sendFundAmount } = this.state;\n    if (sendFundAmount === \"\" || sendFundAmount === 0) {\n      notificationConfig.error(\"Enter value to swap\");\n      return;\n    }\n    let actualSendFundAmount = (\n      await this.getActualAmount(\n        sendFundAmount,\n        this.state.selectedSendCurrency\n      )\n    ).toString();\n    let value = 0,\n      swapAmount = 0;\n    try {\n      value = web3Js.utils.toWei(actualSendFundAmount.toString());\n    } catch (e) {\n      value = (actualSendFundAmount * 10 ** 18).toFixed(0);\n    }\n    swapAmount = value;\n    if (\n      constantConfig.tokenDetails[this.state.selectedSendCurrency]\n        .approveRequire\n    ) {\n      value = 0;\n    }\n    swapFactory.estimateSwapGasFee(\n      CONSTANT.currencyAddresses[this.state.selectedSendCurrency],\n      CONSTANT.currencyAddresses[this.state.selectedReceiveCurrency],\n      value,\n      swapAmount,\n      \"350000\",\n      (estGas) => {\n        this.setState({\n          estimatedGasFee: estGas,\n        });\n      }\n    );\n  }\n  async recivedToken(e) {\n    let dollarAmount = Number(e.target.value);\n    this.setState(\n      {\n        sendFundAmount: dollarAmount,\n      },\n      () => {\n        this.setAmount(dollarAmount);\n      }\n    );\n  }\n  async setAmount(dollarAmount) {\n    this.setState(\n      {\n        actualSendFundAmount: await this.getActualAmount(\n          dollarAmount,\n          this.state.selectedSendCurrency\n        ),\n        approxReceiveFundAmount: await this.getActualAmount(\n          dollarAmount,\n          this.state.selectedReceiveCurrency\n        ),\n      },\n      () => {\n        this.estimateGasAndFee();\n      }\n    );\n  }\n  async getActualAmount(dollarAmount, currency) {\n    if (dollarAmount <= 0) return 0;\n    else return dollarAmount / this.state.currencyPrices[currency];\n  }\n  async fetchPrice() {\n    var { currencyPrices } = this.state;\n    const response = await fetch(\n      `https://api.coingecko.com/api/v3/simple/price?ids=ethereum,binancecoin&vs_currencies=usd`\n    );\n    const json = await response.json();\n    currencyPrices[\"ETH\"] = json[\"ethereum\"][\"usd\"];\n    currencyPrices[\"BNB\"] = json[\"binancecoin\"][\"usd\"];\n    currencyPrices[\"JNTR/e\"] = 0.062166;\n    currencyPrices[\"JNTR/b\"] = 0.054237;\n    currencyPrices[\"JNTR\"] = 0.532;\n    this.setState({\n      currencyPrices,\n    });\n  }\n  changeCurrency(check) {\n    // if(check && this.state.web3 === null){\n    let selectedSendCurrency = this.state.selectedSendCurrency;\n    let selectedReceiveCurrency = this.state.selectedReceiveCurrency;\n    this.setState(\n      {\n        selectedSendCurrency: selectedReceiveCurrency,\n        selectedReceiveCurrency: selectedSendCurrency,\n      },\n      () => {\n        if (this.state.sendFundAmount !== \"\")\n          this.setAmount(this.state.sendFundAmount);\n        this.forceUpdate();\n      }\n    );\n    // } else if(this.state.web3 !== null && check) {\n    //     notificationConfig.warning(\"Please change metamask network!\")\n    // }\n  }\n  setSendCurrency(currency) {\n    this.setState({ selectedSendCurrency: currency }, () => {\n      this.closePopup(\"sendCurPop\");\n    });\n  }\n  setReceiveCurrency(currency) {\n    this.setState({ selectedReceiveCurrency: currency }, () => {\n      this.closePopup(\"receiveCurPop\");\n    });\n  }\n  openPopup(id) {\n    $(\"#\" + id).fadeIn();\n  }\n  closePopup(id) {\n    $(\"#\" + id).fadeOut();\n  }\n\n  async showDepWdrwPopup(network, vaultAddress, popup, id) {\n    let { web3Binance, web3Ethereum } = this.state;\n    let instanceVault = null;\n    if (network === \"BSC\") {\n      instanceVault = new web3Binance.eth.Contract(\n        tokenVaultAbi,\n        vaultAddress\n      );\n    } else if (network === \"Ethereum\") {\n      instanceVault = new web3Ethereum.eth.Contract(\n        tokenVaultAbi,\n        vaultAddress\n      );\n    }\n    let tokenAddress = \"\";\n    if (instanceVault._address !== CONSTANT.ZERO_ADDRESS) {\n      tokenAddress = await instanceVault.methods.reimbursementToken().call();\n    }\n    this.setState({\n      depositTokenAddress: tokenAddress,\n      depositWithdrawNetwork: network,\n      depositWithdrawVaultAddress: vaultAddress\n    }, () => {\n      this.showWithId(popup, id)\n    })\n  }\n\n  showWithId(popup, id) {\n    this.openPopup(popup);\n    $(\"[data-id=\" + this.state.currentTab + \"]\").removeClass(\"active\");\n    $(\".tab-Link\").removeClass(\"active\");\n    $(\"[data-id=\" + id + \"]\").addClass(\"active\");\n    $(\".tab-Content\").hide();\n    $(\"#\" + id).fadeIn(\"slow\");\n    this.setState({\n      currentTab: id,\n    });\n  }\n\n  changeWrapBox(which) {\n    this.setState({\n      wrapBox: which,\n      txIdSent: null,\n      txSentStatus: \"pending\",\n      txSentTime: null,\n      tokenReceive: \"0\",\n      txReceiveTime: null,\n      txIdReceive: null,\n      txLinkSend: \"\",\n      txLinkReturn: \"\",\n      receiveFundAmount: \"\",\n      sendFundAmount: \"\",\n      actualSendFundAmount: 0,\n      approxReceiveFundAmount: 0,\n      showLedger: false,\n    });\n  }\n  async listenTransferEvent() {\n    const { instanceSwapFactoryEthereum, instanceSwapFactoryBinance } =\n      this.state;\n    if (instanceSwapFactoryEthereum !== null) {\n      instanceSwapFactoryEthereum.events\n        .ClaimApprove(\n          {\n            fromBlock: \"latest\",\n          },\n          function (error, event) {\n            console.log(event);\n          }\n        )\n        .on(\"connected\", function (subscriptionId) {\n          console.log(subscriptionId);\n        })\n        .on(\n          \"data\",\n          function (event) {\n            console.log(event); // same results as the optional callback above\n            if (\n              event.returnValues.user.toLocaleLowerCase() ===\n              web3Config.getAddress().toLocaleLowerCase()\n            ) {\n              let txLinkReturn =\n                constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].explorer +\n                \"/tx/\" +\n                event.transactionHash;\n              let returnAmount = web3Js.utils.fromWei(\n                event.returnValues.amountA.toLocaleLowerCase()\n              );\n              this.updateLedgerAfterResponse(\n                event.transactionHash,\n                txLinkReturn,\n                returnAmount\n              );\n            }\n          }.bind(this)\n        )\n        .on(\"changed\", function (event) {\n          console.log(event);\n          // remove event from local database\n        })\n        .on(\"error\", function (error, receipt) {\n          // If the transaction was rejected by the network with a receipt, the second parameter will be the receipt.\n          console.log(error, receipt);\n        });\n    }\n    if (instanceSwapFactoryBinance !== null) {\n      let { web3Binance } = this.state;\n      let initialBlock = await web3Binance.eth.getBlockNumber();\n      setInterval(async () => {\n        const currentBlock = await web3Binance.eth.getBlockNumber();\n        instanceSwapFactoryBinance\n          .getPastEvents(\"allEvents\", {\n            fromBlock: initialBlock,\n            toBlock: currentBlock, // You can also specify 'latest'\n          })\n          .then(\n            async function (result) {\n              for (let i = 0; i < result.length; i++) {\n                console.log(result[i].event);\n                if (result[i].event === \"ClaimApprove\") {\n                  console.log(result[i]);\n                  if (\n                    result[i].returnValues.user.toLocaleLowerCase() ===\n                    web3Config.getAddress().toLocaleLowerCase()\n                  ) {\n                    let txLinkReturn =\n                      constantConfig[CONSTANT.NETWORK_ID.BINANCE].explorer +\n                      \"/tx/\" +\n                      result[i].transactionHash;\n                    let returnAmount = web3Js.utils\n                      .fromWei(result[i].returnValues.amountA)\n                      .toLocaleLowerCase();\n                    this.updateLedgerAfterResponse(\n                      result[i].transactionHash,\n                      txLinkReturn,\n                      returnAmount\n                    );\n                  }\n                }\n              }\n            }.bind(this)\n          )\n          .catch((err) => console.error(err));\n        initialBlock = currentBlock;\n      }, 10000);\n    }\n  }\n  updateLedgerAfterResponse(hash, txLinkReturn, returnAmount) {\n    this.setState(\n      {\n        isSendingOrder: false,\n        txSentStatus: \"Success\",\n        txSentTime: new Date().toUTCString(),\n        tokenReceive: \"2\",\n        txReceiveTime: new Date().toUTCString(),\n        txIdReceive: hash,\n        whichButton: \"4\",\n        txLinkReturn: txLinkReturn,\n        receiveFundAmount: returnAmount,\n      },\n      async () => {\n        //   await this.enableInputs();\n      }\n    );\n  }\n  scrollToLedger() {\n    $(\"html\").animate({ scrollTop: 650 });\n  }\n\n  updateLicenseAddress(network, address, fees) {\n    // console.log(network, address)\n    // console.log(network === \"BSC\")\n    let netlicAdd = (network === \"BSC\" ? \"bscLicenseAddress\" : \"ethLicenseAddress\")\n    let netlicFees = (network === \"BSC\" ? \"bscLicenseFees\" : \"ethLicenseFees\")\n    let netlicFeesCurrent = (network === \"BSC\" ? \"bscLicenseFeesCurrent\" : \"ethLicenseFeesCurrent\")\n    this.setState({\n      [netlicAdd]: address,\n      [netlicFees]: fees,\n      [netlicFeesCurrent]: fees\n    }, () => {\n      this.setIsValidLicenseAddress();\n    })\n  }\n\n  toggle = (index) => {\n    let collapse = \"isOpen\" + index;\n    this.setState((prevState) => ({ [collapse]: !prevState[collapse] }));\n  };\n\n  async onNetworkChange(event) {\n    console.log(event.target.checked)\n    console.log(event.target.name)\n    this.setState({\n      [event.target.name]: event.target.checked\n    }, () => {\n      this.setIsValidLicenseAddress();\n    })\n  }\n\n  async floatOnly(event) {\n    if (event.shiftKey === true) event.preventDefault();\n\n    var code = event.keyCode;\n\n    if (\n      (code >= 48 && code <= 57) ||\n      (code >= 96 && code <= 105) ||\n      code === 8 ||\n      code === 9 ||\n      code === 37 ||\n      code === 39 ||\n      code === 46 ||\n      code === 190 ||\n      code === 110\n    ) {\n      // allowed characters\n    } else event.preventDefault();\n\n    if (\n      event.target.value.indexOf(\".\") !== -1 &&\n      (code === 190 || code === 110)\n    )\n      event.preventDefault();\n  }\n\n  async handleChange(event) {\n    const { value } = event.target;\n    this.setState({\n      showFeeInpt: value === \"option146\" ? true : false,\n      zeroIntegrationShow: value === \"\" ? true : false\n    }, () => {\n      this.setIsValidLicenseAddress()\n    })\n  };\n\n  handalFormChange = (e) => {\n    this.setState({\n      subDomain: e.target.value,\n    });\n    const isvalid = validatesubDomain(e.target.value);\n    if (!isvalid) {\n      this.setState({\n        errormsg: \"Please enter valid subdomain\",\n      });\n    } else {\n      this.setState({\n        errormsg: \"\",\n      });\n    }\n  };\n\n  changeFontStyle = (e) => {\n    this.setState({\n      fontStyle: e.target.value,\n    });\n  };\n\n  toggalColor = (e, colorType, id) => {\n    e.stopPropagation();\n    document.getElementById(id).checked = true;\n    this.setState({\n      [colorType]: true,\n    });\n  };\n\n  handleChangeComplete = (color, node) => {\n    this.setState({ [node]: color.hex });\n  };\n\n  updateCloneData = (data) => {\n    this.setState({\n      cloneData: data,\n    });\n  };\n\n  closeChromePickerPopUp = (e) => {\n    e.stopPropagation();\n    this.setState({\n      showSecondaryColor: false,\n      showPrimaryColor: false,\n      showSwapButtonColor: false,\n    });\n  };\n\n  preview = () => {\n    const {\n      bgimage,\n      logoImage,\n      logoUrl,\n      subDomain,\n      primaryColor,\n      secondaryColor,\n      fontStyle,\n      backgroundOverLay,\n      swapButtonColor,\n      changeText,\n      sideBar,\n    } = this.state;\n    console.log(\"siedBar\", sideBar);\n    const isvalid = validatesubDomain(subDomain);\n    const isValidLogoUrl = isValidURL(logoUrl);\n    if (\n      logoImage !== \"\" &&\n      subDomain !== \"\" &&\n      isvalid &&\n      isValidLogoUrl\n    ) {\n      this.setState({\n        errormsg: \"\",\n        successmsg: \"\",\n      });\n      const r = document.querySelector(\":root\");\n      console.log(\"document\");\n      r.style.setProperty(\"--text-color\", primaryColor);\n      r.style.setProperty(\"--button-bg-color\", secondaryColor);\n      r.style.setProperty(\"--req-bg\", `url(${bgimage})`);\n      r.style.setProperty(\"--swap-btn-color\", swapButtonColor);\n      console.log(\"CloneForm\");\n      this.props.history.push({\n        pathname: \"/\",\n        state: {\n          cloneData: {\n            bgimage,\n            logoImage,\n            logoUrl,\n            subDomain,\n            primaryColor,\n            secondaryColor,\n            fontStyle,\n            backgroundOverLay,\n            isPreview: true,\n            swapButtonColor,\n            changeText,\n            sideBar,\n          },\n        },\n      });\n      this.updateCloneData({\n        bgimage,\n        logoImage,\n        subDomain,\n        logoUrl,\n        primaryColor,\n        secondaryColor,\n        fontStyle,\n        backgroundOverLay,\n        changeText,\n        swapButtonColor,\n        sideBar,\n      });\n    } else if (!isvalid) {\n      this.setState({\n        errormsg: \"Please enter valid subdomain\",\n      });\n    } else if (!isValidLogoUrl) {\n      this.setState({\n        errormsg: \"Please enter valid Url for behind your logo\",\n      });\n    } else if (logoImage === \"\") {\n      this.setState({\n        errormsg: \"Please add logo\",\n      });\n    } else {\n      this.setState({\n        errormsg: \"All fields are mandatory\",\n      });\n    }\n  };\n\n  Main = async () => {\n    const file = document.querySelector(\"#contained-button-file\").files[0];\n    const image = await toBase64(file);\n    this.setState({\n      bgimage: image,\n    });\n  };\n\n  changeLogo = async () => {\n    const file = document.querySelector(\"#contained-button-file-logo\").files[0];\n    const image = await toBase64(file);\n    this.setState({\n      logoImage: image,\n    });\n  };\n  changeurl = (e) => {\n    const link = e.target.value;\n    this.setState({\n      logoUrl: link,\n    });\n  };\n\n  changeOverlay = (e) => {\n    this.setState({\n      backgroundOverLay: e.target.value,\n    });\n  };\n\n  async setIsValidLicenseAddress() {\n    let { showFeeInpt, bsc, ethereum, bscLicenseAddress, ethLicenseAddress } = this.state;\n    let isValidLicenseAddress = false;\n    if (showFeeInpt) {\n      if (bsc || ethereum) {\n        if (bsc && bscLicenseAddress !== CONSTANT.ZERO_ADDRESS) {\n          isValidLicenseAddress = true;\n        } else {\n          isValidLicenseAddress = false;\n        }\n        if (ethereum && ethLicenseAddress !== CONSTANT.ZERO_ADDRESS) {\n          if (bsc && bscLicenseAddress !== CONSTANT.ZERO_ADDRESS) {\n            isValidLicenseAddress = true;\n          } else {\n            if (ethereum && ethLicenseAddress !== CONSTANT.ZERO_ADDRESS && !bsc)\n              isValidLicenseAddress = true;\n            else\n              isValidLicenseAddress = false;\n          }\n        } else {\n          if (bsc && bscLicenseAddress !== CONSTANT.ZERO_ADDRESS && !ethereum) {\n            isValidLicenseAddress = true;\n          } else {\n            isValidLicenseAddress = false;\n          }\n        }\n      } else {\n        if (!bsc && !ethereum)\n          isValidLicenseAddress = false;\n        else\n          isValidLicenseAddress = true;\n      }\n      // isValidLicenseAddress = ((bscLicenseAddress !== CONSTANT.ZERO_ADDRESS) || (ethLicenseAddress !== CONSTANT.ZERO_ADDRESS));\n    } else {\n      isValidLicenseAddress = true;\n    }\n    this.setState({\n      allowClone: isValidLicenseAddress\n    }, () => {\n      this.forceUpdate()\n    })\n  }\n\n  uploadData = async () => {\n    const {\n      bgimage,\n      logoImage,\n      logoUrl,\n      subDomain,\n      primaryColor,\n      secondaryColor,\n      fontStyle,\n      backgroundOverLay,\n      swapButtonColor,\n      sideBar,\n      bscLicenseAddress,\n      ethLicenseAddress,\n      allowClone\n    } = this.state;\n    const isvalid = validatesubDomain(subDomain);\n    const isValidLogoUrl = logoUrl !== undefined ? isValidURL(logoUrl) : false;\n    if (\n      logoImage !== \"\" &&\n      subDomain !== \"\" &&\n      isvalid &&\n      isValidLogoUrl &&\n      allowClone\n    ) {\n      this.setState({\n        errormsg: \"\",\n        successmsg: \"\",\n        isloading: true,\n      });\n      try {\n        const res = await axios.post(\n          \"https://wildcard.bswap.info:1830/api/v1/subdomain/addSubDomain\",\n          {\n            licenseeAddress: web3Config.getAddress(),\n            bscLicenseAddress: bscLicenseAddress,\n            ethLicenseAddress: ethLicenseAddress,\n            backGroundImage: bgimage,\n            primaryColors: primaryColor,\n            seconderyColor: secondaryColor,\n            subDomain: subDomain,\n            logo: logoImage,\n            logoUrl: logoUrl,\n            fontStyle,\n            backgroundOverLay,\n            swapButton: swapButtonColor,\n            sideBar,\n          }\n        );\n        console.log(res);\n\n        if (res.data.response_code === 200) {\n          this.setState({\n            successmsg: res.data.response_message,\n          });\n          const href = window.location.href;\n          const domaindata = href\n            .replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, \"\")\n            .split(\"/\")[0];\n          this.clearPreview();\n          this.setState({\n            isloading: false,\n            visitDomain: `http://${subDomain}.${domaindata}`,\n          });\n        } else if (res.data.response_code === 409) {\n          this.setState({\n            errormsg: res.data.response_message,\n            isloading: false,\n          });\n        } else {\n          notificationConfig.error(\"\")\n          this.setState({\n            errormsg: \"Something went wrong please try again later\",\n            isloading: false,\n          });\n        }\n      } catch (error) {\n        console.log(error);\n        this.setState({\n          isloading: false,\n        });\n      }\n    } else if (!isvalid) {\n      this.setState({\n        errormsg: \"Please enter valid subdomain\",\n      });\n      notificationConfig.error(\"Please enter valid subdomain\")\n    } else if (!isValidLogoUrl) {\n      this.setState({\n        errormsg: \"Please enter valid Url for behind your logo\",\n      });\n      notificationConfig.error(\"Please enter valid Url for behind your logo\")\n    } else if (logoImage === \"\") {\n      this.setState({\n        errormsg: \"Please add logo\",\n      });\n      notificationConfig.error(\"Please add logo\")\n    } else if (!allowClone) {\n      this.setState({\n        errormsg: \"Please create license contract\",\n      });\n      notificationConfig.error(\"Please create license contract\")\n    } else {\n      this.setState({\n        errormsg: \"All fields are mandatory\",\n      });\n      notificationConfig.error(\"All fields are mandatory\")\n    }\n  };\n\n  clearPreview = () => {\n    const r = document.querySelector(\":root\");\n    r.style.removeProperty(\"--text-color\");\n    r.style.removeProperty(\"--button-bg-color\");\n    r.style.removeProperty(\"--req-bg\");\n    this.updateCloneData({\n      cloneData: {},\n    });\n    this.props.history.push({\n      pathname: \"\",\n      state: {\n        cloneData: {},\n      },\n    });\n  };\n  changeTypeofLicense = (e) => {\n    this.setState({\n      typeofLicense: e.target.value,\n    });\n  };\n  _onChangeRadio(e) {\n    const name = e.target.name;\n    this.setState({\n      [name]: e.target.value,\n    });\n    if (name === \"changeText\" && e.target.value === \"No\") {\n      this.setState({\n        primaryColor: \"#ffffff\",\n        secondaryColor: \"#5c6bc0\",\n        swapButtonColor: \"#91dc27\",\n      });\n    }\n  }\n\n  async setLicenseeFee(network, reimbursementAddress, vaultAddress, newFees) {\n\n    await web3Config.connectWallet(0);\n    let newNetworkId = web3Config.getNetworkId()\n\n    if (!constantConfig.allowedNetwork.includes(newNetworkId)) {\n      notificationConfig.error(\"Please Select Ethereum or BSC Main Network\");\n      return;\n    }\n    if (\n      network === \"Ethereum\" &&\n      (newNetworkId === 97 || newNetworkId === 56)\n    ) {\n      notificationConfig.warning(\"Change metamask network to Ethereum!\");\n      return;\n    } else if (\n      network === \"BSC\" &&\n      (newNetworkId === 42 || newNetworkId === 1)\n    ) {\n      notificationConfig.warning(\"Change metamask network to Binance!\");\n      return;\n    }\n\n    // this.setState({ creatingLicense: true })\n    console.log(reimbursementAddress, vaultAddress, newFees)\n\n    let web3 = web3Config.getWeb3();\n    let networkId = web3Config.getNetworkId();\n    let address = web3Config.getAddress();\n\n    let reimbursementContract = new ReimbursementContract(web3, networkId);\n\n    let setLicenseeFeeData = {};\n\n    setLicenseeFeeData[\"reimbursementAddress\"] = reimbursementAddress;\n    setLicenseeFeeData[\"vault\"] = vaultAddress;\n    setLicenseeFeeData[\"projectContract\"] = constantConfig[networkId].swapFactoryContract;\n    setLicenseeFeeData[\"fee\"] = Number(newFees);\n\n    reimbursementContract.setLicenseeFee(\n      setLicenseeFeeData,\n      (hash) => {\n        this.setState({\n          // swapLoading: true,\n          // txIdSent: hash,\n          // txLinkSend: data[networkId].explorer + '/tx/' + hash,\n        });\n      },\n      async (receipt) => {\n        // this.setState({ crtLicSuccess: true, creatingLicense: false })\n        // this.props.updateLicenseAddress(this.props.network, await reimbursementContract.getVaultAddress(receipt), licenseeFees)\n        notificationConfig.success('Fees Updated Successfully!');\n      },\n      async (error) => {\n        // this.setState({ creatingLicense: false })\n        if (error.code === 4001) {\n          notificationConfig.error(\"Transaction rejected!\")\n        }\n      }\n    );\n\n  }\n\n  render() {\n    const {\n      bgimage,\n      logoImage,\n      logoUrl,\n      subDomain,\n      primaryColor,\n      showPrimaryColor,\n      showSecondaryColor,\n      secondaryColor,\n      errormsg,\n      successmsg,\n      fontStyle,\n      isloading,\n      visitDomain,\n      typeofLicense,\n      changeFee,\n      displayToken,\n      changeText,\n      swapButtonColor,\n      showSwapButtonColor,\n      sideBar,\n      bsc,\n      ethereum,\n      bscLicenseAddress,\n      ethLicenseAddress,\n      bscLicenseTokenBalance,\n      ethLicenseTokenBalance,\n      allowClone\n    } = this.state;\n    return (\n      <main id=\"main\" className=\"smartSwap\">\n        <div className=\"fullscreen-bg\">\n          <div className=\"fsbg_sad01\"></div>\n          <div className=\"fsbg_container\">\n            <video loop autoPlay muted className=\"fullscreen-bg__video\">\n              <source src=\"video/smartswap.webm\" type=\"video/webm\" />\n              <source src=\"video/smartswap.mp4\" type=\"video/mp4\" />\n              <source src=\"video/smartswap.ogv\" type=\"video/ogg\" />\n            </video>\n          </div>\n        </div>\n        <div className=\"main\">\n          {/* <!--======================= RIGHT SIDE MENU =====================--> */}\n          <RightSideMenu\n            web3={this.state.web3}\n            web3Config={web3Config}\n            cloneData={this.state.cloneData}\n          ></RightSideMenu>\n          {/* <!--======================= RIGHT SIDE MENU END  =====================-->\n                    <!--======================= HEADER START =====================--> */}\n          <Header\n            web3={this.state.web3}\n            web3Config={web3Config}\n            cloneData={this.state.cloneData}\n          ></Header>\n          {/* <!--======================= HEADER END =====================--> */}\n          <div className=\"mainBlock\">\n            {/* <!--======================= SWAP BLOCK START =====================--> */}\n            <div className=\"swap-Block\">\n              <div className=\"container-Grid\">\n                <div className=\"smeTitle01-v2\"> {/*   onClick={() => { this.openPopup(\"WithdrawToken\"); }} */}\n                  Get Your Own License For FREE\n                </div>\n              </div>\n              <div className=\"swap-textBox\">\n                <div className=\"container-Grid\">\n                  <div className=\"gwFormMbox\">\n                    <div className=\"gwFormLMbox\">\n                      <div className=\"gwFormSTitle01\">\n                        <span>1</span> Set up your fees and reimbursement\n                      </div>\n\n                      <div className=\"gwFormSbox01\">\n                        <div className=\"gwFormTitle01\" >Do you want to charge your users a fee above our fee?</div>\n                        <div className=\"gwFormSFormbox02\">\n                          <div className=\"md-radio md-radio-inline gwFroWidthFix01\">\n                            <input type=\"radio\" id=\"rr01\" checked={this.state.showFeeInpt ? true : false} name=\"stepin46\" value=\"option146\" onChange={this.handleChange.bind(this)} />\n                            <label htmlFor=\"rr01\">Yes </label>\n                          </div>\n                          <div className=\"md-radio md-radio-inline gwFroWidthFix01\">\n                            <input type=\"radio\" id=\"rr02\" checked={this.state.showFeeInpt ? false : true} name=\"stepin46\" value=\"option145\" onChange={this.handleChange.bind(this)} />\n                            <label htmlFor=\"rr02\">No</label>\n                          </div>\n                        </div>\n                      </div>\n\n                      {this.state.showFeeInpt ?\n                        <div>\n                          <div className=\"gwFormSbox01\">\n                            <div className=\"gwFormTitle01\" >Choose blockchain  <i className=\"help-circle\"> <i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"You can only charge fees and reimbursement users with your tokens on blockchains that your token is deploy on. If your token is for example on one chain like Ethereum users from other chains like BSC can use your license but they will not be charged with fees or reimbursement for it\" aria-hidden=\"true\"></i> </i>\n                            </div>\n                            <div className=\"gwFormSCheckbx01\">\n                              <div className=\"md-checkbox\">\n                                <input type=\"checkbox\" id=\"rr04\" name=\"bsc\" onChange={(e) => this.onNetworkChange(e)} />\n                                <label htmlFor=\"rr04\">BSC </label>\n                              </div>\n                              <div className=\"md-checkbox\">\n                                <input type=\"checkbox\" id=\"rr03\" name=\"ethereum\" onChange={(e) => this.onNetworkChange(e)} />\n                                <label htmlFor=\"rr03\">Ethereum </label>\n                              </div>\n                              <div className=\"md-checkbox\">\n                                <input type=\"checkbox\" id=\"rr05\" name=\"polygon\" onChange={(e) => this.onNetworkChange(e)} disabled />\n                                <label htmlFor=\"rr05\">Polygon </label>\n                              </div>\n                            </div>\n                          </div>\n\n                          {this.state.bsc ?\n                            <CreateLicence reimbursementAddress={constantConfig[CONSTANT.NETWORK_ID.BINANCE].reimbursementContract} network=\"BSC\" currency=\"BNB\" connectWallet={() => { this.connectWallet() }} web3={this.state.web3} updateLicenseAddress={this.updateLicenseAddress.bind(this)} web3Binance={this.state.web3Binance}></CreateLicence>\n                            : null}\n                          {this.state.ethereum ?\n                            <CreateLicence reimbursementAddress={constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].reimbursementContract} network=\"Ethereum\" currency=\"ETH\" connectWallet={() => { this.connectWallet() }} web3={this.state.web3} updateLicenseAddress={this.updateLicenseAddress.bind(this)} web3Ethereum={this.state.web3Ethereum}></CreateLicence>\n                            : null}\n                          {this.state.polygon ?\n                            <CreateLicence network=\"Polygon\" currency=\"MATIC\"></CreateLicence>\n                            : null}\n\n                        </div>\n                        : null}\n\n                      {/* <div className=\"gwFormBRBox01\">\n                        <div className=\"gwFormBRTitle01\">\n                          <span>Ethereum</span>\n                        </div>\n                        <div className=\"gwFormSbox01\">\n                          <div className=\"gwFormTitle01\">\n                            Add your native token smart contract on Ethereum\n                          </div>\n                          <div className=\"gwFormSFormbox01\">\n                            <input type=\"text\" /> <span>TOKEN</span>\n                          </div>\n                        </div>\n                        <div className=\"gwFormSbox01\">\n                          <div className=\"gwFormTitle01\">\n                            Add a pool contract between your TOKEN to ETH\n                            <i className=\"help-circle\">\n                              {\" \"}\n                              <i\n                                className=\"fas fa-question-circle protip\"\n                                data-pt-position=\"top\"\n                                data-pt-title=\"Help Text\"\n                                aria-hidden=\"true\"\n                              ></i>{\" \"}\n                            </i>\n                          </div>\n                          <div className=\"gwFormSFormbox01\">\n                            <input type=\"text\" /> <span>TOKEN</span>\n                          </div>\n                        </div>\n\n                        <div className=\"gwFormSbox01\">\n                          <div className=\"gwFormTitle01\">\n                            How many days users need to stake to get 100%\n                            reimbursement?\n                            <i className=\"help-circle\">\n                              {\" \"}\n                              <i\n                                className=\"fas fa-question-circle protip\"\n                                data-pt-position=\"top\"\n                                data-pt-title=\"Help Text\"\n                                aria-hidden=\"true\"\n                              ></i>{\" \"}\n                            </i>\n                          </div>\n                          <div className=\"gwFormSFormbox01\">\n                            <input type=\"text\" /> <span>DAYS</span>\n                          </div>\n                        </div>\n\n                        <div className=\"gwFormSbox01\">\n                          <div className=\"gwFormTitle01\">\n                            Choose the token ratio users will need to stake\n                            <i className=\"help-circle\">\n                              {\" \"}\n                              <i\n                                className=\"fas fa-question-circle protip\"\n                                data-pt-position=\"top\"\n                                data-pt-title=\"Help Text\"\n                                aria-hidden=\"true\"\n                              ></i>{\" \"}\n                            </i>\n                          </div>\n                          <div className=\"gwFormSFormbox01\">\n                            <input type=\"text\" /> <span>: 1</span>\n                          </div>\n                        </div>\n\n                        <button className=\"gwFormBTN02\">\n                          Connect your Ethereum wallet to create a license on\n                          Ethereum{\" \"}\n                        </button>\n                      </div>\n\n                      <div className=\"gwFormBRBox01\">\n                        <div className=\"gwFormBRTitle01\">\n                          <span>BSC</span>\n                        </div>\n                        <div className=\"gwFormSbox01\">\n                          <div className=\"gwFormTitle01\">\n                            Add your native token smart contract on BSC\n                          </div>\n                          <div className=\"gwFormSFormbox01\">\n                            <input type=\"text\" /> <span>TOKEN</span>\n                          </div>\n                        </div>\n                        <div className=\"gwFormSbox01\">\n                          <div className=\"gwFormTitle01\">\n                            Add a pool contract between your TOKEN to BNB\n                            <i className=\"help-circle\">\n                              {\" \"}\n                              <i\n                                className=\"fas fa-question-circle protip\"\n                                data-pt-position=\"top\"\n                                data-pt-title=\"Help Text\"\n                                aria-hidden=\"true\"\n                              ></i>{\" \"}\n                            </i>\n                          </div>\n                          <div className=\"gwFormSFormbox01\">\n                            <input type=\"text\" /> <span>TOKEN</span>\n                          </div>\n                        </div>\n\n                        <div className=\"gwFormSbox01\">\n                          <div className=\"gwFormTitle01\">\n                            How many days users need to stake to get 100%\n                            reimbursement?\n                            <i className=\"help-circle\">\n                              {\" \"}\n                              <i\n                                className=\"fas fa-question-circle protip\"\n                                data-pt-position=\"top\"\n                                data-pt-title=\"Help Text\"\n                                aria-hidden=\"true\"\n                              ></i>{\" \"}\n                            </i>\n                          </div>\n                          <div className=\"gwFormSFormbox01\">\n                            <input type=\"text\" /> <span>DAYS</span>\n                          </div>\n                        </div>\n\n                        <div className=\"gwFormSbox01\">\n                          <div className=\"gwFormTitle01\">\n                            Choose the token ratio users will need to stake\n                            <i className=\"help-circle\">\n                              {\" \"}\n                              <i\n                                className=\"fas fa-question-circle protip\"\n                                data-pt-position=\"top\"\n                                data-pt-title=\"Help Text\"\n                                aria-hidden=\"true\"\n                              ></i>{\" \"}\n                            </i>\n                          </div>\n                          <div className=\"gwFormSFormbox01\">\n                            <input type=\"text\" /> <span>: 1</span>\n                          </div>\n                        </div>\n\n                        <button className=\"gwFormBTN02 greenC\">\n                          <i className=\"fas fa-check\"></i> BSC license been\n                          created successfully\n                        </button>\n                      </div> */}\n\n                    </div>\n\n\n                    <div className=\"gwFormRMbox\">\n                      <div className=\"gwFormSTitle01\">\n                        <span>2</span>Set up your design{\" \"}\n                      </div>\n                      <div className=\"gwFormSbox01\">\n                        <div className=\"gwFormTitle01\">\n                          Choose the type of integration{\" \"}\n                        </div>\n                        <div className=\"gwFormSFormbox02\">\n                          <div className=\"md-radio md-radio-inline gwFroWidthFix01\">\n                            <input\n                              type=\"radio\"\n                              id=\"radio145\"\n                              name=\"typeofLicense\"\n                              checked={this.state.typeofLicense === \"Zero integration\" ? true : false}\n                              value=\"Zero integration\"\n                              defaultChecked\n                              onChange={this._onChangeRadio}\n                            />\n                            <label htmlFor=\"radio145\">\n                              Zero integration\n                              <i className=\"help-circle\">\n                                <i\n                                  className=\"fas fa-question-circle protip\"\n                                  data-pt-position=\"top\"\n                                  data-pt-title=\"This option allow licensees to create an instant license under one minute, with no coding knowledge needed or any server costs.\"\n                                  aria-hidden=\"true\"\n                                ></i>\n                              </i>\n                            </label>\n                          </div>\n                          <div className=\"md-radio md-radio-inline gwFroWidthFix01\">\n                            <input\n                              type=\"radio\"\n                              id=\"radio146\"\n                              name=\"typeofLicense\"\n                              checked={this.state.typeofLicense === \"Smart contract integration\" ? true : false}\n                              value=\"Smart contract integration\"\n                              onChange={this._onChangeRadio}\n                            // onClick={() => { notificationConfig.info(\"Coming Soon!\") }}\n                            // disabled\n                            />\n                            <label htmlFor=\"radio146\">\n                              Smart contract integration\n                              <i className=\"help-circle\">\n                                <i\n                                  className=\"fas fa-question-circle protip\"\n                                  data-pt-position=\"top\"\n                                  data-pt-title=\"This option allow licensees to designed their own UI and do direct integration with the smart contract code. \"\n                                  aria-hidden=\"true\"\n                                ></i>\n                              </i>\n                            </label>\n                          </div>\n                        </div>\n                      </div>\n                      {typeofLicense === \"Zero integration\" && (\n                        <>\n\n                          <div className=\"gwFormSbox01\">\n                            {/* <div className=\"gwFormTitle01\">\n                              Do you want to display your native token first during\n                              the lauding?\n                              <i className=\"help-circle\">\n                                <i\n                                  className=\"fas fa-question-circle protip\"\n                                  data-pt-position=\"top\"\n                                  data-pt-title=\"Help Text\"\n                                  aria-hidden=\"true\"\n                                ></i>\n                              </i>\n                            </div>\n                            <div className=\"gwFormSFormbox02\">\n                              <div className=\"md-radio md-radio-inline gwFroWidthFix01\">\n                                <input\n                                  type=\"radio\"\n                                  id=\"rr200\"\n                                  defaultChecked\n                                  name=\"stepin101\"\n                                  value=\"1\"\n                                />\n                                <label htmlFor=\"rr200\">Yes</label>\n                              </div>\n                              <div className=\"md-radio md-radio-inline gwFroWidthFix01\">\n                                <input\n                                  type=\"radio\"\n                                  id=\"rr201\"\n                                  name=\"stepin101\"\n                                  value=\"option145\"\n                                />\n                                <label htmlFor=\"rr201\">No</label>\n                              </div>\n                            </div> */}\n                            {/* <div className=\"gwFormSFormbox02\">\n                              <div className=\"md-radio md-radio-inline gwFroWidthFix01\">\n                                <input\n                                  type=\"radio\"\n                                  id=\"rr202\"\n                                  name=\"displayToken\"\n                                  value=\"Display all tokens\"\n                                  onChange={this._onChangeRadio}\n                                />\n                                <label htmlFor=\"rr202\">\n                                  Display all tokens\n                                  <i className=\"help-circle\">\n                                    <i\n                                      className=\"fas fa-question-circle protip\"\n                                      data-pt-position=\"top\"\n                                      data-pt-title=\"Help Text\"\n                                      aria-hidden=\"true\"\n                                    ></i>\n                                  </i>\n                                </label>\n                              </div>\n                              <div className=\"md-radio md-radio-inline gwFroWidthFix01\">\n                                <input\n                                  type=\"radio\"\n                                  id=\"rr203\"\n                                  name=\"displayToken\"\n                                  value=\"Display token lists\"\n                                  onChange={this._onChangeRadio}\n                                  defaultChecked\n                                />\n                                <label htmlFor=\"rr203\">\n                                  Display token lists\n                                  <i className=\"help-circle\">\n                                    <i\n                                      className=\"fas fa-question-circle protip\"\n                                      data-pt-position=\"top\"\n                                      data-pt-title=\"Help Text\"\n                                      aria-hidden=\"true\"\n                                    ></i>\n                                  </i>\n                                </label>\n                              </div>\n                            </div> */}\n                          </div>\n                          {/* {displayToken === \"Display token lists\" && (\n                            <div className=\"gwFormSbox01\">\n                              <div class=\"gwFormSFormbox01\">\n                                <input\n                                  type=\"text\"\n                                  style={{ width: \"100%\" }}\n                                  placeholder=\"https:// or ipfs:// or ENS name\"\n                                  defaultValue=\"\"\n                                />\n                              </div>\n                            </div>\n                          )} */}\n\n                          <div className=\"gwFormSbox01 \">\n                            <div className=\"gwFormTitle01\">\n                              Choose your subdomain name\n                              <i className=\"help-circle\">\n                                <i\n                                  className=\"fas fa-question-circle protip\"\n                                  data-pt-position=\"top\"\n                                  data-pt-title=\"After you choose your subdomain, you can create a redirect with a mask to it, from your own main domain. so your users will not even know about that subdomain and it will look and fell like it yours\"\n                                  aria-hidden=\"true\"\n                                ></i>\n                              </i>{\" \"}\n                            </div>\n                            <div className=\"gwFormSFormbox01 v2 smFixer03\">\n                              <input\n                                type=\"text\"\n                                value={subDomain}\n                                onChange={this.handalFormChange}\n                              />{\" \"}\n                              <span>.smartswap.exchange </span>\n                            </div>\n                          </div>\n\n\n                          <div className=\"gwFormSbox01 NpDisplyFix01 \">\n                            <div className=\"gwFormSubBox01 smFixer04\">\n                              Add logo\n                              <div className=\"SSMainInputBX \">\n                                <input\n                                  placeholder=\"Choose file\"\n                                  disabled=\"disabled\"\n                                  className=\"ssInputtype01\"\n                                />\n                                <label className=\"custom-file-input\">\n                                  <input\n                                    type=\"file\"\n                                    id=\"contained-button-file-logo\"\n                                    onChange={this.changeLogo.bind(this)}\n                                    accept=\"image/*\"\n                                  />\n                                </label>\n                              </div>\n                            </div>\n                            <div className=\"gwFormSubBox01 smFixer04\">\n                              Add a URL link behind your logo\n                              <div className=\"SSMainInputBX\">\n                                <input\n                                  id=\"urlLink\"\n                                  placeholder=\"http:///www.yourwebsite.com\"\n                                  style={{ width: \"100%\", color: \"white\" }}\n                                  className=\"ssInputtype01\"\n                                  value={logoUrl}\n                                  onChange={this.changeurl}\n                                />\n                              </div>\n                            </div>\n                          </div>\n                          {logoImage !== \"\" && (\n                            <div className=\"gwFormSbox01 NpDisplyFix01 \">\n                              <img src={logoImage} alt=\"\" width=\"200\" />\n                            </div>\n                          )}\n\n                          <div className=\"gwFormSbox01 NpDisplyFix01 smFixer04\">\n                            <div className=\"gwFormSubBox01\">\n                              Add new background\n                              <div className=\"SSMainInputBX\">\n                                <input\n                                  placeholder=\"Choose file\"\n                                  disabled=\"disabled\"\n                                  className=\"ssInputtype01\"\n                                />\n                                <label className=\"custom-file-input\">\n                                  <input\n                                    type=\"file\"\n                                    onChange={this.Main.bind(this)}\n                                    id=\"contained-button-file\"\n                                    accept=\"image/*\"\n                                  />\n                                </label>\n                              </div>\n                            </div>\n                            <div className=\"gwFormSubBox01\">\n                              Background dark layer\n                              <div className=\"dragorInput\">\n                                <div className=\"bg-slider\">\n                                  <input\n                                    type=\"range\"\n                                    min=\"1\"\n                                    max=\"99\"\n                                    value={this.state.backgroundOverLay}\n                                    class=\"overlay-slider\"\n                                    id=\"myRange\"\n                                    onChange={this.changeOverlay}\n                                    title=\"title\"\n                                  />\n\n                                  <span className=\"bar\"></span>\n\n                                  <span\n                                    className=\"progress\"\n                                    style={{\n                                      width: `calc(${this.state.backgroundOverLay}% )`,\n                                    }}\n                                  ></span>\n                                  <span className=\"text\">0%</span>\n                                  <span className=\"text right\">100%</span>\n                                  <span\n                                    className=\"percent\"\n                                    style={{\n                                      left: `calc(${this.state.backgroundOverLay\n                                        }% - ${this.state.backgroundOverLay / 3 - 23\n                                        }px)`,\n                                      borderRadius: \"0\",\n                                      border: \"0\",\n                                      boxShadow: \"none\",\n                                    }}\n                                  >\n                                    {this.state.backgroundOverLay}%\n                                  </span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          {bgimage !== \"\" && (\n                            <div className=\"gwFormSbox01 NpDisplyFix01 \">\n                              <img src={bgimage} alt=\"\" width=\"200\" />\n                            </div>\n                          )}\n\n                          <div className=\"gwFormSbox01 smFixer04\">\n                            <div className=\"gwFormTitle01\" style={{ margin: '20px 0 0 0' }}>\n                              Keep SmartSwap side bar\n                            </div>\n                            <div className=\"gwFormSFormbox02\">\n                              <div className=\"md-radio md-radio-inline \">\n                                <input\n                                  type=\"radio\"\n                                  id=\"radio21\"\n                                  name=\"sideBar\"\n                                  value=\"true\"\n                                  defaultChecked\n                                  onClick={this._onChangeRadio}\n                                />\n                                <label htmlFor=\"radio21\">Yes</label>\n                              </div>\n                              <div className=\"md-radio md-radio-inline \">\n                                <input\n                                  type=\"radio\"\n                                  id=\"radio22\"\n                                  name=\"sideBar\"\n                                  value=\"false\"\n                                  defaultChecked={\n                                    this.state.sideBar === \"false\"\n                                  }\n                                  onClick={this._onChangeRadio}\n                                />\n                                <label htmlFor=\"radio22\">No </label>\n                              </div>\n                            </div>\n                            <div className=\"gwFormTitle01\" style={{ margin: '20px 0 0 0' }}>\n                              Change button and text\n                            </div>\n                            <div className=\"gwFormSFormbox02\">\n                              <div className=\"md-radio md-radio-inline \">\n                                <input\n                                  type=\"radio\"\n                                  id=\"radio11\"\n                                  name=\"changeText\"\n                                  value=\"Yes\"\n                                  defaultChecked\n                                  onClick={this._onChangeRadio}\n                                />\n                                <label htmlFor=\"radio11\">Yes</label>\n                              </div>\n                              <div className=\"md-radio md-radio-inline \">\n                                <input\n                                  type=\"radio\"\n                                  id=\"radio12\"\n                                  name=\"changeText\"\n                                  value=\"No\"\n                                  defaultChecked={\n                                    this.state.changeText === \"No\"\n                                  }\n                                  onClick={this._onChangeRadio}\n                                />\n                                <label htmlFor=\"radio12\">No </label>\n                              </div>\n                            </div>\n\n                            {/* <div className=\"gwFormTitle01\" style={{ margin: '20px 0 0 0' }}>\n                              Keep button \"BECOME A SWAP PROVIDER\"\n                            </div>\n\n                            <div className=\"gwFormSFormbox02\">\n                              <div className=\"md-radio md-radio-inline \">\n                                <input\n                                  type=\"radio\"\n                                  id=\"radio13\"\n                                  name=\"aaaa\"\n                                  value=\"Yes\"\n                                  defaultChecked\n                                />\n                                <label htmlFor=\"radio13\">Yes</label>\n                              </div>\n                              <div className=\"md-radio md-radio-inline \">\n                                <input\n                                  type=\"radio\"\n                                  id=\"radio14\"\n                                  name=\"aaaa\"\n                                  value=\"No\"\n                                />\n                                <label htmlFor=\"radio14\">No </label>\n                              </div>\n                            </div>\n\n                            <div className=\"gwFormTitle01\" style={{ margin: '20px 0 0 0' }}>\n                              Keep button \"GET YOUR OWN FREE LICENSE\"\n                            </div>\n\n                            <div className=\"gwFormSFormbox02\">\n                              <div className=\"md-radio md-radio-inline \">\n                                <input\n                                  type=\"radio\"\n                                  id=\"radio15\"\n                                  name=\"bbb\"\n                                  value=\"Yes\"\n                                  defaultChecked\n                                />\n                                <label htmlFor=\"radio15\">Yes</label>\n                              </div>\n                              <div className=\"md-radio md-radio-inline \">\n                                <input\n                                  type=\"radio\"\n                                  id=\"radio16\"\n                                  name=\"bbb\"\n                                  value=\"No\"\n                                />\n                                <label htmlFor=\"radio16\">No </label>\n                              </div>\n                            </div> */}\n                          </div>\n                          {changeText === \"Yes\" && (\n                            <>\n                              <div className=\"gwFormSbox01\">\n                                <div className=\"gwFormTitle01\">\n                                  Select font style\n                                </div>\n                                <select\n                                  name=\"fontStyle\"\n                                  id=\"fontStyle\"\n                                  className=\"subdomain\"\n                                  value={fontStyle}\n                                  onChange={this.changeFontStyle}\n                                  style={{\n                                    padding: \"20px 15px\",\n                                    width: \"100%\",\n                                    backgroundColor: \"#271e3a\",\n                                    color: \"#fff\",\n                                    border: 0,\n                                  }}\n                                >\n                                  <option value=\"Default\">Default</option>\n                                  <option value=\"Montserrat\">Montserrat</option>\n                                  <option value=\"Nunito\">Nunito</option>\n                                  <option value=\"Poppins\">Poppins</option>\n                                  <option value=\"Roboto\">Roboto</option>\n                                </select>\n                                {/* <div className=\"LiproDropdown\">\n                                  <button\n                                    className=\"LiproDDbtn01\"\n                                    onClick={() => this.toggle(1)}\n                                  >\n                                    <div className=\"ddIconBX\">Default</div>\n                                    <i className=\"fas fa-caret-down\"></i>\n                                  </button>\n                                  <div className=\"ddContainer\">\n                                    <Collapse\n                                      isOpen={this.state.isOpen1}\n                                      className={\"collapse-css-transition\"}\n                                    >\n                                      <button className=\"LiproDDbtn01\">\n                                        <div className=\"ddIconBX\">Font 01</div>\n                                      </button>\n                                      <button className=\"LiproDDbtn01\">\n                                        <div className=\"ddIconBX\">Font 02</div>\n                                      </button>\n                                    </Collapse>\n                                    \n                                  </div>\n                                </div> */}\n                              </div>\n\n                              <div className=\"colorPlateMBox npFixer05\">\n                                <div className=\"colorPlateTitle01\">\n                                  Text color\n                                </div>\n                                <div className=\"colorPlateSBox01\">\n                                  <div className=\"md-radio md-radio-inline \">\n                                    <input\n                                      type=\"radio\"\n                                      id=\"s01\"\n                                      name=\"s11\"\n                                      value=\"s10\"\n                                      defaultChecked\n                                      onClick={() =>\n                                        this.setState({ primaryColor: \"#fff\" })\n                                      }\n                                    />\n                                    <label htmlFor=\"s01\"></label>\n                                  </div>\n                                  <div\n                                    className=\"colorPlater\"\n                                    onClick={() => {\n                                      document.getElementById(\n                                        \"s01\"\n                                      ).checked = true;\n                                      this.setState({ primaryColor: \"#fff\" });\n                                    }}\n                                  >\n                                    Current color{\" \"}\n                                    <div\n                                      className=\"ColorBX\"\n                                      style={{ backgroundColor: \"#fff\" }}\n                                    ></div>\n                                  </div>\n                                  <div className=\"chevrBox\">\n                                    <i className=\"fas fa-chevron-right\"></i>\n                                  </div>\n                                </div>\n                                <div\n                                  className=\"colorPlateSBox02\"\n                                  style={{ position: \"relative\" }}\n                                >\n                                  <div className=\"md-radio md-radio-inline \">\n                                    <input\n                                      type=\"radio\"\n                                      id=\"s02\"\n                                      name=\"s11\"\n                                      value=\"s11\"\n                                      defaultChecked={primaryColor !== \"#fff\"}\n                                    />\n                                    <label htmlFor=\"s02\"></label>\n                                  </div>\n                                  <div\n                                    className=\"colorPlater\"\n                                    onClick={(e) => {\n                                      this.toggalColor(\n                                        e,\n                                        \"showPrimaryColor\",\n                                        \"s02\"\n                                      );\n                                    }}\n                                  >\n                                    New color\n                                    <span className=\"colorPlaterSbx\">\n                                      <div\n                                        className=\"ColorBX\"\n                                        style={{ background: primaryColor }}\n                                      ></div>\n                                      <button>\n                                        {\" \"}\n                                        <i class=\"fas fa-sort-down\"></i>{\" \"}\n                                      </button>\n                                    </span>\n                                  </div>\n                                  {showPrimaryColor && (\n                                    <>\n                                      <div\n                                        className=\"overPicker\"\n                                        onClick={this.closeChromePickerPopUp.bind(\n                                          this\n                                        )}\n                                      ></div>\n                                      <div className=\"color-picker\">\n                                        <ChromePicker\n                                          color={primaryColor}\n                                          onChangeComplete={(color) => {\n                                            this.handleChangeComplete(\n                                              color,\n                                              \"primaryColor\"\n                                            );\n                                          }}\n                                        />\n                                      </div>\n                                    </>\n                                  )}\n                                </div>\n                              </div>\n\n                              <div className=\"colorPlateMBox npFixer05\">\n                                <div className=\"colorPlateTitle01\">\n                                  Connect your wallet button\n                                </div>\n                                <div className=\"colorPlateSBox01\">\n                                  <div className=\"md-radio md-radio-inline \">\n                                    <input\n                                      type=\"radio\"\n                                      id=\"s03\"\n                                      name=\"s12\"\n                                      value=\"s12\"\n                                      defaultChecked\n                                      onClick={() =>\n                                        this.setState({\n                                          secondaryColor: \"#5c6bc0\",\n                                        })\n                                      }\n                                    />\n                                    <label htmlFor=\"s03\"></label>\n                                  </div>\n                                  <div\n                                    className=\"colorPlater\"\n                                    onClick={() => {\n                                      document.getElementById(\n                                        \"s03\"\n                                      ).checked = true;\n                                      this.setState({\n                                        secondaryColor: \"#5c6bc0\",\n                                      });\n                                    }}\n                                  >\n                                    Current color{\" \"}\n                                    <div\n                                      className=\"ColorBX\"\n                                      style={{ backgroundColor: \"#5c6bc0\" }}\n                                    ></div>\n                                  </div>\n                                  <div className=\"chevrBox\">\n                                    <i className=\"fas fa-chevron-right\"></i>\n                                  </div>\n                                </div>\n                                <div\n                                  className=\"colorPlateSBox02\"\n                                  style={{ position: \"relative\" }}\n                                >\n                                  <div className=\"md-radio md-radio-inline \">\n                                    <input\n                                      type=\"radio\"\n                                      id=\"s04\"\n                                      name=\"s12\"\n                                      value=\"s12\"\n                                      defaultChecked={\n                                        secondaryColor !== \"#5c6bc0\"\n                                      }\n                                    />\n                                    <label htmlFor=\"s04\"></label>\n                                  </div>\n                                  <div\n                                    className=\"colorPlater\"\n                                    onClick={(e) => {\n                                      this.toggalColor(\n                                        e,\n                                        \"showSecondaryColor\",\n                                        \"s04\"\n                                      );\n                                    }}\n                                  >\n                                    New color\n                                    <span className=\"colorPlaterSbx\">\n                                      <div\n                                        className=\"ColorBX\"\n                                        style={{ background: secondaryColor }}\n                                      ></div>\n                                      <button>\n                                        {\" \"}\n                                        <i class=\"fas fa-sort-down\"></i>{\" \"}\n                                      </button>\n                                    </span>\n                                  </div>\n                                  {showSecondaryColor && (\n                                    <>\n                                      <div\n                                        className=\"overPicker\"\n                                        onClick={this.closeChromePickerPopUp.bind(\n                                          this\n                                        )}\n                                      ></div>\n                                      <div className=\"color-picker\">\n                                        <ChromePicker\n                                          color={secondaryColor}\n                                          onChangeComplete={(color) => {\n                                            this.handleChangeComplete(\n                                              color,\n                                              \"secondaryColor\"\n                                            );\n                                          }}\n                                        />\n                                      </div>\n                                    </>\n                                  )}\n                                </div>\n                              </div>\n\n                              <div className=\"colorPlateMBox npFixer05\">\n                                <div className=\"colorPlateTitle01\">\n                                  Swap button\n                                </div>\n                                <div className=\"colorPlateSBox01\">\n                                  <div className=\"md-radio md-radio-inline \">\n                                    <input\n                                      type=\"radio\"\n                                      id=\"swap\"\n                                      name=\"swapButtonColor\"\n                                      value=\"s12\"\n                                      defaultChecked\n                                      onClick={() =>\n                                        this.setState({\n                                          swapButtonColor: \"#91dc27\",\n                                        })\n                                      }\n                                    />\n                                    <label htmlFor=\"swap\"></label>\n                                  </div>\n                                  <div\n                                    className=\"colorPlater\"\n                                    onClick={() => {\n                                      document.getElementById(\n                                        \"swap\"\n                                      ).checked = true;\n                                      this.setState({\n                                        swapButtonColor: \"#91dc27\",\n                                      });\n                                    }}\n                                  >\n                                    Current color{\" \"}\n                                    <div\n                                      className=\"ColorBX\"\n                                      style={{ backgroundColor: \"#91dc27\" }}\n                                    ></div>\n                                  </div>\n                                  <div className=\"chevrBox\">\n                                    <i className=\"fas fa-chevron-right\"></i>\n                                  </div>\n                                </div>\n                                <div\n                                  className=\"colorPlateSBox02\"\n                                  style={{ position: \"relative\" }}\n                                >\n                                  <div className=\"md-radio md-radio-inline \">\n                                    <input\n                                      type=\"radio\"\n                                      id=\"swap1\"\n                                      name=\"swapButtonColor\"\n                                      value=\"s12\"\n                                      defaultChecked={\n                                        swapButtonColor !== \"#91dc27\"\n                                      }\n                                    />\n                                    <label htmlFor=\"swap1\"></label>\n                                  </div>\n                                  <div\n                                    className=\"colorPlater\"\n                                    onClick={(e) => {\n                                      this.toggalColor(\n                                        e,\n                                        \"showSwapButtonColor\",\n                                        \"swap1\"\n                                      );\n                                    }}\n                                  >\n                                    New color\n                                    <span className=\"colorPlaterSbx\">\n                                      <div\n                                        className=\"ColorBX\"\n                                        style={{ background: swapButtonColor }}\n                                      ></div>\n                                      <button>\n                                        {\" \"}\n                                        <i class=\"fas fa-sort-down\"></i>{\" \"}\n                                      </button>\n                                    </span>\n                                  </div>\n                                  {showSwapButtonColor && (\n                                    <>\n                                      <div\n                                        className=\"overPicker\"\n                                        onClick={this.closeChromePickerPopUp.bind(\n                                          this\n                                        )}\n                                      ></div>\n                                      <div className=\"color-picker\">\n                                        <ChromePicker\n                                          color={swapButtonColor}\n                                          onChangeComplete={(color) => {\n                                            this.handleChangeComplete(\n                                              color,\n                                              \"swapButtonColor\"\n                                            );\n                                          }}\n                                        />\n                                      </div>\n                                    </>\n                                  )}\n                                </div>\n                              </div>\n                            </>\n                          )}\n                          {errormsg !== \"\" && (\n                            <p style={{ color: \"red\" }}>{errormsg}</p>\n                          )}\n                          {successmsg !== \"\" && (\n                            <p style={{ color: \"#92db28\" }}>{successmsg}</p>\n                          )}\n\n                          <div className=\"colorPlateMBox\">\n                            <div className=\"colorPlateTitle01\">\n                              <button\n                                disabled={isloading}\n                                onClick={this.preview}\n                              >\n                                Preview\n                              </button>\n                              {visitDomain !== \"\" && (\n                                <button\n                                  className=\"\"\n                                  style={{ marginLeft: 25 }}\n                                  onClick={() => {\n                                    window.open(visitDomain, \"_blank\");\n                                  }}\n                                >\n                                  Go to Page\n                                </button>\n                              )}\n                            </div>\n                          </div>\n                        </>\n                      )}\n                      {typeofLicense === \"Smart contract integration\" && (\n                        <div id=\"contract-integration\">\n                          {/* <div className=\"gwFormTitle01\">swapMulti </div>\n                          <div className=\"swapMulti\">\n                            <Highlight language=\"javascript\">\n                              {` function swapMulti (                          \n IERC20[] memory tokens,\n uint256 amounts,\n uint256 minReturn,\n uint256[] memory distribution,\n uint256[] memory flags,\n ) public payable returns (uint256)`}\n                            </Highlight>\n                          </div>\n\n                          <p className=\"swapMultiP\">\n                            Swap <span style={{ color: \"white\" }}>amount</span>{\" \"}\n                            first element of{\" \"}\n                            <span style={{ color: \"white\" }}>tokens</span> of\n                            the latest element.<br></br>\n                            The length of{\" \"}\n                            <span style={{ color: \"white\" }}>flags</span> array\n                            should be 1 element less than tokens array length.\n                            Each element from{\" \"}\n                            <span style={{ color: \"white\" }}>flags</span> array\n                            corresponds to 2 neighboring elements from{\" \"}\n                            <span style={{ color: \"white\" }}>tokens</span>{\" \"}\n                            array.\n                          </p>\n                          <table className=\"swapMultiTable\">\n                            <tr style={{ color: \"white\" }}>\n                              <td className=\"lefttd\">Params</td>\n                              <td>Type</td>\n                              <td>Description </td>\n                            </tr>\n                            <tr>\n                              <td className=\"lefttd\">token</td>\n                              <td>IERC20[]</td>\n                              <td>\n                                Addresses of tokens or{\" \"}\n                                <span style={{ color: \"white\" }}>\n                                  address(0)\n                                </span>{\" \"}\n                                for Ether\n                              </td>\n                            </tr>\n                            <tr>\n                              <td className=\"lefttd\">amount</td>\n                              <td>uint256</td>\n                              <td>Amount of tokens</td>\n                            </tr>\n                            <tr>\n                              <td className=\"lefttd\">minReturn</td>\n                              <td>uint256</td>\n                              <td>\n                                Minimum expected return,else revert transaction\n                              </td>\n                            </tr>\n                            <tr>\n                              <td className=\"lefttd\">distribution</td>\n                              <td>uint256[]</td>\n                              <td style={{ lineHeight: \"1.8\" }}>\n                                Array of weights for volume distribution\n                                (returned by{\" \"}\n                                <span style={{ color: \"white\" }}>\n                                  getRespectReturn)\n                                </span>\n                              </td>\n                            </tr>\n                            <tr style={{ borderBottom: \"1px solid #271e3a\" }}>\n                              <td className=\"lefttd\">flags</td>\n                              <td>uint256[]</td>\n                              <td style={{ lineHeight: \"1.8\" }}>\n                                The sequence of flags for enabling and disabling\n                                some features (default:{\" \"}\n                                <span style={{ color: \"white\" }}>0</span>), see\n                                flags Description\n                              </td>\n                            </tr>\n                          </table> */}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n\n\n                  <div className=\"gwFormSFormbox03\">\n                    {/* <button\n                      className=\"gwFormBTN01 greenBack\"\n                      disabled={\n                        isloading || typeofLicense !== \"Zero integration\"\n                      }\n                      onClick={this.uploadData}\n                    >\n                      {isloading\n                        ? \"Cloning..\"\n                        : \"GET YOUR OWN LICENSE FOR FREE\"}\n                    </button> */}\n\n                    {this.state.web3 !== null ?\n                      <button\n                        className={allowClone ? \"gwFormBTN01 greenBack\" : \"gwFormBTN01 greenBack disable-btn\"}\n                        disabled={\n                          isloading || typeofLicense !== \"Zero integration\" || !allowClone\n                        }\n                        onClick={this.uploadData}\n                      >\n                        {isloading\n                          ? \"Cloning..\"\n                          : \"GET YOUR OWN LICENSE FOR FREE\"}\n                      </button>\n                      :\n                      <button\n                        className=\"gwFormBTN01\"\n                        disabled={\n                          isloading\n                        }\n                        onClick={() => { this.connectWallet() }}\n                      >\n                        Connect your wallet\n                      </button>\n                    }\n                  </div>\n\n                  {/*     First Popup Part */}\n                  {(visitDomain && typeofLicense === \"Zero integration\") ? (\n                    <>\n                      <div className=\"spacerLine02\"></div>\n                      <div className=\"smeTitle01-v3\">\n                        Below is Your License URL and Smart Contract\n                      </div>\n\n                      <div className=\"LicMbx\">\n                        Your licensee sub domain\n                        <div className=\"LicInputBX01\">\n                          <input type=\"text\" value={visitDomain} id=\"license\" />\n                          <a\n                            href=\"#\"\n                            className=\"LicCopyBTN\"\n                            onClick={(a) => copyAffiliateLink(a, \"license\")}\n                          >\n                            <i class=\"fas fa-copy\"></i>\n                          </a>\n                        </div>\n                      </div>\n                      <div className=\"gwFormBRBox01\">\n                        {ethLicenseAddress !== \"0x0000000000000000000000000000000000000000\" ?\n                          <div className=\"LicMbx\">\n                            Your licensee smart contract for Ethereum\n                            <div className=\"LicInputBX01\">\n                              <input\n                                type=\"text\"\n                                value={ethLicenseAddress}\n                                id=\"Ethereum\"\n                              />\n                              <a\n                                href=\"#\"\n                                className=\"LicCopyBTN\"\n                                onClick={(a) => copyAffiliateLink(a, \"Ethereum\")}\n                              >\n                                <i class=\"fas fa-copy\"></i>\n                              </a>\n                            </div>\n                            <div className=\"LicInfoBX\">\n                              {\" \"}\n                              Created: July 21, 2021 11:23:01 am UTC |\n                              <a href=\"#\" onClick={() => { this.showDepWdrwPopup(\"Ethereum\", ethLicenseAddress, 'DepositToken', \"tab-A1\") }}>\n                                <span className=\"greenC\">\n                                  Deposit your reimbursement TOKEN to this smart\n                                  contract\n                                </span>{\" \"}\n                              </a>\n                              {/* | Balance: 8569.563 [TOKEN] |{\" \"} */}\n                              | Balance: {ethLicenseTokenBalance} |{\" \"}\n                              <a href=\"#\" onClick={() => { this.showDepWdrwPopup(\"Ethereum\", ethLicenseAddress, 'DepositToken', \"tab-A2\") }}>\n                                <span className=\"redC\">\n                                  Withdraw your reimbursement tokens\n                                </span>\n                              </a>\n                            </div>\n                            <div style={{ marginTop: \"15px\" }}>\n                              Change the fees that you want to charge your users <i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text\" aria-hidden=\"true\"></i>\n                            </div>\n\n                            <div className='DragrMBX'>\n                              <div className='DragrSBX'>\n\n                                <div className=\"dragorInput\">\n                                  <InputRange\n                                    maxValue={300}\n                                    minValue={0}\n                                    value={this.state.ethLicenseFees}\n                                    formatLabel={value => `${value / 100}%`}\n                                    onChange={value => this.setState({ ethLicenseFees: value })} />\n                                </div>\n                              </div>\n                              <button className=\"DragrSBTN\" onClick={() => { this.setLicenseeFee(\"Ethereum\", constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].reimbursementContract, ethLicenseAddress, this.state.ethLicenseFees) }}>Save</button>\n\n                            </div>\n                          </div> : null\n                        }\n\n                        {bscLicenseAddress !== \"0x0000000000000000000000000000000000000000\" ?\n                          <div className=\"LicMbx\">\n                            Your licensee smart contract for BSC\n                            <div className=\"LicInputBX01\">\n                              <input\n                                type=\"text\"\n                                value={bscLicenseAddress}\n                                id=\"BSC\"\n                              />\n                              <a\n                                href=\"#\"\n                                className=\"LicCopyBTN\"\n                                onClick={(a) => copyAffiliateLink(a, \"BSC\")}\n                              >\n                                <i class=\"fas fa-copy\"></i>\n                              </a>\n                            </div>\n                            <div className=\"LicInfoBX\">\n                              {\" \"}\n                              Created: July 21, 2021 11:23:01 am UTC |\n\n                              <a href=\"#\" onClick={() => { this.showDepWdrwPopup(\"BSC\", bscLicenseAddress, 'DepositToken', \"tab-A1\") }}>\n                                <span className=\"greenC\">\n                                  Deposit your reimbursement TOKEN to this smart\n                                  contract\n                                </span>{\" \"}\n                              </a>\n\n                              {/* | Balance: 8569.563 [TOKEN] |{\" \"} */}\n                              | Balance: {bscLicenseTokenBalance} |{\" \"}\n                              <a href=\"#\" onClick={() => { this.showDepWdrwPopup(\"BSC\", bscLicenseAddress, 'DepositToken', \"tab-A2\") }}>\n                                <span className=\"redC\">\n                                  Withdraw your reimbursement tokens\n                                </span>\n                              </a>\n                            </div>\n                            <div style={{ marginTop: \"15px\" }}>\n                              Change the fees that you want to charge your users <i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text\" aria-hidden=\"true\"></i>\n                            </div>\n                            <div className='DragrMBX'>\n                              <div className='DragrSBX'>\n                                <div className=\"dragorInput\">\n                                  <InputRange\n                                    maxValue={300}\n                                    minValue={0}\n                                    value={this.state.bscLicenseFees}\n                                    formatLabel={value => `${value / 100}%`}\n                                    onChange={value => this.setState({ bscLicenseFees: value })} />\n\n                                </div>\n                              </div>\n                              <button className=\"DragrSBTN\" onClick={() => { this.setLicenseeFee(\"BSC\", constantConfig[CONSTANT.NETWORK_ID.BINANCE].reimbursementContract, bscLicenseAddress, this.state.bscLicenseFees) }}>Save</button>\n                            </div>\n                          </div>\n                          : null}\n                        {/* <div className=\"LicMbx\">\n                          Your licensee smart contract for Polygon\n                          <div className=\"LicInputBX01\">\n                            <input\n                              type=\"text\"\n                              value=\"0x0000000000000000000000000000000000000000\"\n                              id=\"Polygon\"\n                            />\n                            <a\n                              href=\"#\"\n                              className=\"LicCopyBTN\"\n                              onClick={(a) => copyAffiliateLink(a, \"Polygon\")}\n                            >\n                              <i class=\"fas fa-copy\"></i>\n                            </a>\n                          </div>\n                          <div className=\"LicInfoBX\">\n                            {\" \"}\n                            Created: July 21, 2021 11:23:01 am UTC |\n                            <span className=\"greenC\">\n                              Deposit your reimbursement TOKEN to this smart\n                              contract\n                            </span>{\" \"}\n                            | Balance: 8569.563 [TOKEN] |{\" \"}\n                            <span className=\"redC\">\n                              Withdraw your reimbursement tokens\n                            </span>\n                          </div>\n                          <div style={{ marginTop: \"15px\" }}>\n                            Change the fees that you want to charge your users <i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text\" aria-hidden=\"true\"></i>\n                          </div>\n                          <div className=\"dragorInput\">\n                            <InputRange\n                              maxValue={100}\n                              minValue={0}\n                              value={this.state.value}\n                              formatLabel={value => `${value}%`}\n                              onChange={value => this.setState({ value })} />\n                          </div>\n                        </div> */}\n                      </div>\n                    </>\n                  ) : (this.state.web3 !== null && typeofLicense === \"Smart contract integration\") && (\n                    <>\n                      <div className='smeTitle01-v3'>Below is Your License URL and Integration Instruction</div>\n\n                      <div className='LicMbx'>\n                        Your licensee sub domain\n                        <div className='LicInputBX01'>\n                          <input type=\"text\" value=\"http://yourwebsite.smartswap.exchange\" />\n                        </div>\n                      </div>\n\n                      <div className='LicMbx'>\n                        You need to  call this function in SmartSwap contract  <a href='#' className='LicCopyBTN v2'><i class=\"fas fa-copy\"></i></a>\n\n                        <div className='settingCodeBx'>\n                    //user should approve tokens transfer before calling this function. <br />\n//if no licensee set it to address(0) <br />\n                          function swap( <br />\n                          address tokenA, // token that user send to swap ( address(1) for BNB, address(2) for ETH) <br />\n                          address tokenB, // token that user want to receive ( address(1) for BNB, address(2) for ETH) <br />\n                          address receiver, // address that will receive tokens on other chain (user's wallet address) <br />\n                          uint256 amountA,  // amount of tokens user sends to swap <br />\n                          address licensee,   // for now, = address(0) <br />\n                          bool isInvestment,  // for now, = false <br />\n                          uint128 minimumAmountToClaim,   // do not claim on user behalf less of this amount. Only exception if order fulfilled. For now, = 0 <br />\n                          uint128 limitPice   // Do not match user if token A price less this limit. For now, = 0 <br />\n                          ) <br />\n                          external <br />\n                          payable <br />\n                          returns (bool)\n                        </div>\n\n                        <button class=\"LicSBTN01\">Download ABI of smart contract file</button>\n\n\n                      </div>\n\n                      <div className='LicMbx'>\n                        Smart contract address BSC\n                        <div className='LicInputBX01'>\n                          <input type=\"text\" value={constantConfig[CONSTANT.NETWORK_ID.BINANCE].swapFactoryContract} />\n                          <a href='#' className='LicCopyBTN'><i class=\"fas fa-copy\"></i></a>\n                        </div>\n                      </div>\n\n                      <div className='LicMbx'>\n                        Smart contract address Ethereum\n                        <div className='LicInputBX01'>\n                          <input type=\"text\" value={constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].swapFactoryContract} />\n                          <a href='#' className='LicCopyBTN'><i class=\"fas fa-copy\"></i></a>\n                        </div>\n                      </div>\n                    </>\n                  )}\n\n                  {/* Second Popup Part \n\n                      <div className='smeTitle01-v3'>Below is Your License URL and Integration Instruction</div>\n\n                                    <div className='LicMbx'>\n                                    Your licensee sub domain\n                                        <div className='LicInputBX01'>\n                                        <input type=\"text\" value=\"http://yourwebsite.smartswap.exchange\" /> \n                                        </div>\n                                    </div>\n\n                                    <div className='LicMbx'>\n                                    You need to  call this function in SmartSwap contract  <a href='#' className='LicCopyBTN v2'><i class=\"fas fa-copy\"></i></a>\n\n                                    <div className='settingCodeBx'> \n                                                        //user should approve tokens transfer before calling this function. <br />\n    //if no licensee set it to address(0) <br />\n    function swap( <br />\n        address tokenA, // token that user send to swap ( address(1) for BNB, address(2) for ETH) <br />\n        address tokenB, // token that user want to receive ( address(1) for BNB, address(2) for ETH) <br />\n        address receiver, // address that will receive tokens on other chain (user's wallet address) <br />\n        uint256 amountA,  // amount of tokens user sends to swap <br />\n        address licensee,   // for now, = address(0) <br />\n        bool isInvestment,  // for now, = false <br />\n        uint128 minimumAmountToClaim,   // do not claim on user behalf less of this amount. Only exception if order fulfilled. For now, = 0 <br />\n        uint128 limitPice   // Do not match user if token A price less this limit. For now, = 0 <br />\n    ) <br />\n        external <br />\n        payable <br />\n        returns (bool)\n                                                </div>\n\n                                        <button class=\"LicSBTN01\">Download ABI of smart contract file</button>\n\n\n                                    </div>\n\n                                    <div className='LicMbx'>\n                                    Smart contract address BSC\n                                        <div className='LicInputBX01'>\n                                        <input type=\"text\" value=\"0x084374b068Eb3db504178b4909eDC26D01226a80\" />\n                                        <a href='#' className='LicCopyBTN'><i class=\"fas fa-copy\"></i></a>\n                                        </div> \n                                    </div>\n\n                                    <div className='LicMbx'>\n                                    Smart contract address Ethereum\n                                        <div className='LicInputBX01'>\n                                        <input type=\"text\" value=\"0x084374b068Eb3db504178b4909eDC26D01226a80\" />\n                                        <a href='#' className='LicCopyBTN'><i class=\"fas fa-copy\"></i></a>\n                                        </div> \n                                    </div>\n                               \n       */}\n                </div>\n              </div>\n            </div>\n            {/* <!--======================= SWAP BLOCK END =====================--> */}\n          </div>\n          {/* <!--======================= WALLET POPUP START =====================--> */}\n          <WalletPopup\n            web3={this.state.web3}\n            web3Config={web3Config}\n          ></WalletPopup>\n\n\n          <WithDrawToken closePopup={this.closePopup} openPopup={this.openPopup} />\n\n\n          {/* <!--======================= WALLET POPUP END =====================-->\n                    <!--======================= COIN POPUP START =====================--> */}\n          <CoinPopup\n            web3={this.state.web3}\n            web3Config={web3Config}\n            setCurrency={this.setSendCurrency}\n            popId={\"sendCurPop\"}\n            opositeSelectedCurrrency={this.state.selectedReceiveCurrency}\n            selectedCurrrency={this.state.selectedSendCurrency}\n          ></CoinPopup>\n          <CoinPopup\n            web3={this.state.web3}\n            web3Config={web3Config}\n            setCurrency={this.setReceiveCurrency}\n            popId={\"receiveCurPop\"}\n            opositeSelectedCurrrency={this.state.selectedSendCurrency}\n            selectedCurrrency={this.state.selectedReceiveCurrency}\n          ></CoinPopup>\n          {/* <!--======================= COIN POPUP END =====================-->\n                    <!--======================= SIDE POPUP START =====================--> */}\n          <SidePopup web3={this.state.web3} web3Config={web3Config}></SidePopup>\n          {/* <!--======================= SIDE POPUP END =====================--> */}\n          {/* =========================== DEPOSIT TOKENS POPUP START ================================= */}\n          <DepositToken\n            tokenAddress={this.state.depositTokenAddress}\n            network={this.state.depositWithdrawNetwork}\n            vaultAddress={this.state.depositWithdrawVaultAddress}\n            closePopup={this.closePopup}\n            openPopup={this.openPopup}\n          ></DepositToken>\n          {/* =========================== DEPOSIT TOKENS POPUP END ================================= */}\n          {/* <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/gnaJlUA20lk\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> */}\n        </div>\n      </main>\n    );\n  }\n}\n","/var/www/html/SmartSwap_frontend/src/pages/home.js",["212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277"],"import React, { PureComponent, lazy, Suspense } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\nimport web3Js from \"web3\";\nimport Web3 from \"web3\";\nimport web3Config from \"../config/web3Config\";\nimport Validation from \"../helper/validation\";\nimport swapFactoryAbi from \"../abis/swapFactory.json\";\nimport tokenAbi from \"../abis/tokenAbi.json\";\nimport constantConfig from \"../config/constantConfig\";\nimport notificationConfig from \"../config/notificationConfig\";\nimport SwapFactoryContract from \"../helper/swapFactoryContract\";\nimport { LoopCircleLoading } from \"react-loadingg\";\nimport CONSTANT from \"../constants\";\nimport data from \"../config/constantConfig\";\nimport Header from \"../components/Header\";\nimport RightSideMenu from \"../components/RightSideMenu\";\nimport WalletPopup from \"../components/WalletPopup\";\nimport CoinPopup from \"../components/CoinPopup\";\nimport SidePopup from \"../components/SidePopup\";\nimport LiquidityProvider from \"../components/LiquidityProvider\";\nimport LiquidityFountainSP from \"../components/liquidity_fountain_for_SPs\";\nimport About from \"../components/About\";\nimport PeerPopup from \"../components/PeerPopup\";\nimport HowItWorks from \"../components/HowItWorks\";\nimport DepositToken from \"../components/Deposit-withdraw\";\nimport CefiToDefi from \"../components/CefiToDefi\";\nimport axios from \"axios\";\nimport LedgerHistory from \"../components/LedgerHistory\";\nimport NoDomain from \"../components/NoDomain\";\nimport Carousel from \"react-multi-carousel\";\nimport AnimatedNumber from \"react-animated-numbers\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { isValidAddress } from 'ethereumjs-util';\nimport reimbursementAbi from \"../abis/reimbursementAbi.json\";\n\nimport SBLogo01 from \"../assets/images/sb-ICO-01.png\";\nimport SBLogo02 from \"../assets/images/sb-ICO-02.png\";\nimport SBLogo03 from \"../assets/images/sb-ICO-03.png\";\nimport SBLogo04 from \"../assets/images/sb-ICO-04.png\";\nimport SBLogo05 from \"../assets/images/sb-ICO-05.png\";\nimport SBLogo06 from \"../assets/images/sb-ICO-06.png\";\nimport SBLogo07 from \"../assets/images/sb-ICO-07.png\";\nimport SBLogo08 from \"../assets/images/sb-ICO-08.png\";\nimport SBLogo09 from \"../assets/images/sb-ICO-09.png\";\nimport SBLogo010 from \"../assets/images/sb-ICO-010.png\";\nimport SBLogo011 from \"../assets/images/sb-ICO-011.png\";\n\nconst responsive = {\n  desktop: {\n    breakpoint: { max: 3000, min: 1600 },\n    items: 10,\n    slidesToSlide: 1, // optional, default to 1.\n  },\n  desktop2: {\n    breakpoint: { max: 1600, min: 1250 },\n    items: 9,\n    slidesToSlide: 1, // optional, default to 1.\n  },\n  desktop3: {\n    breakpoint: { max: 1250, min: 1024 },\n    items: 8,\n    slidesToSlide: 1, // optional, default to 1.\n  },\n  tablet: {\n    breakpoint: { max: 1024, min: 464 },\n    items: 4,\n    slidesToSlide: 1, // optional, default to 1.\n  },\n  mobile: {\n    breakpoint: { max: 464, min: 0 },\n    items: 2,\n    slidesToSlide: 1, // optional, default to 1.\n  },\n};\n\nconst $ = window.$;\nexport default class Home extends PureComponent {\n  constructor(props) {\n    super();\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n    this.setSendCurrency = this.setSendCurrency.bind(this);\n    this.setReceiveCurrency = this.setReceiveCurrency.bind(this);\n    this.updateCloneData = this.updateCloneData.bind(this);\n    this.clearPreview = this.clearPreview.bind(this);\n    this.getData = this.getData.bind(this);\n    const { match, location, history } = props;\n    this.state = {\n      web3: null,\n      web3Check: false,\n      btnClick: false,\n      swapFactory: null,\n      swapLoading: false,\n      selectedSendCurrency: \"BNB\",\n      selectedReceiveCurrency: \"ETH\",\n      instanceSwapFactoryBinance: null,\n      instanceSwapFactoryEthereum: null,\n      instanceReimbursementBinance: null,\n      instanceReimbursementEthereum: null,\n      tokenInstance: {},\n      txLink: \"\",\n      wrapBox: \"swap\",\n      txIdSent: null,\n      txSentStatus: \"pending\",\n      txSentTime: null,\n      tokenReceive: \"0\",\n      txReceiveTime: null,\n      txIdReceive: null,\n      txLinkSend: \"\",\n      txLinkReturn: \"\",\n      receiveFundAmount: \"\",\n      sendFundAmount: \"\",\n      actualSendFundAmount: 0,\n      approxReceiveFundAmount: 0,\n      allTxHistoryUI: null,\n      allPendingTxHistoryUI: null,\n      showTxHistory: false,\n      showLedger: false,\n      currencyPrices: {},\n      estimatedGasFee: \"0\",\n      tableData: [],\n      isSearchTable: false,\n      tableSearchResult: [],\n      tableDataToDisplay: [],\n      liveETHPrice: 0,\n      wbnbPrice: 0,\n      sideBar: false,\n      tokenBalances: {\n        JNTR: 0,\n        \"JNTR/b\": 0,\n        \"JNTR/e\": 0,\n        JNTR_APPROVED: 0,\n        \"JNTR/b_APPROVED\": 0,\n        \"JNTR/e_APPROVED\": 0,\n      },\n      cloneData:\n        typeof location.state === \"undefined\"\n          ? {}\n          : location.state.cloneData\n            ? location.state.cloneData\n            : {},\n      isloading: false,\n      isSubdomain: false,\n      noSubDomain: false,\n      subDomainName: \"\",\n      amounts: {\n        totalAmountSwapped: 0,\n        feesGenerated: 0,\n        smartBoughtBurned: 0,\n        totalFeesReimbursed: 0,\n        totalReimbursementStaking: 0\n      },\n      licenseeAddress: {\n        56: \"0x0000000000000000000000000000000000000000\",\n        1: \"0x0000000000000000000000000000000000000000\",\n        97: \"0x0000000000000000000000000000000000000000\",\n        42: \"0x0000000000000000000000000000000000000000\"\n      },\n      loadingHistory: false\n    };\n  }\n\n  handleClick() {\n    if (this.state.sideBar == true) {\n      this.setState({\n        sideBar: false\n      });\n    }\n  }\n  updateCloneData = (data) => {\n    this.setState({\n      cloneData: data,\n    });\n  };\n\n  clearPreview = () => {\n    const r = document.querySelector(\":root\");\n    r.style.removeProperty(\"--text-color\");\n    r.style.removeProperty(\"--button-bg-color\");\n    r.style.removeProperty(\"--req-bg\");\n    this.setState({\n      cloneData: {},\n    });\n    this.props.history.push({\n      pathname: \"\",\n      state: {\n        cloneData: {},\n      },\n    });\n  };\n  componentWillMount = async () => {\n    await this.fetchPrice();\n  };\n  componentDidMount = async () => {\n    this.setState({\n      web3Ethereum: new Web3(\n        new Web3.providers.WebsocketProvider(CONSTANT.RPC_PROVIDER_ETHEREUM)\n      ),\n      web3Binance: new Web3(\n        new Web3.providers.HttpProvider(CONSTANT.RPC_PROVIDER_BINANCE)\n      ),\n    });\n\n    {\n      //  this.openPopup('DepositToken');\n      //  this.showWithId(\"DepositToken\", \"tab-A1\");\n    } // temporary popup on\n\n    this.setState(\n      {\n        loading: true,\n      },\n      async () => {\n        await this.initInstance();\n      }\n    );\n\n    const href = window.location.href;\n    const domaindata = href\n      .replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, \"\")\n      .split(\"/\")[0];\n    const domain = domaindata.split(\".\");\n\n    console.log(domaindata);\n    this.setState({\n      subDomainName: domain[0],\n    });\n\n    const localhost = domaindata.indexOf(\"localhost\");\n    console.log(domain.length);\n    if (domain.length === (localhost === -1 ? 3 : 2)) {\n      this.setState({\n        isSubdomain: true,\n      });\n      this.getData(domain);\n    } else {\n      this.setState({\n        isSubdomain: false,\n        isloading: false,\n      });\n      // setTimeout(() => {\n      //   !this.state.cloneData.isPreview && this.openPopup(\"About\");\n      // }, 100);\n    }\n\n    // this.fetchTransactionStatus()\n  };\n\n  async updateTotalAmounts() {\n    let ttAm = 0;\n    await axios\n      .get(`https://api.smartswap.exchange/info`)\n      .then((res) => {\n        if (res.data.totalUsd) {\n\n          ttAm = (res.data.totalUsd).toFixed(0)\n\n        }\n      })\n      .catch((err) => {\n        console.log('error', err);\n      });\n    setTimeout(() => {\n      this.setState({\n        amounts: {\n          totalAmountSwapped: ttAm,\n          feesGenerated: 0,\n          smartBoughtBurned: 0,\n          totalFeesReimbursed: 0,\n          totalReimbursementStaking: 0\n        }\n      })\n    }, 500)\n  }\n\n  getData = async (domain) => {\n    this.setState({\n      isloading: true,\n    });\n    try {\n      const res = await axios.get(\n        `https://wildcard.bswap.info:1830/api/v1/subdomain/getSubDomain/${domain[0]}`\n      );\n      console.log(res);\n      if (res.data.response_code === 200) {\n        if (domain[0].substring(0, 2) === \"0x\") {\n          if (isValidAddress(domain[0])) {\n            web3Config.setLicenseeData(res.data.result)\n          }\n        } else {\n          const r = document.querySelector(\":root\");\n          r.style.setProperty(\"--text-color\", res.data.result.primaryColors);\n          r.style.setProperty(\n            \"--button-bg-color\",\n            res.data.result.seconderyColor\n          );\n          r.style.setProperty(\n            \"--req-bg\",\n            `url(${res.data.result.backGroundImage})`\n          );\n          r.style.setProperty(\"--swap-btn-color\", res.data.result.swapButton);\n          this.setState({\n            cloneData: {\n              bgimage: res.data.result.backGroundImage,\n              logoImage: res.data.result.logo,\n              subDomain: res.data.result.subDomain,\n              primaryColor: res.data.result.primaryColors,\n              secondaryColor: res.data.result.seconderyColor,\n              fontStyle: res.data.result.fontStyle,\n              backgroundOverLay: res.data.result.backgroundOverLay,\n              swapButtonColor: res.data.result.swapButton,\n              logoUrl: res.data.result.logoUrl,\n              sideBar: res.data.result.sideBar\n            },\n            licenseeAddress: {\n              56: res.data.result.bscLicenseAddress,\n              1: res.data.result.ethLicenseAddress,\n              97: res.data.result.bscLicenseAddress,\n              42: res.data.result.ethLicenseAddress\n            }\n          });\n        }\n      } else if (res.data.response_code === 404) {\n        this.setState({\n          noSubDomain: true,\n        });\n        setTimeout(() => {\n          this.openPopup(\"NoDomain\");\n        }, 100);\n      }\n      this.setState({\n        isloading: false,\n      });\n    } catch (error) {\n      console.log(error)\n      console.log(error.response);\n      this.setState({\n        isloading: false,\n      });\n    }\n  };\n\n  async initInstance() {\n    let { web3Binance, web3Ethereum } = this.state;\n    let instanceSwapFactoryBinance = null;\n    let instanceSwapFactoryEthereum = null;\n    let instanceReimbursementBinance = null;\n    let instanceReimbursementEthereum = null;\n    instanceReimbursementBinance = new web3Binance.eth.Contract(\n      reimbursementAbi,\n      constantConfig[CONSTANT.NETWORK_ID.BINANCE].reimbursementContract\n    );\n    instanceReimbursementEthereum = new web3Ethereum.eth.Contract(\n      reimbursementAbi,\n      constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].reimbursementContract\n    );\n    instanceSwapFactoryBinance = new web3Binance.eth.Contract(\n      swapFactoryAbi,\n      constantConfig[CONSTANT.NETWORK_ID.BINANCE].swapFactoryContract\n    );\n    instanceSwapFactoryEthereum = new web3Ethereum.eth.Contract(\n      swapFactoryAbi,\n      constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].swapFactoryContract\n    );\n    let tokenInstance = {};\n    tokenInstance[\"JNTR\"] = new web3Binance.eth.Contract(\n      tokenAbi,\n      \"0x1350044d6a653E87Ed3384DC1D2f6b1A7F138e0A\"\n    );\n    tokenInstance[\"JNTR/b\"] = new web3Binance.eth.Contract(\n      tokenAbi,\n      \"0x001667842cc59cadb0a335bf7c7f77b3c75f41c2\"\n    );\n    tokenInstance[\"JNTR/e\"] = new web3Ethereum.eth.Contract(\n      tokenAbi,\n      \"0x40a99d086d517f06f9d1ed564f51ef75b8f7f042\"\n    );\n    this.setState(\n      {\n        instanceSwapFactoryBinance,\n        instanceSwapFactoryEthereum,\n        instanceReimbursementBinance,\n        instanceReimbursementEthereum,\n        tokenInstance,\n      },\n      () => {\n        // this.listenTransferEvent();\n      }\n    );\n  }\n  updateTokenBalance = async () => {\n    if (this.state.web3 !== null) {\n      const { tokenInstance, tokenBalances, web3 } = this.state;\n      // Balances\n      tokenBalances[\"JNTR\"] = web3Js.utils.fromWei(\n        await tokenInstance[\"JNTR\"].methods\n          .balanceOf(web3Config.getAddress())\n          .call(),\n        \"ether\"\n      );\n      tokenBalances[\"JNTR/b\"] = web3Js.utils.fromWei(\n        await tokenInstance[\"JNTR/b\"].methods\n          .balanceOf(web3Config.getAddress())\n          .call(),\n        \"ether\"\n      );\n      tokenBalances[\"JNTR/e\"] = web3Js.utils.fromWei(\n        await tokenInstance[\"JNTR/e\"].methods\n          .balanceOf(web3Config.getAddress())\n          .call(),\n        \"ether\"\n      );\n      // Approve Balances\n      tokenBalances[\"JNTR_APPROVED\"] = web3Js.utils.fromWei(\n        await tokenInstance[\"JNTR\"].methods\n          .allowance(\n            web3Config.getAddress(),\n            \"0x309208d15fba3207be6c760771ca3b4846e1be93\"\n          )\n          .call(),\n        \"ether\"\n      );\n      tokenBalances[\"JNTR/b_APPROVED\"] = web3Js.utils.fromWei(\n        await tokenInstance[\"JNTR/b\"].methods\n          .allowance(\n            web3Config.getAddress(),\n            \"0x309208d15fba3207be6c760771ca3b4846e1be93\"\n          )\n          .call(),\n        \"ether\"\n      );\n      tokenBalances[\"JNTR/e_APPROVED\"] = web3Js.utils.fromWei(\n        await tokenInstance[\"JNTR/e\"].methods\n          .allowance(\n            web3Config.getAddress(),\n            \"0xeaf41806fcc2a3893a662dbba7a111630f9f6704\"\n          )\n          .call(),\n        \"ether\"\n      );\n      this.setState(\n        {\n          tokenBalances: tokenBalances,\n        },\n        () => {\n          this.forceUpdate();\n          // this.updateButton()\n        }\n      );\n    }\n  };\n  async connectWallet() {\n    this.setState({ btnClick: true });\n    await web3Config.connectWallet(0);\n    let networkId = web3Config.getNetworkId();\n    if (!constantConfig.allowedNetwork.includes(networkId)) {\n      notificationConfig.error(\"Please Select Ethereum or BSC Main Network\");\n      this.setState({ btnClick: false });\n      return;\n    }\n    if (\n      constantConfig.tokenDetails[this.state.selectedSendCurrency].networkId !==\n      networkId &&\n      (networkId === 97 || networkId === 56)\n    ) {\n      notificationConfig.warning(\"Change metamask network to Ethereum!\");\n      return;\n    } else if (\n      constantConfig.tokenDetails[this.state.selectedSendCurrency].networkId !==\n      networkId &&\n      (networkId === 42 || networkId === 1)\n    ) {\n      notificationConfig.warning(\"Change metamask network to Binance!\");\n      return;\n    }\n    this.setState(\n      {\n        web3: web3Config.getWeb3(),\n        btnClick: false,\n      },\n      async () => {\n        await this.fetchedUserTransaction(web3Config.getAddress());\n        // await this.getData([web3Config.getAddress()])\n        // this.changeCurrency(false)\n        // setInterval(() => {\n        //     this.updateTokenBalance();\n        // }, 3000);\n      }\n    );\n  }\n  async swap() {\n    let web3 = web3Config.getWeb3();\n    let networkId = web3Config.getNetworkId();\n    console.log(networkId)\n    let address = web3Config.getAddress();\n    if (web3 === null) return 0;\n    let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\n    let { sendFundAmount } = this.state;\n    if (sendFundAmount === \"\" || sendFundAmount === 0) {\n      notificationConfig.error(\"Enter value to swap\");\n      return;\n    }\n    let actualSendFundAmount = (\n      await this.getActualAmount(\n        sendFundAmount,\n        this.state.selectedSendCurrency\n      )\n    ).toString();\n    let value = 0,\n      swapAmount = 0,\n      allFees = await this.calculateSwapFees(actualSendFundAmount);\n    try {\n      value = web3Js.utils.toWei(actualSendFundAmount.toString());\n    } catch (e) {\n      value = (actualSendFundAmount * 10 ** 18).toFixed(0);\n    }\n    swapAmount = value;\n    if (\n      constantConfig.tokenDetails[this.state.selectedSendCurrency]\n        .approveRequire\n    ) {\n      value = 0;\n    }\n\n    swapFactory.swap(\n      CONSTANT.currencyAddresses[this.state.selectedSendCurrency],\n      CONSTANT.currencyAddresses[this.state.selectedReceiveCurrency],\n      value,\n      swapAmount,\n      allFees,\n      this.state.licenseeAddress[networkId],\n      (hash) => {\n        this.setState({\n          swapLoading: true,\n          txIdSent: hash,\n          txLinkSend: data[networkId].explorer + \"/tx/\" + hash,\n        });\n      },\n      (receipt) => {\n        // this.init()\n        setTimeout(async () => {\n          await this.fetchTransactionStatus(receipt.transactionHash);\n        }, 120000);\n\n        this.setState({\n          swapLoading: false,\n          showLedger: true,\n          wrapBox: \"success\",\n        });\n        notificationConfig.success(\"Swap Success\");\n      }\n    );\n  }\n\n  async fetchTransactionStatus(hash) {\n    // let url = CONSTANT.API_URL + \"/ledger/\" + \"0xcaba174a8ec3edd18e14d7dfc79e68fd0ae4193f\";\n\n    let url = CONSTANT.API_URL + \"/ledger/tx/\" + hash;\n\n    console.log(url);\n\n    var txCheckInterval = setInterval(async () => {\n      console.log(\" interval called \");\n      await axios\n        .get(url)\n        .then((res) => {\n          // console.log(res.data)\n          let result = res.data;\n          console.log(result);\n          if (result.resp_code === 1) {\n            console.log(result.data);\n            // if (result.data.length > 0) {\n            //     result.data.map((ele) => {\n            //         console.log(ele.sentTx)\n\n            //     })\n            // }\n            if (result.data.sentTx === this.state.txIdSent) {\n              console.log(\"in end\");\n              console.log(\"oracle tx start\");\n              console.log(result.data.oracleTx);\n              if (result.data.oracleTx !== undefined) {\n                let txLinkReturn =\n                  constantConfig[result.data.recivedChainId].explorer +\n                  \"/tx/\" +\n                  result.data.oracleTx;\n\n                this.updateLedgerAfterResponse(\n                  result.data.oracleTx,\n                  txLinkReturn,\n                  result.data.recivedAmount\n                );\n                clearInterval(txCheckInterval);\n              }\n\n              console.log(\"oracle tx end\");\n            }\n          }\n        })\n        .catch((err) => {\n          console.log(\"error\", err);\n        });\n    }, 60000);\n\n    // setInterval(async () => {\n    //     await axios\n    //         .get(CONSTANT.API_URL + web3Config.getAddress())\n    //         .then((res) => {\n    //             console.log(res.data)\n    //         })\n    //         .catch((err) => {\n    //             console.log('error', err);\n    //         });\n    // }, 5000)\n  }\n\n  async approve() {\n    let web3 = web3Config.getWeb3();\n    let networkId = web3Config.getNetworkId();\n    let address = web3Config.getAddress();\n    if (web3 === null) return 0;\n    let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\n    swapFactory.approveJNTRTokenForSwapFactory(\n      constantConfig.tokenDetails[this.state.selectedSendCurrency].address,\n      constantConfig[networkId].swapFactoryContract,\n      (hash) => {\n        this.setState({\n          approveLoading: true,\n          // txIdSent: hash,\n          // txLinkSend: data[networkId].explorer + \"/tx/\" + hash\n        });\n      },\n      () => {\n        // this.init()\n        this.setState({\n          approveLoading: false,\n          // showLedger: true,\n          // wrapBox: \"success\"\n        });\n        notificationConfig.success(\"Approve Success\");\n      }\n    );\n  }\n  async estimateGasAndFee() {\n    let web3 = web3Config.getWeb3();\n    let networkId = web3Config.getNetworkId();\n    let address = web3Config.getAddress();\n    if (web3 === null) return 0;\n    let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\n    let { sendFundAmount } = this.state;\n    if (sendFundAmount === \"\" || sendFundAmount === 0) {\n      notificationConfig.error(\"Enter value to swap\");\n      return;\n    }\n    let actualSendFundAmount = (\n      await this.getActualAmount(\n        sendFundAmount,\n        this.state.selectedSendCurrency\n      )\n    ).toString();\n    let value = 0,\n      swapAmount = 0,\n      allFees = await this.calculateSwapFees(actualSendFundAmount);\n\n    try {\n      value = web3Js.utils.toWei(actualSendFundAmount.toString());\n    } catch (e) {\n      value = (actualSendFundAmount * 10 ** 18).toFixed(0);\n    }\n    swapAmount = value;\n    if (\n      constantConfig.tokenDetails[this.state.selectedSendCurrency]\n        .approveRequire\n    ) {\n      value = 0;\n    }\n    await swapFactory.estimateSwapGasFee(\n      CONSTANT.currencyAddresses[this.state.selectedSendCurrency],\n      CONSTANT.currencyAddresses[this.state.selectedReceiveCurrency],\n      value,\n      swapAmount,\n      allFees,\n      this.state.licenseeAddress[networkId],\n      \"270000\",\n      (estGas) => {\n        this.setState({\n          estimatedGasFee: Number(estGas) + Number(web3Js.utils.fromWei((allFees.totalFees).toString())),\n        });\n      }\n    );\n  }\n  async recivedToken(e) {\n    let dollarAmount = Number(e.target.value);\n    this.setState(\n      {\n        sendFundAmount: dollarAmount,\n      },\n      async () => {\n        await this.setAmount(dollarAmount);\n      }\n    );\n  }\n  async setAmount(dollarAmount) {\n    this.setState(\n      {\n        actualSendFundAmount: await this.getActualAmount(\n          dollarAmount,\n          this.state.selectedSendCurrency\n        ),\n        approxReceiveFundAmount: await this.getActualAmount(\n          dollarAmount,\n          this.state.selectedReceiveCurrency\n        ),\n      },\n      async () => {\n        await this.estimateGasAndFee();\n      }\n    );\n  }\n  async getActualAmount(dollarAmount, currency) {\n    if (dollarAmount <= 0) return 0;\n    else return dollarAmount / this.state.currencyPrices[currency];\n  }\n\n  async calculateSwapFees(actualSendFundAmount) {\n    // console.log(\"----------------------------------------------amount-start----------------------------------\")\n    // console.log(actualSendFundAmount)\n    // console.log(\"----------------------------------------------amount-end----------------------------------\")\n    let networkId = web3Config.getNetworkId();\n    if (networkId === 56 || networkId === 97) {\n      const response = await fetch(\n        \"https://ethgasstation.info/json/ethgasAPI.json\"\n      );\n      const json = await response.json();\n      let gasPrice = (json.fast / 10).toString();\n      let prcsFees = Number(\n        web3Js.utils.fromWei(\n          ((330000 *\n            web3Js.utils.toWei(gasPrice, \"gwei\") *\n            (this.state.currencyPrices[\"ETH\"] / this.state.currencyPrices[\"BNB\"])).toFixed(0)).toString()\n        )\n      )\n      // console.log(\"----------------------------------Fee calculation Logs Start -----------------------------------------\")\n      // console.log(\"Company Fees : \", await this.getCompanyFees(this.state.instanceSwapFactoryBinance))\n      // console.log(\"License Address : \", this.state.licenseeAddress[networkId])\n      // console.log(\"Licensee Fees : \", await this.getReimbursementFees(this.state.instanceReimbursementBinance, this.state.licenseeAddress[networkId], constantConfig[CONSTANT.NETWORK_ID.BINANCE].swapFactoryContract))\n      // console.log(Number(actualSendFundAmount))\n      // console.log(\"Company Fees Calculated Amount * Company Fees / 10000: \", (Number(actualSendFundAmount) * await this.getCompanyFees(this.state.instanceSwapFactoryBinance)) / 10000)\n      // console.log(\"Licensee Fees Calculated Amount * Licensee Fees / 10000: \", (Number(actualSendFundAmount) * await this.getReimbursementFees(this.state.instanceReimbursementBinance, this.state.licenseeAddress[networkId], constantConfig[CONSTANT.NETWORK_ID.BINANCE].swapFactoryContract)) / 10000)\n      // console.log(\"----------------------------------Fee calculation Logs End -----------------------------------------\")\n      return {\n        totalFees: (\n          // web3Js.utils.toWei(\n          ((prcsFees\n            +\n            (\n              (Number(actualSendFundAmount) * await this.getCompanyFees(this.state.instanceSwapFactoryBinance)) / 10000\n            )\n            +\n            (\n              (Number(actualSendFundAmount) * await this.getReimbursementFees(this.state.instanceReimbursementBinance, this.state.licenseeAddress[networkId], constantConfig[CONSTANT.NETWORK_ID.BINANCE].swapFactoryContract)) / 10000\n            )) * 10 ** 18).toFixed()\n          // )\n        ),\n        processingFees: prcsFees\n      }\n    } else if (networkId === 1 || networkId === 42) {\n      let prcsFees = Number(\n        web3Js.utils.fromWei(\n          ((330000 *\n            web3Js.utils.toWei(\"5\", \"gwei\") *\n            (this.state.currencyPrices[\"BNB\"] / this.state.currencyPrices[\"ETH\"])).toFixed(0)).toString()\n        )\n      )\n      // console.log(\"----------------------------------Fee calculation Logs Start -----------------------------------------\")\n      // console.log(\"Company Fees : \", await this.getCompanyFees(this.state.instanceSwapFactoryEthereum))\n      // console.log(\"License Address : \", this.state.licenseeAddress[networkId])\n      // console.log(\"Licensee Fees : \", await this.getReimbursementFees(this.state.instanceReimbursementEthereum, this.state.licenseeAddress[networkId], constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].swapFactoryContract))\n      // console.log(Number(actualSendFundAmount))\n      // console.log(\"Company Fees Calculated Amount * Company Fees / 10000: \", (Number(actualSendFundAmount) * await this.getCompanyFees(this.state.instanceSwapFactoryEthereum)) / 10000)\n      // console.log(\"Licensee Fees Calculated Amount * Licensee Fees / 10000: \", (Number(actualSendFundAmount) * await this.getReimbursementFees(this.state.instanceReimbursementEthereum, this.state.licenseeAddress[networkId], constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].swapFactoryContract)) / 10000)\n\n      // console.log(\"----------------------------------Fee calculation Logs End -----------------------------------------\")\n      return {\n        totalFees: (\n          // web3Js.utils.toWei(\n          ((prcsFees\n            +\n            (\n              (Number(actualSendFundAmount) * await this.getCompanyFees(this.state.instanceSwapFactoryEthereum)) / 10000\n            )\n            +\n            (\n              (Number(actualSendFundAmount) * await this.getReimbursementFees(this.state.instanceReimbursementEthereum, this.state.licenseeAddress[networkId], constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].swapFactoryContract)) / 10000\n            )) * 10 ** 18).toFixed()\n          // )\n        ),\n        processingFees: prcsFees\n      }\n    }\n  }\n\n  async getCompanyFees(instance) {\n    let fees = await instance.methods.companyFee().call();\n    return fees;\n  }\n\n  async getReimbursementFees(instance, vaultAddress, projectContractAddress) {\n    let fees = await instance.methods.getLicenseeFee(vaultAddress, projectContractAddress).call();\n    return fees;\n  }\n\n  tableSearchHandler = (e) => {\n    let value = e.target.value;\n    if (value.length > 2) {\n      let res = this.state.tableData.filter((list, i) => {\n        return (\n          list.fullName.toLowerCase().substr(0, value.length) ===\n          value.toLowerCase() ||\n          list.shortName.toLowerCase().substr(0, value.length) ===\n          value.toLowerCase()\n        );\n      });\n      this.setState((prevState) => {\n        return {\n          ...prevState,\n          tableDataToDisplay: res,\n        };\n      });\n    } else {\n      this.setState((prevState) => {\n        return {\n          ...prevState,\n          tableDataToDisplay: prevState.tableData,\n        };\n      });\n    }\n  };\n\n  async dropDownSearch(e) {\n    let Uniobj = {};\n    let Panobj = {};\n    let value = e.target.value;\n    let datTosort = this.state.tableData;\n    let wbnbPrice = this.state.wbnbPrice;\n\n    //ETH\n    Uniobj.ETH = this.state.liveETHPrice;\n    //WBTC\n    await axios\n      .post(\n        `https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/afterSlippage`,\n        {\n          pairId: \"0xbb2b8038a1640196fbe3e38816f3e67cba72d940\",\n          id: \"1\",\n          price: value,\n        }\n      )\n      .then((res) => {\n        if (res.data.responseCode === 200) {\n          Uniobj.BTC = res.data.afterSlippage;\n        } else {\n        }\n      })\n      .catch((err) => {\n        console.log(\"error\", err);\n      });\n\n    //USDT\n    await axios\n      .post(\n        `https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/afterSlippage`,\n        {\n          pairId: \"0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852\",\n          id: \"1\",\n          price: value,\n        }\n      )\n      .then((res) => {\n        if (res.data.responseCode === 200) {\n          Uniobj.USDT = res.data.afterSlippage;\n        } else {\n        }\n      })\n      .catch((err) => {\n        console.log(\"error\", err);\n      });\n\n    //BNB\n    await axios\n      .post(\n        `https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/afterSlippage`,\n        {\n          pairId: \"0x0a5cc39d43a12540ddbab43af588033a224fb764\",\n          id: \"1\",\n          price: value,\n        }\n      )\n      .then((res) => {\n        if (res.data.responseCode === 200) {\n          Uniobj.BNB = res.data.afterSlippage;\n        } else {\n        }\n      })\n      .catch((err) => {\n        console.log(\"error\", err);\n      });\n\n    //ADA\n    await axios\n      .post(\n        `https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/afterSlippage`,\n        {\n          pairId: \"0xbe05aef285711e0ae4925d4fabd8485f054ec2e1\",\n          id: \"1\",\n          price: value,\n        }\n      )\n      .then((res) => {\n        if (res.data.responseCode === 200) {\n          Uniobj.ADA = res.data.afterSlippage;\n        } else {\n        }\n      })\n      .catch((err) => {\n        console.log(\"error\", err);\n      });\n\n    //DOT\n    await axios\n      .post(\n        `https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/afterSlippage`,\n        {\n          pairId: \"0x5bcfa1765c790ff25170a0dc4b0f783b329a00fe\",\n          id: \"1\",\n          price: value,\n        }\n      )\n      .then((res) => {\n        if (res.data.responseCode === 200) {\n          Uniobj.DOT = res.data.afterSlippage;\n        } else {\n        }\n      })\n      .catch((err) => {\n        console.log(\"error\", err);\n      });\n\n    //XRP : 0x4d931ed705622decbcb96d5e0736acabc65553e0\n    await axios\n      .post(\n        `https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/afterSlippage`,\n        {\n          pairId: \"0x4d931ed705622decbcb96d5e0736acabc65553e0\",\n          id: \"1\",\n          price: value,\n        }\n      )\n      .then((res) => {\n        if (res.data.responseCode === 200) {\n          Uniobj.XRP = res.data.afterSlippage;\n        } else {\n        }\n      })\n      .catch((err) => {\n        console.log(\"error\", err);\n      });\n\n    //UNI : 0xd3d2e2692501a5c9ca623199d38826e513033a17\n    await axios\n      .post(\n        `https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/afterSlippage`,\n        {\n          pairId: \"0xd3d2e2692501a5c9ca623199d38826e513033a17\",\n          id: \"1\",\n          price: value,\n        }\n      )\n      .then((res) => {\n        if (res.data.responseCode === 200) {\n          Uniobj.UNI = res.data.afterSlippage;\n        } else {\n        }\n      })\n      .catch((err) => {\n        console.log(\"error\", err);\n      });\n\n    let pancakeswapValue = {};\n    let obj = datTosort.map((data) => {\n      if (data.shortName === \"BNB\") {\n        pancakeswapValue = {\n          usdValue: wbnbPrice,\n          quote_volume: data.pancakeswapValue.quote_volume,\n          base_volume: data.pancakeswapValue.base_volume,\n        };\n      } else if (data.shortName === \"UNI\") {\n        pancakeswapValue = {\n          usdValue:\n            wbnbPrice *\n            ((parseFloat(data.pancakeswapValue.base_volume) +\n              parseFloat(value)) /\n              (parseFloat(data.pancakeswapValue.quote_volume) +\n                parseFloat(value))),\n\n          quote_volume: data.pancakeswapValue.quote_volume,\n          base_volume: data.pancakeswapValue.base_volume,\n        };\n      } else {\n        pancakeswapValue = {\n          usdValue:\n            wbnbPrice /\n            ((parseFloat(data.pancakeswapValue.base_volume) +\n              parseFloat(value)) /\n              (parseFloat(data.pancakeswapValue.quote_volume) +\n                parseFloat(value))),\n\n          quote_volume: data.pancakeswapValue.quote_volume,\n          base_volume: data.pancakeswapValue.base_volume,\n        };\n      }\n      return {\n        shortName: data.shortName,\n        fullName: data.fullName,\n        priceUsd: data.priceUsd,\n        Volume_24: data.Volume_24,\n        market_cap: data.market_cap,\n        symbol: data.symbol,\n        coingeckoValue: data.coingeckoValue,\n        coinMarketCapValue: data.coinMarketCapValue,\n        uniswapValue: Uniobj[data.shortName],\n        pancakeswapValue: pancakeswapValue,\n      };\n    });\n\n    console.log(\"obj\", obj);\n\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        tableDataToDisplay: obj,\n      };\n    });\n  }\n\n  async fetchPrice() {\n    let MarketCap = [];\n    let tableDataLocal = [];\n    let tableDataLocalcoingecko = [];\n    let Uniobj = {};\n    let Panobj = {};\n    var { currencyPrices } = this.state;\n    let wbnbPrice = 0;\n\n    let liveETHPrice = 0;\n\n    // await axios\n    //     .get(`https://api.pancakeswap.info/api/v2/tokens`)\n    //     .then((res) => {\n    //         wbnbPrice = parseFloat(\n    //             res.data.data['0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'].price\n    //         );\n\n    //         if (res.data.responseCode === 200) {\n    //         } else {\n    //         }\n    //     })\n    //     .catch((err) => {\n    //         console.log('error', err);\n    //     });\n\n    // await axios\n    //     .get(\n    //         `https://ehtereum-developer-api.mobiloitte.com/api/v1/user/getLiveETHPrice`\n    //     )\n    //     .then((res) => {\n    //         if (res.data.responseCode === 200) {\n    //             liveETHPrice = res.data.responseResult.data.bundle.ethPrice;\n    //         } else {\n    //         }\n    //     })\n    //     .catch((err) => {\n    //         console.log('error', err);\n    //     });\n    // //pancakeswap\n    // await axios\n    //     .get(`https://api.pancakeswap.info/api/v2/pairs`)\n    //     .then((res) => {\n    //         if (res.status === 200) {\n    //             Panobj = {\n    //                 BTC: {\n    //                     usdValue:\n    //                         res.data.data[\n    //                             '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\n    //                         ].price * wbnbPrice,\n    //                     quote_volume:\n    //                         res.data.data[\n    //                             '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\n    //                         ].quote_volume,\n    //                     base_volume:\n    //                         res.data.data[\n    //                             '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\n    //                         ].base_volume,\n    //                 },\n    //                 ETH: {\n    //                     usdValue:\n    //                         res.data.data[\n    //                             '0x2170Ed0880ac9A755fd29B2688956BD959F933F8_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\n    //                         ].price * wbnbPrice,\n    //                     quote_volume:\n    //                         res.data.data[\n    //                             '0x2170Ed0880ac9A755fd29B2688956BD959F933F8_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\n    //                         ].quote_volume,\n    //                     base_volume:\n    //                         res.data.data[\n    //                             '0x2170Ed0880ac9A755fd29B2688956BD959F933F8_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\n    //                         ].base_volume,\n    //                 },\n    //                 USDT: {\n    //                     usdValue:\n    //                         res.data.data[\n    //                             '0x55d398326f99059fF775485246999027B3197955_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\n    //                         ].price * wbnbPrice,\n    //                     quote_volume:\n    //                         res.data.data[\n    //                             '0x55d398326f99059fF775485246999027B3197955_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\n    //                         ].quote_volume,\n    //                     base_volume:\n    //                         res.data.data[\n    //                             '0x55d398326f99059fF775485246999027B3197955_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\n    //                         ].base_volume,\n    //                 },\n\n    //                 BNB: { usdValue: wbnbPrice },\n    //                 ADA: {\n    //                     usdValue:\n    //                         res.data.data[\n    //                             '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\n    //                         ].price * wbnbPrice,\n    //                     quote_volume:\n    //                         res.data.data[\n    //                             '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\n    //                         ].quote_volume,\n    //                     base_volume:\n    //                         res.data.data[\n    //                             '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\n    //                         ].base_volume,\n    //                 },\n\n    //                 DOT: {\n    //                     usdValue:\n    //                         res.data.data[\n    //                             '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\n    //                         ].price * wbnbPrice,\n    //                     quote_volume:\n    //                         res.data.data[\n    //                             '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\n    //                         ].quote_volume,\n    //                     base_volume:\n    //                         res.data.data[\n    //                             '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\n    //                         ].base_volume,\n    //                 },\n\n    //                 XRP: {\n    //                     usdValue:\n    //                         res.data.data[\n    //                             '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\n    //                         ].price * wbnbPrice,\n    //                     quote_volume:\n    //                         res.data.data[\n    //                             '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\n    //                         ].quote_volume,\n    //                     base_volume:\n    //                         res.data.data[\n    //                             '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\n    //                         ].base_volume,\n    //                 },\n\n    //                 UNI: {\n    //                     usdValue:\n    //                         wbnbPrice /\n    //                         res.data.data[\n    //                             '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c_0xBf5140A22578168FD562DCcF235E5D43A02ce9B1'\n    //                         ].price,\n    //                     quote_volume:\n    //                         res.data.data[\n    //                             '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c_0xBf5140A22578168FD562DCcF235E5D43A02ce9B1'\n    //                         ].quote_volume,\n    //                     base_volume:\n    //                         res.data.data[\n    //                             '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c_0xBf5140A22578168FD562DCcF235E5D43A02ce9B1'\n    //                         ].base_volume,\n    //                 },\n    //             };\n    //         } else {\n    //         }\n    //     })\n    //     .catch((err) => {\n    //         console.log('error', err);\n    //     });\n\n    // await axios\n    //     .get(`https://ehtereum-developer-api.mobiloitte.com/api/v1/user/getMarketCap`)\n    //     .then((res) => {\n    //         if (res.data.responseCode === 200) {\n    //             let obj = res.data.responseResult.data;\n    //             MarketCap = res.data.responseResult.data;\n\n    //             tableDataLocal = Object.entries(obj);\n    //         } else {\n    //         }\n    //     })\n    //     .catch((err) => {\n    //         console.log('error', err);\n    //     });\n\n    // //ETH\n\n    // Uniobj.ETH = liveETHPrice;\n\n    // //WBTC\n    // await axios\n    //     .post(`https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/beforeSlippage`, {\n    //         pairId: '0xbb2b8038a1640196fbe3e38816f3e67cba72d940',\n    //         id: '1',\n    //         // price: '1000',\n    //     })\n    //     .then((res) => {\n    //         if (res.data.responseCode === 200) {\n    //             Uniobj.BTC = res.data.beforeSlippage;\n    //         } else {\n    //         }\n    //     })\n    //     .catch((err) => {\n    //         console.log('error', err);\n    //     });\n\n    // //USDT\n    // await axios\n    //     .post(`https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/beforeSlippage`, {\n    //         pairId: '0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852',\n    //         id: '1',\n    //         // price: '1000',\n    //     })\n    //     .then((res) => {\n    //         if (res.data.responseCode === 200) {\n    //             Uniobj.USDT = res.data.beforeSlippage;\n    //         } else {\n    //         }\n    //     })\n    //     .catch((err) => {\n    //         console.log('error', err);\n    //     });\n\n    // //BNB\n    // await axios\n    //     .post(`https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/beforeSlippage`, {\n    //         pairId: '0x0a5cc39d43a12540ddbab43af588033a224fb764',\n    //         id: '1',\n    //         // price: '1000',\n    //     })\n    //     .then((res) => {\n    //         if (res.data.responseCode === 200) {\n    //             Uniobj.BNB = res.data.beforeSlippage;\n    //         } else {\n    //         }\n    //     })\n    //     .catch((err) => {\n    //         console.log('error', err);\n    //     });\n\n    // //ADA\n    // await axios\n    //     .post(`https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/beforeSlippage`, {\n    //         pairId: '0xbe05aef285711e0ae4925d4fabd8485f054ec2e1',\n    //         id: '1',\n    //         // price: '1000',\n    //     })\n    //     .then((res) => {\n    //         if (res.data.responseCode === 200) {\n    //             Uniobj.ADA = res.data.beforeSlippage;\n    //         } else {\n    //         }\n    //     })\n    //     .catch((err) => {\n    //         console.log('error', err);\n    //     });\n\n    // //DOT\n    // await axios\n    //     .post(`https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/beforeSlippage`, {\n    //         pairId: '0x5bcfa1765c790ff25170a0dc4b0f783b329a00fe',\n    //         id: '1',\n    //         // price: '1000',\n    //     })\n    //     .then((res) => {\n    //         if (res.data.responseCode === 200) {\n    //             Uniobj.DOT = res.data.beforeSlippage;\n    //         } else {\n    //         }\n    //     })\n    //     .catch((err) => {\n    //         console.log('error', err);\n    //     });\n\n    // //XRP : 0x4d931ed705622decbcb96d5e0736acabc65553e0\n    // await axios\n    //     .post(`https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/beforeSlippage`, {\n    //         pairId: '0x4d931ed705622decbcb96d5e0736acabc65553e0',\n    //         id: '1',\n    //         // price: '1000',\n    //     })\n    //     .then((res) => {\n    //         if (res.data.responseCode === 200) {\n    //             Uniobj.XRP = res.data.beforeSlippage;\n    //         } else {\n    //         }\n    //     })\n    //     .catch((err) => {\n    //         console.log('error', err);\n    //     });\n\n    // //UNI : 0xd3d2e2692501a5c9ca623199d38826e513033a17\n    // await axios\n    //     .post(`https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/beforeSlippage`, {\n    //         pairId: '0xd3d2e2692501a5c9ca623199d38826e513033a17',\n    //         id: '1',\n    //         // price: '1000',\n    //     })\n    //     .then((res) => {\n    //         if (res.data.responseCode === 200) {\n    //             Uniobj.UNI = res.data.beforeSlippage;\n    //         } else {\n    //         }\n    //     })\n    //     .catch((err) => {\n    //         console.log('error', err);\n    //     });\n\n    // await axios\n    //     .get(\n    //         `https://api.coingecko.com/api/v3/simple/price?ids=bitcoin%2Cethereum%2Ctether%2Cbinancecoin%2Ccardano%2Cpolkadot%2Cuniswap%2Cripple&vs_currencies=USD&include_market_cap=true&include_24hr_vol=true&include_24hr_change=true`\n    //     )\n    //     .then((res) => {\n    //         tableDataLocalcoingecko = res.data;\n    //     })\n    //     .catch((err) => {\n    //         console.log('error', err);\n    //     });\n\n    // currencyPrices['ETH'] =\n    //     MarketCap.length !== 0\n    //         ? parseFloat(MarketCap.ETH.quote.USD.price) >\n    //             parseFloat(tableDataLocalcoingecko['ethereum']['usd'])\n    //             ? parseFloat(MarketCap.ETH.quote.USD.price)\n    //             : tableDataLocalcoingecko['ethereum']['usd']\n    //         : tableDataLocalcoingecko['ethereum']['usd'];\n\n    // currencyPrices['BNB'] =\n    //     MarketCap.length !== 0\n    //         ? parseFloat(MarketCap.BNB.quote.USD.price) >\n    //             parseFloat(tableDataLocalcoingecko['binancecoin']['usd'])\n    //             ? parseFloat(MarketCap.BNB.quote.USD.price)\n    //             : tableDataLocalcoingecko['binancecoin']['usd']\n    //         : tableDataLocalcoingecko['binancecoin']['usd'];\n\n    // currencyPrices['JNTR/e'] = 0.062166;\n    // currencyPrices['JNTR/b'] = 0.054237;\n    // currencyPrices['JNTR'] = 0.532;\n\n    // let obj = tableDataLocal.map((data) => {\n    //     let tableDataLocalcoingeckoSingle =\n    //         tableDataLocalcoingecko[data[1].name.toLocaleLowerCase()];\n\n    //     if (typeof tableDataLocalcoingeckoSingle === 'undefined') {\n    //         if (data[1].name.toLocaleLowerCase() === 'binance coin') {\n    //             tableDataLocalcoingeckoSingle = tableDataLocalcoingecko.binancecoin;\n    //         }\n    //     }\n\n    //     if (typeof tableDataLocalcoingeckoSingle !== 'undefined') {\n    //         return {\n    //             shortName: data[0],\n    //             fullName: data[1].name,\n    //             priceUsd:\n    //                 tableDataLocalcoingeckoSingle.usd > data[1].quote.USD.price\n    //                     ? tableDataLocalcoingeckoSingle.usd\n    //                     : data[1].quote.USD.price,\n    //             Volume_24:\n    //                 tableDataLocalcoingeckoSingle.usd_24h_vol >\n    //                     data[1].quote.USD.volume_24h\n    //                     ? tableDataLocalcoingeckoSingle.usd_24h_vol\n    //                     : data[1].quote.USD.volume_24h,\n    //             market_cap:\n    //                 tableDataLocalcoingeckoSingle.usd_market_cap >\n    //                     data[1].quote.USD.market_cap\n    //                     ? tableDataLocalcoingeckoSingle.usd_market_cap\n    //                     : data[1].quote.USD.market_cap,\n    //             symbol: data[1].symbol,\n    //             coingeckoValue: tableDataLocalcoingeckoSingle.usd,\n    //             coinMarketCapValue: data[1].quote.USD.price,\n    //             uniswapValue: Uniobj[data[0]],\n    //             pancakeswapValue: Panobj[data[0]],\n    //         };\n    //     } else {\n    //         return {\n    //             shortName: data[0],\n    //             fullName: data[1].name,\n    //             priceUsd: data[1].quote.USD.price,\n    //             Volume_24: data[1].quote.USD.volume_24h,\n    //             market_cap: data[1].quote.USD.market_cap,\n    //             symbol: data[1].symbol,\n    //             coingeckoValue: data[1].quote.USD.price,\n    //             coinMarketCapValue: data[1].quote.USD.price,\n    //             uniswapValue: Uniobj[data[0]],\n    //             pancakeswapValue: Panobj[data[0]],\n    //         };\n    //     }\n    // });\n\n    // obj.sort(function (a, b) {\n    //     return b.market_cap - a.market_cap;\n    // });\n\n    // console.log('obj', obj);\n\n    // this.setState((prevState) => {\n    //     return {\n    //         ...prevState,\n    //         currencyPrices: currencyPrices,\n    //         tableData: obj,\n    //         liveETHPrice: liveETHPrice,\n    //         wbnbPrice: wbnbPrice,\n    //         tableDataToDisplay: obj,\n    //     };\n    // });\n\n    await axios\n      .get(\n        `https://api.coingecko.com/api/v3/simple/price?ids=bitcoin%2Cethereum%2Ctether%2Cbinancecoin%2Ccardano%2Cpolkadot%2Cuniswap%2Cripple&vs_currencies=USD&include_market_cap=true&include_24hr_vol=true&include_24hr_change=true`\n      )\n      .then((res) => {\n        tableDataLocalcoingecko = res.data;\n      })\n      .catch((err) => {\n        console.log(\"error\", err);\n      });\n\n    currencyPrices[\"ETH\"] = tableDataLocalcoingecko[\"ethereum\"][\"usd\"];\n\n    currencyPrices[\"BNB\"] = tableDataLocalcoingecko[\"binancecoin\"][\"usd\"];\n\n    currencyPrices[\"JNTR/e\"] = 0.062166;\n    currencyPrices[\"JNTR/b\"] = 0.054237;\n    currencyPrices[\"JNTR\"] = 0.532;\n\n    this.setState(\n      {\n        currencyPrices: currencyPrices,\n      },\n      () => {\n        this.forceUpdate();\n      }\n    );\n  }\n  changeCurrency(check) {\n    // if(check && this.state.web3 === null){\n    let selectedSendCurrency = this.state.selectedSendCurrency;\n    let selectedReceiveCurrency = this.state.selectedReceiveCurrency;\n    this.setState(\n      {\n        selectedSendCurrency: selectedReceiveCurrency,\n        selectedReceiveCurrency: selectedSendCurrency,\n      },\n      async () => {\n        if (this.state.sendFundAmount !== \"\")\n          await this.setAmount(this.state.sendFundAmount);\n        this.forceUpdate();\n      }\n    );\n    // } else if(this.state.web3 !== null && check) {\n    //     notificationConfig.warning(\"Please change metamask network!\")\n    // }\n  }\n  setSendCurrency(currency) {\n    this.setState({ selectedSendCurrency: currency }, () => {\n      this.closePopup(\"sendCurPop\");\n    });\n  }\n  setReceiveCurrency(currency) {\n    this.setState({ selectedReceiveCurrency: currency }, () => {\n      this.closePopup(\"receiveCurPop\");\n    });\n  }\n  openPopup(id) {\n    $(\"#\" + id).fadeIn();\n  }\n  closePopup(id) {\n    $(\"#\" + id).fadeOut();\n  }\n  changeWrapBox(which) {\n    this.setState({\n      wrapBox: which,\n      txIdSent: null,\n      txSentStatus: \"pending\",\n      txSentTime: null,\n      tokenReceive: \"0\",\n      txReceiveTime: null,\n      txIdReceive: null,\n      txLinkSend: \"\",\n      txLinkReturn: \"\",\n      receiveFundAmount: \"\",\n      sendFundAmount: \"\",\n      actualSendFundAmount: 0,\n      approxReceiveFundAmount: 0,\n      showLedger: false,\n    });\n  }\n  async listenTransferEvent() {\n    const { instanceSwapFactoryEthereum, instanceSwapFactoryBinance } =\n      this.state;\n    if (instanceSwapFactoryEthereum !== null) {\n      instanceSwapFactoryEthereum.events\n        .ClaimApprove(\n          {\n            fromBlock: \"latest\",\n          },\n          function (error, event) {\n            console.log(event);\n          }\n        )\n        .on(\"connected\", function (subscriptionId) {\n          console.log(subscriptionId);\n        })\n        .on(\n          \"data\",\n          function (event) {\n            console.log(event); // same results as the optional callback above\n            if (\n              event.returnValues.user.toLocaleLowerCase() ===\n              web3Config.getAddress().toLocaleLowerCase()\n            ) {\n              let txLinkReturn =\n                constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].explorer +\n                \"/tx/\" +\n                event.transactionHash;\n              let returnAmount = web3Js.utils.fromWei(\n                event.returnValues.amountA.toLocaleLowerCase()\n              );\n              this.updateLedgerAfterResponse(\n                event.transactionHash,\n                txLinkReturn,\n                returnAmount\n              );\n            }\n          }.bind(this)\n        )\n        .on(\"changed\", function (event) {\n          console.log(event);\n          // remove event from local database\n        })\n        .on(\"error\", function (error, receipt) {\n          // If the transaction was rejected by the network with a receipt, the second parameter will be the receipt.\n          console.log(error, receipt);\n        });\n    }\n    if (instanceSwapFactoryBinance !== null) {\n      let { web3Binance } = this.state;\n      let initialBlock = await web3Binance.eth.getBlockNumber();\n      setInterval(async () => {\n        const currentBlock = await web3Binance.eth.getBlockNumber();\n        instanceSwapFactoryBinance\n          .getPastEvents(\"allEvents\", {\n            fromBlock: initialBlock,\n            toBlock: currentBlock, // You can also specify 'latest'\n          })\n          .then(\n            async function (result) {\n              for (let i = 0; i < result.length; i++) {\n                console.log(result[i].event);\n                if (result[i].event === \"ClaimApprove\") {\n                  console.log(result[i]);\n                  if (\n                    result[i].returnValues.user.toLocaleLowerCase() ===\n                    web3Config.getAddress().toLocaleLowerCase()\n                  ) {\n                    let txLinkReturn =\n                      constantConfig[CONSTANT.NETWORK_ID.BINANCE].explorer +\n                      \"/tx/\" +\n                      result[i].transactionHash;\n                    let returnAmount = web3Js.utils\n                      .fromWei(result[i].returnValues.amountA)\n                      .toLocaleLowerCase();\n                    this.updateLedgerAfterResponse(\n                      result[i].transactionHash,\n                      txLinkReturn,\n                      returnAmount\n                    );\n                  }\n                }\n              }\n            }.bind(this)\n          )\n          .catch((err) => console.error(err));\n        initialBlock = currentBlock;\n      }, 10000);\n    }\n  }\n  updateLedgerAfterResponse(hash, txLinkReturn, returnAmount) {\n    this.setState(\n      {\n        isSendingOrder: false,\n        txSentStatus: \"Success\",\n        txSentTime: new Date().toUTCString(),\n        tokenReceive: \"2\",\n        txReceiveTime: new Date().toUTCString(),\n        txIdReceive: hash,\n        whichButton: \"4\",\n        txLinkReturn: txLinkReturn,\n        receiveFundAmount: returnAmount,\n      },\n      async () => {\n        //   await this.enableInputs();\n      }\n    );\n  }\n  scrollToLedger() {\n    $(\"html\").animate({ scrollTop: 650 });\n  }\n\n  async fetchedUserTransaction(address) {\n    // var userTxs = StableCoinStore.getFetchedUserTxs();\n    this.setState({ loadingHistory: true })\n    let url = `https://api.smartswap.exchange/ledger/` + address;\n\n    let json;\n    await axios\n      .get(url)\n      .then((res) => {\n        console.log(res)\n        json = res.data;\n      })\n      .catch((err) => {\n        console.log('error', err);\n      });\n    // const response = await fetch(url);\n    // const json = await response.json();\n\n    var userTxs = json.data;\n    var userTxsUI = [];\n    var userPendingTxsUI = [];\n\n    if (userTxs.length > 0) {\n      userTxs.map(async (element, key) => {\n        let sentTxTime = \"\";\n        let recivedTxTime = \"\";\n\n        // sent transaction time calculation\n        // if (element.sentChainId === 1) {\n        //   sentTxTime = new Date(\n        //     Number(\n        //       (\n        //         await this.state.web3Ethereum.eth.getBlock((await this.state.web3Ethereum.eth.getTransaction(element.sentTx)).blockNumber)\n        //       ).timestamp.toString() + \"000\"\n        //     )\n        //   );\n        // } else if (element.sentChainId === 56) {\n        //   sentTxTime = new Date(\n        //     Number(\n        //       (\n        //         await this.state.web3Binance.eth.getBlock((await this.state.web3Binance.eth.getTransaction(element.sentTx)).blockNumber)\n        //       ).timestamp.toString() + \"000\"\n        //     )\n        //   );\n        // }\n        // // received transaction time calculation\n        // if (element.oracleTx !== undefined && element.oracleTx !== null) {\n        //   if (element.recivedChainId === 1) {\n        //     recivedTxTime = new Date(\n        //       Number(\n        //         (\n        //           await this.state.web3Ethereum.eth.getBlock((await this.state.web3Ethereum.eth.getTransaction(element.oracleTx)).blockNumber)\n        //         ).timestamp.toString() + \"000\"\n        //       )\n        //     );\n        //   } else if (element.recivedChainId === 56) {\n        //     recivedTxTime = new Date(\n        //       Number(\n        //         (\n        //           await this.state.web3Binance.eth.getBlock((await this.state.web3Binance.eth.getTransaction(element.oracleTx)).blockNumber)\n        //         ).timestamp.toString() + \"000\"\n        //       )\n        //     );\n        //   }\n        // }\n        element[\"sentCurrency\"] =\n          constantConfig.addressByToken[element.tokenA].symbol;\n        element[\"recivedCurrency\"] =\n          constantConfig.addressByToken[element.tokenB].symbol;\n\n        element[\"sentTxLink\"] =\n          constantConfig[element.sentChainId].explorer +\n          \"/tx/\" +\n          element.sentTx;\n\n        if (element.oracleTx !== undefined && element.oracleTx !== null) {\n          element[\"recivedTxLink\"] =\n            constantConfig[element.recivedChainId].explorer +\n            \"/tx/\" +\n            element.oracleTx;\n        }\n\n        userTxsUI.push(\n          // <LedgerHistory />\n          <LedgerHistory\n            sentAmount={element.sentAmount}\n            sentCurrency={element.sentCurrency}\n            sentAPrice={element.sentAPrice}\n            sentTx={element.sentTx}\n            sentTxLink={element.sentTxLink}\n            filledBprice={element.filledBprice}\n            recivedAmount={element.recivedAmount}\n            recivedCurrency={element.recivedCurrency}\n            oracleTx={element.oracleTx}\n            recivedTxLink={element.recivedTxLink}\n            sentTxTime={sentTxTime.toString()}\n            recivedTxTime={recivedTxTime.toString()}\n            filledAprice={element.filledAprice}\n          />\n        );\n        if (element.oracleTx === undefined || element.oracleTx === null) {\n          userPendingTxsUI.push(\n            // <LedgerHistory />\n            <LedgerHistory\n              sentAmount={element.sentAmount}\n              sentCurrency={element.sentCurrency}\n              sentAPrice={element.sentAPrice}\n              sentTx={element.sentTx}\n              sentTxLink={element.sentTxLink}\n              filledBprice={element.filledBprice}\n              recivedAmount={element.recivedAmount}\n              recivedCurrency={element.recivedCurrency}\n              oracleTx={element.oracleTx}\n              recivedTxLink={element.recivedTxLink}\n              sentTxTime={sentTxTime.toString()}\n              recivedTxTime={recivedTxTime.toString()}\n              filledAprice={element.filledAprice}\n            />\n          );\n        }\n      });\n    } else {\n      userTxsUI.push(\n        <div style={{ textAlign: \"center\" }}>\n          <h2>No transaction</h2>\n        </div>\n      );\n      userPendingTxsUI.push(\n        <div style={{ textAlign: \"center\" }}>\n          <h2>No transaction</h2>\n        </div>\n      );\n    }\n    this.setState(\n      {\n        allTxHistoryUI: userTxsUI,\n        allPendingTxHistoryUI: userPendingTxsUI,\n      },\n      async () => {\n        await this.forceUpdate();\n        await this.stopLoadingHist();\n      }\n    );\n  }\n\n  async stopLoadingHist() {\n    setTimeout(() => { this.setState({ loadingHistory: false }) }, 3000)\n  }\n\n  showHistory = (which, show) => {\n    this.setState(\n      {\n        showTxHistory: show,\n        showAllTx: which === \"all\" ? true : false,\n      },\n      () => {\n        if (show) {\n          $(\"html, body\").animate({ scrollTop: 620 }, \"slow\");\n        }\n      }\n    );\n  };\n\n  render() {\n    return (\n      <>\n        {this.state.isloading ? (\n          <p>Loading</p>\n        ) : (\n          <main id=\"main\" className=\"smartSwap\">\n            <div className=\"fullscreen-bg\">\n              <div className=\"fsbg_sad01\"></div>\n              <div className=\"fsbg_container\">\n                <video loop autoPlay muted className=\"fullscreen-bg__video\">\n                  <source src=\"video/smartswap.webm\" type=\"video/webm\" />\n                  <source src=\"video/smartswap.mp4\" type=\"video/mp4\" />\n                  <source src=\"video/smartswap.ogv\" type=\"video/ogg\" />\n                </video>\n              </div>\n            </div>\n            <div className=\"main\">\n              {/* <!--======================= RIGHT SIDE MENU =====================--> */}\n              <RightSideMenu\n                web3={this.state.web3}\n                openPopup={this.openPopup}\n                web3Config={web3Config}\n                cloneData={this.state.cloneData}\n              ></RightSideMenu>\n              {/* <!--======================= RIGHT SIDE MENU END  =====================-->\n                    <!--======================= HEADER START =====================--> */}\n              <Header\n                web3={this.state.web3}\n                web3Config={web3Config}\n                cloneData={this.state.cloneData}\n                isSubdomain={this.state.isSubdomain}\n                clearPreview={this.clearPreview}\n              ></Header>\n              {/* <!--======================= HEADER END =====================--> */}\n              <div className=\"backgroundBlock\" onClick={this.handleClick} >\n                <div\n                  className={\n                    this.state.cloneData.bgimage\n                      ? \"mainBlock required-bg\"\n                      : \"mainBlock\"\n                  }\n                  style={\n                    this.state.cloneData.bgimage\n                      ? this.state.cloneData.fontStyle &&\n                        this.state.cloneData.fontStyle !== \"Default\"\n                        ? {\n                          fontFamily: this.state.cloneData.fontStyle,\n                          backgroundColor: `rgba(0, 0, 0, 0.${this.state.cloneData.backgroundOverLay})`,\n                        }\n                        : {\n                          backgroundColor: `rgba(0, 0, 0, 0.${this.state.cloneData.backgroundOverLay})`,\n                        }\n                      : null\n                  }\n                >\n                  {/* <div className=\"error-Msg\">\n                            <label>\n                                For BSC testnet use this RPC\n                                URL:https://data-seed-prebsc-2-s3.binance.org:8545\n              </label>\n                        </div> */}\n                  {/* <br />\n                        <br /> */}\n                  {/* <!--======================= SWAP BLOCK START =====================--> */}\n                  <div className=\"swap-Block\">\n                    <div className=\"container-Grid\">\n                      <div\n                        className=\"smeTitle01 wow fadeInUp\" data-wow-delay=\"0.1s\"\n                      // onClick={() => {\n                      //     this.openPopup('About');\n                      // }}\n                      >\n                        <span>One click</span> slippage-free cross-chain swap\n                      </div>\n                      <div className=\"smvTitle02 wow fadeInUp\" data-wow-delay=\"0.2s\">\n                        Unlimited Liquidity CeFi to Defi Decentralized Bridge\n                      </div>\n                      {this.state.wrapBox === \"swap\" ? (\n                        <div className=\"wrap-Box\">\n                          <div\n                            className=\"swap-Wrap wow fadeInRight\"\n                            data-wow-delay=\"0.3s\"\n                          >\n                            <div className=\"swap-Box\">\n                              <div className=\"swap-Input\">\n                                <div className=\"swap-Title\">\n                                  <div className=\"swap-Amt\">\n                                    <span className=\"currecy\">$</span>\n                                    <input\n                                      type=\"text\"\n                                      id=\"input04\"\n                                      placeholder=\"Send\"\n                                      value={this.state.sendFundAmount}\n                                      onKeyDown={(e) => Validation.floatOnly(e)}\n                                      onChange={this.recivedToken.bind(this)}\n                                      autoComplete=\"off\"\n                                    />\n                                  </div>\n                                </div>\n                                <div className=\"swap-Title\">\n                                  <div className=\"swap-Amt\">\n                                    <span className=\"currecy\">$</span>\n                                    <input\n                                      type=\"text\"\n                                      placeholder=\"Receive\"\n                                      readOnly=\"\"\n                                      disabled\n                                      style={{ background: \"#3d3d3d\" }}\n                                      value={this.state.sendFundAmount}\n                                    />\n                                  </div>\n                                </div>\n                              </div>\n                              <div className=\"coin-Box\">\n                                <div className=\"coin-Box01\">\n                                  <div className=\"swap-Coin ani-1\">\n                                    {/* <div className=\"overlay-Bg\">\n                                                                Change Assets{' '}\n                                                                <i\n                                                                    className=\"fa fa-caret-down\"\n                                                                    aria-hidden=\"true\"\n                                                                ></i>\n                                                            </div> */}\n                                    <img\n                                      src={\n                                        \"images/currencies/\" +\n                                        data.tokenDetails[\n                                          this.state.selectedSendCurrency\n                                        ].iconName +\n                                        \".png\"\n                                      }\n                                      alt=\"\"\n                                      className=\"ani-1\"\n                                    />\n                                  </div>\n                                  <div className=\"total-Amt\">\n                                    {this.state.selectedSendCurrency}\n                                  </div>\n                                  {this.state.approxReceiveFundAmount > 0 ? (\n                                    <p className=\"estAmount\">\n                                      ≈\n                                      {this.state.actualSendFundAmount.toFixed(\n                                        5\n                                      )}\n                                    </p>\n                                  ) : null}\n                                  <div\n                                    className=\"total-Amt\"\n                                    style={{ paddingTop: 0 }}\n                                  >\n                                    <p>\n                                      [1 {this.state.selectedSendCurrency} : ${\" \"}\n                                      {parseFloat(\n                                        this.state.currencyPrices[\n                                        this.state.selectedSendCurrency\n                                        ]\n                                      ).toFixed(2)}\n                                      ]\n                                    </p>\n                                  </div>\n                                  <a\n                                    href=\"javascript:void(0);\"\n                                    className=\"faux-Link\"\n                                    id=\"change-Market\"\n                                    onClick={() => {\n                                      this.openPopup(\"sendCurPop\");\n                                    }}\n                                  ></a>\n                                </div>\n                                <div className=\"swap-Icon\">\n                                  <a\n                                    href=\"javascript:void(0);\"\n                                    className=\"faux-Link ani-1\"\n                                    onClick={() => {\n                                      this.changeCurrency(true);\n                                    }}\n                                    style={{ paddingTop: 137 }}\n                                  >\n                                    <svg\n                                      viewBox=\"0 0 200 200\"\n                                      style={{ transform: \"scale(1.5)\" }}\n                                    >\n                                      <polygon\n                                        fill=\"var(--button-bg-color)\"\n                                        points=\"152.9,58.3 152.9,45.1 139.7,45.1 139.7,58.3 60.6,58.3 60.6,71.5 60.6,84.7 139.7,84.7 139.7,97.9 \n\t152.9,97.9 152.9,84.7 152.9,84.7 166.1,84.7 166.1,71.5 166.1,58.3 \"\n                                      />\n                                      <polygon\n                                        fill=\"var(--button-bg-color)\"\n                                        points=\"48.4,141 48.4,154.2 61.6,154.2 61.6,141 140.8,141 140.8,127.8 140.8,114.6 61.6,114.6 61.6,101.4 \n\t48.4,101.4 48.4,114.6 48.4,114.6 35.2,114.6 35.2,127.8 35.2,141 \"\n                                      />\n                                    </svg>\n                                  </a>\n                                </div>\n                                <div className=\"coin-Box01\">\n                                  <div className=\"swap-Coin ani-1\">\n                                    {/* <div className=\"overlay-Bg\">\n                                                                Change Assets{' '}\n                                                                <i\n                                                                    className=\"fa fa-caret-down\"\n                                                                    aria-hidden=\"true\"\n                                                                ></i>\n                                                            </div> */}\n                                    <img\n                                      src={\n                                        \"images/currencies/\" +\n                                        data.tokenDetails[\n                                          this.state.selectedReceiveCurrency\n                                        ].iconName +\n                                        \".png\"\n                                      }\n                                      alt=\"\"\n                                      className=\"ani-1\"\n                                    />\n                                  </div>\n                                  <div className=\"total-Amt\">\n                                    {this.state.selectedReceiveCurrency}\n                                  </div>\n                                  {this.state.approxReceiveFundAmount > 0 ? (\n                                    <p className=\"estAmount\">\n                                      ≈\n                                      {this.state.approxReceiveFundAmount.toFixed(\n                                        5\n                                      )}\n                                    </p>\n                                  ) : null}\n                                  <div\n                                    className=\"total-Amt\"\n                                    style={{ paddingTop: 0 }}\n                                  >\n                                    <p>\n                                      [1 {this.state.selectedReceiveCurrency} :\n                                      ${\" \"}\n                                      {parseFloat(\n                                        this.state.currencyPrices[\n                                        this.state.selectedReceiveCurrency\n                                        ]\n                                      ).toFixed(2)}\n                                      ]\n                                    </p>\n                                  </div>\n                                  {/* <!-- <div className=\"total-Amt\"> <span className=\"slippageText\">~ ~</span> 3.202 EZO </div> --> */}\n                                  <a\n                                    href=\"javascript:void(0);\"\n                                    className=\"faux-Link\"\n                                    onClick={() => {\n                                      this.openPopup(\"receiveCurPop\");\n                                    }}\n                                  ></a>\n                                </div>\n                              </div>\n                              {/* <!-- <div className=\"swap-Btn\"><a href=\"javascript:void(0);\" id=\"lrlock-btn\" className=\"btn btn-large ani-1\">Swap</a></div> -->\n                                            <!-- <div className=\"swap-Btn\"><a href=\"javascript:void(0);\" className=\"btn btn-large greyScale ani-1\"><span><i></i></span>CONNECT YOUR WALLET</a></div> -->\n                                            <!-- <div className=\"swap-Btn\"><a href=\"javascript:void(0);\" className=\"btn btn-large greyScale waiting ani-1\"><span className=\"dots\"></span>THE order is waiting for A match</a></div> --> */}\n                              {/* <div className=\"wrap-Btn\"> */}\n                              {this.state.web3 === null ||\n                                constantConfig.tokenDetails[\n                                  this.state.selectedSendCurrency\n                                ].networkId !== web3Config.getNetworkId() ? (\n                                <div className=\"swap-Btn\">\n                                  <a\n                                    href=\"javascript:void(0);\"\n                                    className=\"btn btn-large greyScale ani-1 connect\"\n                                    onClick={this.connectWallet.bind(this)}\n                                  >\n                                    <span>\n                                      <i\n                                        className={\n                                          data.tokenDetails[\n                                            this.state.selectedSendCurrency\n                                          ].networkId ===\n                                            CONSTANT.NETWORK_ID.ETHEREUM\n                                            ? \"ETH\"\n                                            : \"BNB\"\n                                        }\n                                      ></i>\n                                    </span>\n                                    CONNECT YOUR WALLET\n                                  </a>\n                                </div>\n                              ) : constantConfig.tokenDetails[\n                                this.state.selectedSendCurrency\n                              ].approveRequire &&\n                                this.state.tokenBalances[\n                                this.state.selectedSendCurrency + \"_APPROVED\"\n                                ] <= this.state.actualSendFundAmount ? (\n                                this.state.approveLoading ? (\n                                  <div className=\"swap-Btn\">\n                                    <a\n                                      href=\"javascript:void(0);\"\n                                      id=\"lrlock-btn\"\n                                      className=\"btn btn-large ani-1 connect swap\"\n                                    >\n                                      <LoopCircleLoading\n                                        height={\"20px\"}\n                                        width={\"20px\"}\n                                        color={\"#ffffff\"}\n                                      />\n                                    </a>\n                                  </div>\n                                ) : (\n                                  <div className=\"swap-Btn\">\n                                    <a\n                                      href=\"javascript:void(0);\"\n                                      id=\"lrlock-btn\"\n                                      className=\"btn btn-large ani-1 connect swap\"\n                                      onClick={() => {\n                                        this.approve();\n                                      }}\n                                    >\n                                      Approve\n                                    </a>\n                                  </div>\n                                )\n                              ) : this.state.swapLoading ? (\n                                <div className=\"swap-Btn\">\n                                  <a\n                                    href=\"javascript:void(0);\"\n                                    id=\"lrlock-btn\"\n                                    className=\"btn btn-large ani-1 connect swap\"\n                                  >\n                                    <LoopCircleLoading\n                                      height={\"20px\"}\n                                      width={\"20px\"}\n                                      color={\"#ffffff\"}\n                                    />\n                                  </a>\n                                </div>\n                              ) : (\n                                <div className=\"swap-Btn\">\n                                  <a\n                                    href=\"javascript:void(0);\"\n                                    id=\"lrlock-btn\"\n                                    className=\"btn btn-large ani-1 connect swap swapBtn\"\n                                    onClick={() => {\n                                      this.swap();\n                                    }}\n                                  >\n                                    Swap\n                                  </a>\n                                </div>\n                              )}\n                              {/* { this.state.txLink !== \"\" ?\n                                                    <div>\n                                                        <br/>\n                                                        <a href={this.state.txLink} target=\"_blank\" style={{color:\"white\"}}>Check transaction here</a>\n                                                    </div> \n                                                    : \n                                                    null\n                                                } */}\n                              {/* <div className=\"qr-Id\">\n                                                    <div className=\"qr-Wrap\">\n                                                        <a href=\"javascript:void(0);\" className=\"qr-Scan\"><img\n                                                                src=\"images/qr-scan.png\"\n                                                                alt=\"\"/></a><span>aDKsd1in12063abt12!NJn192oF</span>\n                                                        <!-- <a href=\"javascript:void(0);\" className=\"qr-Scan grey-Img\"><img\n                                                                src=\"images/qr-scan.png\" alt=\"\"/></a><input type=\"text\"\n                                                            placeholder=\"Type here your BTC wallet\"> -->\n                                                    </div>\n                                                </div> */}\n                              {/* <div className=\"swap-Btn\"><a href=\"javascript:void(0);\"\n                                                        className=\"btn btn-large copy-Btn ani-1\">SWAP</a></div> */}\n                              {/* <!-- <div className=\"swap-Btn\"><a href=\"javascript:void(0);\" className=\"btn btn-large copy-Btn ani-1\">COPY</a></div> -->\n                                                <!-- <div className=\"swap-Btn\"><a href=\"javascript:void(0);\" className=\"btn btn-large copy-Btn blue-Bg ani-1\">COPY</a></div> --> */}\n                              {/* <div className=\"qr-boxPopup\" tabindex=\"-1\">\n                                                    <div className=\"img-Box\"><img src=\"images/qr-code.jpg\" alt=\"\"/></div>\n                                                    <div className=\"copy-Text\"><a href=\"javascript:void(0);\"><i\n                                                                className=\"fas fa-copy\"></i><span>Copy</span></a></div>\n                                                </div> */}\n                              {/* </div> */}\n                              {/* <!-- <p className=\"red-Color\">Please keep your browser open during the swap <i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></p> -->\n                                            <!-- <div className=\"small-Text\">Share this transaction ID with a specific person you want to swap with</div> --> */}\n                              {/* <div className=\"Text01\">Send <span className=\"orange-Color\">0.12653</span> BTC to this vault\n                                                address <i className=\"help-circle\"><i className=\"fas fa-question-circle protip\"\n                                                        data-pt-position=\"top\" data-pt-title=\"Help Text Here\"\n                                                        aria-hidden=\"true\"></i></i></div> */}\n                              <div className=\"estimate-Popup\">\n                                <div className=\"popup-Box\">\n                                  <div className=\"text-Wrap\">\n                                    <div className=\"text-Title\">\n                                      Minimum amount to swap with :\n                                    </div>\n                                    <div className=\"amt-Text\">\n                                      <input type=\"text\" value=\"$100\" />\n                                    </div>\n                                  </div>\n                                  <div className=\"text-Wrap\">\n                                    <div className=\"text-Title\">\n                                      Max users to swap with :\n                                    </div>\n                                    <div className=\"amt-Text\">10</div>\n                                  </div>\n                                  <div className=\"text-Wrap\">\n                                    <div className=\"text-Title\">\n                                      Ethereum gas :\n                                    </div>\n                                    <div className=\"amt-Text\">0.000253 ETH</div>\n                                  </div>\n                                  <div className=\"text-Wrap\">\n                                    <div className=\"text-Title\">\n                                      Bitcoin transfer commission :\n                                    </div>\n                                    <div className=\"amt-Text\">0.000235 BTC</div>\n                                  </div>\n                                  <div className=\"text-Wrap\">\n                                    <div className=\"text-Title\">\n                                      3rd party on-chain validation :\n                                    </div>\n                                    <div className=\"amt-Text\">0.000135 ETH</div>\n                                  </div>\n                                  <div className=\"text-Wrap\">\n                                    <div className=\"text-Title\">Slippage :</div>\n                                    <div className=\"amt-Text\">$0 / 0%</div>\n                                  </div>\n                                  <div className=\"text-Wrap\">\n                                    <div className=\"text-Title\">Spread :</div>\n                                    <div className=\"amt-Text\">$0 / 0%</div>\n                                  </div>\n                                  <div className=\"text-Wrap\">\n                                    <div className=\"text-Title\">\n                                      SmartSwap transaction fee :\n                                    </div>\n                                    <div className=\"amt-Text\">$0 / 0%</div>\n                                  </div>\n                                  <div className=\"text-Wrap\">\n                                    <div className=\"text-Title\">\n                                      Max estimate cost :\n                                    </div>\n                                    <div className=\"amt-Text red-Color\">\n                                      -$5.7556 (0.01235 ETH | 0.0002 BTC)\n                                    </div>\n                                  </div>\n                                  <div className=\"text-Wrap\">\n                                    <div className=\"text-Title\">\n                                      1:1 ZERO/1 rebate :\n                                    </div>\n                                    <div className=\"amt-Text green-Color\">\n                                      +$5.7556 (5.7556 ZERO/1)\n                                    </div>\n                                  </div>\n                                  <div className=\"text-Wrap\">\n                                    <div className=\"text-Title\">\n                                      Final cost to use SmartSwap :\n                                    </div>\n                                    <div className=\"amt-Text\">$0 / 0%</div>\n                                  </div>\n                                  <a\n                                    href=\"javascript:void\"\n                                    className=\"close-Icon\"\n                                  >\n                                    <img src=\"images/closeBTN.png\" />\n                                  </a>\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"swap-Textlink\">\n                              {this.state.web3 !== null ? (\n                                <div className=\"swap-Link01\">\n                                  <a\n                                    className=\"icon-Box Setting\"\n                                    // onClick={() => { this.setState({ sideBar: !this.state.sideBar }) }}\n                                    href=\"javascript:void(0);\"\n                                  >\n                                    <i className=\"fas fa-cog\"></i>\n                                  </a>\n                                  Estimated gas and fees:\n                                  {Number(this.state.estimatedGasFee).toFixed(\n                                    5\n                                  )}{\" \"}\n                                  {this.state.selectedSendCurrency}{\" \"}\n                                  <a\n                                    href=\"javascript:void(0);\"\n                                    className=\"gas-Est\"\n                                  >\n                                    <i\n                                      className=\"fas fa-question-circle\"\n                                      aria-hidden=\"true\"\n                                    ></i>\n                                  </a>\n                                </div>\n                              ) : (\n                                <div className=\"powertextBX\">\n                                  Powered by <img src=\"images/smLOGO.png\" />{\" \"}\n                                </div>\n                              )}\n                              {/* <div className=\"swap-Link03\">\n                                                <a href=\"javascript:void();\">P2C</a> | <a href=\"javascript:void();\">P2G</a> | <a\n                                                    href=\"javascript:void();\">P2P</a>\n                                            </div>\n                                            <div className=\"text-Popup\" tabindex=\"-1\">\n                                                <span className=\"icon-Box\"><i className=\"fas fa-exclamation-circle\"></i></span>\n                                                <div className=\"text-content\">\n                                                    <p>Element Zero SmartSwap reimburses all swap fees and does not allow any\n                                                        loss of value due to spread or volatility. The max estimated gas cost\n                                                        covers the direct cost of blockchain gas. If the user is swapping BTC,\n                                                        there is an additional cost for 3rd party providers such as provable.xyz\n                                                        and blockcypher.com to validate on-chain the exact deposit amount of\n                                                        BTC.</p>\n                                                    <p>A user sending BTC will deposit the maximum estimated gas cost to a\n                                                        temporary wallet generated by SmartSwap and 100% owned by the user. If\n                                                        the total gas cost at the end of the swap is less than the estimated\n                                                        amount, the temporary wallet returns the balance to the user’s wallet.\n                                                    </p>\n                                                    <p>Once the final cost of gas and fees is known at the end of the swap,\n                                                        SmartSwap reimburses users with ZERO/1 at 100%.</p>\n                                                </div>\n                                            </div> */}\n                            </div>\n                          </div>\n                        </div>\n                      ) : this.state.wrapBox === \"success\" ? (\n                        <div className=\"wrap-Box\">\n                          <div\n                            className=\"swap-Wrap grey-Box wow fadeInRight\"\n                            data-wow-delay=\"0.3s\"\n                          >\n                            <div className=\"swap-Box swap-Successful\">\n                              <div className=\"swap-Input\">\n                                <div className=\"swap-Title\">\n                                  <div className=\"swap-Amt\">\n                                    <span className=\"currecy\">$</span>\n                                    <input\n                                      type=\"text\"\n                                      id=\"input04\"\n                                      value={this.state.sendFundAmount}\n                                    />\n                                    <i className=\"recCurIcon\">\n                                      <img\n                                        src={\n                                          \"images/receiveCurrencies/\" +\n                                          this.state.selectedSendCurrency +\n                                          \".png\"\n                                        }\n                                      />\n                                    </i>\n                                  </div>\n                                </div>\n                                <div className=\"swap-Title\">\n                                  <div className=\"swap-Amt\">\n                                    <span className=\"currecy\">$</span>\n                                    <input\n                                      type=\"text\"\n                                      value={this.state.sendFundAmount}\n                                      readOnly\n                                    />\n                                    <i className=\"recCurIcon\">\n                                      <img\n                                        src={\n                                          \"images/receiveCurrencies/\" +\n                                          this.state.selectedReceiveCurrency +\n                                          \".png\"\n                                        }\n                                      />\n                                    </i>\n                                  </div>\n                                </div>\n                              </div>\n                              {/* <div className=\"swap-Icon\">\n                                <a\n                                  href=\"javascript:void(0);\"\n                                  className=\"faux-Link ani-1\"\n                                >\n                                  <img\n                                    src=\"images/swap-Icon.png\"\n                                    alt=\"\"\n                                    className=\"ani-1\"\n                                  />\n                                </a>\n                              </div> */}\n                              <div className=\"successMesg01\">\n                                <div className=\"icon-Box\">\n                                  <i className=\"fas fa-check\"></i>\n                                </div>\n                                100% of the swap completed successfully\n                                <a\n                                  href=\"javascript:void(0);\"\n                                  onClick={() => {\n                                    this.scrollToLedger();\n                                  }}\n                                >\n                                  Check the ledger below\n                                </a>\n                              </div>\n                              {/* <div className=\"successMesg01 yellow-Color\"><div className=\"icon-Box\"><img src=\"images/transaction-img.png\" alt=\"\" className=\"ani-1\" /></div>\n                                            73.69% of the swap completed successfully\n                                            <a href=\"javascript:void(0);\">26.31% still pending<span><i className=\"fas cust-fas fa-question-circle protip\" data-pt-gravity=\"top\" data-pt-title=\"After you type your BTC wallet address and click the CLAIM BTC button, every pending swap will automatically deposit to your BTC wallet address. NO FURTHER ACTION IS REQUIRED\"></i></span></a>\n                                            </div> */}\n                            </div>\n                            <div className=\"swap-Textlink\">\n                              <div className=\"swap-Link03\">\n                                <a\n                                  href=\"javascript:void(0);\"\n                                  className=\"yellow-Color\"\n                                  onClick={() => this.changeWrapBox(\"swap\")}\n                                >\n                                  Start a new swap\n                                </a>\n                                {/* |  <a href=\"javascript:void();\">P2C</a>   |   <a href=\"javascript:void();\">P2G</a>   |   <a href=\"javascript:void();\">P2P</a> */}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      ) : null}\n                    </div>\n                    {this.state.showLedger ? (\n                      <div className=\"bb-traHSection\">\n                        <div className=\"transaction-History\">\n                          <div className=\"container-Grid\">\n                            <div\n                              className=\"Title01 wow fadeInDown\"\n                              data-wow-delay=\"0.3s\"\n                            >\n                              <a\n                                href=\"javascript:void(0)\"\n                                className=\"historyBTN-01 active\"\n                                data-toggle=\"n-collapse\"\n                                data-target=\"#ledgerDetailBox\"\n                                aria-expanded=\"false\"\n                                aria-controls=\"ledgerDetailBox\"\n                              >\n                                Ledger <i className=\"fas fa-sort-down\"></i>\n                              </a>\n                            </div>\n                            <div className=\"n-collapse in\" id=\"ledgerDetailBox\">\n                              {/* <div className=\"bb-traHistoryBTNbar \">\n                                                <a href=\"javascript:void(0);\" className=\"\">All</a> \n                                                <a href=\"javascript:void(0);\" className=\"\">Completed</a>\n                                                <a href=\"javascript:void(0);\" className=\"active\">Pending</a>\n                                            </div> */}\n                              <div className=\"transaction-histroryWrap\">\n                                <div className=\"transaction-histroryBox\">\n                                  <div className=\"Title02 orange-Color\">\n                                    Send\n                                  </div>\n                                  <div className=\"trasaction-Amt\">\n                                    {this.state.actualSendFundAmount}{\" \"}\n                                    {this.state.selectedSendCurrency}\n                                    <span>({this.state.sendFundAmount})</span>\n                                  </div>\n                                  <div className=\"trasaction-Date\">\n                                    {this.state.txSentTime}\n                                  </div>\n                                  <div className=\"trasaction-Box\">\n                                    <div className=\"trasaction-Status\">\n                                      <span className=\"icon-Box\">\n                                        <i className=\"fas fa-check-circle\"></i>\n                                      </span>\n                                      Transaction Submitted\n                                    </div>\n                                    <div className=\"trans-Id\">\n                                      {this.state.txIdSent}\n                                    </div>\n                                    <a\n                                      href={this.state.txLinkSend}\n                                      className=\"view-Trans ani-1\"\n                                      target=\"_blank\"\n                                    >\n                                      View transaction\n                                    </a>\n                                  </div>\n                                </div>\n                                <div className=\"arrow-Box\"></div>\n                                <div className=\"transaction-histroryBox\">\n                                  {this.state.txSentStatus === \"Success\" ? (\n                                    <div>\n                                      <div className=\"Title02 green-Color\">\n                                        Received <span></span>\n                                      </div>\n                                      <div className=\"trasaction-Amt\">\n                                        {this.state.receiveFundAmount}{\" \"}\n                                        {this.state.selectedReceiveCurrency}\n                                        {/* <span>(${this.state.sendFundAmount})</span>  */}\n                                      </div>\n                                      <div className=\"trasaction-Date\">\n                                        {this.state.txReceiveTime}\n                                      </div>\n                                      <div className=\"trasaction-Box\">\n                                        <div className=\"trasaction-Status\">\n                                          <span className=\"icon-Box\">\n                                            <i className=\"fas fa-check-circle\"></i>\n                                          </span>\n                                          Funds wired to your wallet{\" \"}\n                                        </div>\n                                        <div className=\"trans-Id\">\n                                          {this.state.txIdReceive}\n                                        </div>\n                                        <div className=\"tsb-LinkBox\">\n                                          <a\n                                            href={this.state.txLinkReturn}\n                                            className=\"view-Trans ani-1\"\n                                            target=\"_blank\"\n                                          >\n                                            View transaction\n                                          </a>\n                                          {/* <a href=\"javascript:void(0);\" className=\"view-Trans02 ani-1\" data-toggle=\"n-collapse\" data-target=\"#trsBox01\" aria-expanded=\"false\" aria-controls=\"trsBox01\">Break down fees <i className=\"fas fa-sort-down\"></i></a> */}\n                                        </div>\n                                      </div>\n                                    </div>\n                                  ) : (\n                                    <div>\n                                      <div className=\"Title02 pending\">\n                                        Pending <span></span>\n                                      </div>\n                                      <div className=\"trasaction-Amt\">\n                                        ... {this.state.selectedReceiveCurrency}{\" \"}\n                                      </div>\n                                      <div className=\"trasaction-Box pendingColor\">\n                                        <div className=\"trasaction-Status pending-Text\">\n                                          Pending{\" \"}\n                                          <span className=\"pending-loader\">\n                                            <img src=\"images/loader2.gif\" />\n                                          </span>\n                                        </div>\n                                      </div>\n                                      <p>\n                                        {/* <span>\n                                                                <a href=\"javascript:void(0);\"><i className=\"fas fa-cog\"></i></a>\n                                                            </span> */}\n                                        <a\n                                          href=\"javascript:void(0);\"\n                                          className=\"ani-1\"\n                                        >\n                                          Wait until few blocks confirmation\n                                        </a>\n                                      </p>\n                                    </div>\n                                  )}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ) : null}\n                    <div className=\"bb-traHSection\">\n                      <div className=\"container-Grid\">\n                        {/* <div class=\"bb-traHistoryBTNbar \">\n                                        <a href=\"javascript:void(0);\" class=\"\">All</a>\n                                        <a href=\"javascript:void(0);\" class=\"\">Completed</a>\n                                        <a href=\"javascript:void(0);\" class=\"active\">Pending</a>\n                                    </div> */}\n                        {web3Config.getAddress() !== null ? (\n                          !this.state.showTxHistory ? (\n                            <div class=\"bb-traHistoryBTNbar\">\n                              <a\n                                href=\"javascript:void(0)\"\n                                className=\"ssbtn05\"\n                                onClick={() => this.showHistory(\"all\", true)}\n                              >\n                                <h4 className=\"orange-Color\">History</h4>\n                              </a>\n                            </div>\n                          ) : (\n                            <div class=\"bb-traHistoryBTNbar\">\n                              <a\n                                href=\"javascript:void(0)\"\n                                onClick={() => this.showHistory(\"all\", false)}\n                              >\n                                <h4 className=\"orange-Color\">Hide</h4>\n                              </a>\n                              &nbsp;\n                              <a\n                                href=\"javascript:void(0)\"\n                                onClick={() => this.showHistory(\"all\", true)}\n                              >\n                                <h4 className=\"orange-Color\">All</h4>\n                              </a>\n                              &nbsp;\n                              <a\n                                href=\"javascript:void(0)\"\n                                onClick={() =>\n                                  this.showHistory(\"pending\", true)\n                                }\n                              >\n                                <h4 className=\"orange-Color\">Pending</h4>\n                              </a>\n                              &nbsp;\n                            </div>\n                          )\n                        ) : null}\n\n                        {this.state.showTxHistory\n                          ? this.state.loadingHistory ?\n                            <div style={{ textAlign: \"center\" }}>\n                              <Loader\n                                type=\"Grid\"\n                                color=\"#00BFFF\"\n                                height={70}\n                                width={70}\n                              />\n                            </div>\n                            :\n                            this.state.showAllTx\n                              ? this.state.allTxHistoryUI\n                              : this.state.allPendingTxHistoryUI\n                          : null}\n\n                        {/* {this.state.allTxHistoryUI !== null ? this.state.allTxHistoryUI : null} */}\n                      </div>\n                    </div>\n\n                    {/* <div className=\"bb-traHSection\">\n                                <div className=\"container-Grid\">\n                                <div class=\"bb-traHistoryBTNbar \">\n                                    <a href=\"javascript:void(0);\" class=\"\">All</a> \n                                    <a href=\"javascript:void(0);\" class=\"\">Completed</a>\n                                    <a href=\"javascript:void(0);\" class=\"active\">Pending</a>\n                                </div>\n                                    <div className=\"transaction-histroryWrap\">\n                                        <div className=\"transaction-histroryBox\">\n                                            <div className=\"Title02 orange-Color\">Send</div>\n                                            <div className=\"trasaction-Amt\"> 50 ETH <span>($10,000)</span> </div>\n                                            <div className=\"trasaction-Date\">Feb 2. 2019, 9:21am PST</div>\n                                            <div className=\"trasaction-Box\">\n                                                <div className=\"trasaction-Status\"><span className=\"icon-Box\"><i className=\"fas fa-check-circle\"></i></span>Transaction Submitted</div>\n                                                <div className=\"trans-Id\">X0456c19d5A61AeA886E6D657EsEF8849565</div>\n                                                <a href=\"javascript:void(0);\" className=\"view-Trans ani-1\">View transaction</a>\n                                            </div>\n                                        </div>\n                                        <div className=\"arrow-Box\"></div>\n                                        <div className=\"transaction-histroryBox\">\n                                            <div className=\"Title02 green-Color\">Received <span>(73.69%)</span></div>\n                                            <div className=\"trasaction-Amt\"> 0.25 BTC <span>($2,500)</span> </div>\n                                            <div className=\"trasaction-Date\">Feb 2. 2019, 9:21am PST</div>\n                                            <div className=\"trasaction-Box\">\n                                                <div className=\"trasaction-Status\"><span className=\"icon-Box\"><i className=\"fas fa-check-circle\"></i></span>Funds wired to your wallet </div>\n                                                <div className=\"trans-Id\">X0456c19d5A61AeA886E6D657EsEF8849565</div>\n                                                <div className=\"tsb-LinkBox\">\n                                                    <a href=\"javascript:void(0);\" className=\"view-Trans ani-1\">View transaction</a>\n                                                    <a href=\"javascript:void(0);\" className=\"view-Trans02 ani-1 active\" data-toggle=\"n-collapse\" data-target=\"#trsBox01\" aria-expanded=\"true\" aria-controls=\"trsBox01\">Break down fees <i className=\"fas fa-sort-down\"></i></a>\n                                                </div>\n                                                <div className=\"clearfix n-collapse in\" id=\"trsBox01\" aria-expanded=\"true\" >\n                                                    <div className=\"tsb-transHistoryBox\">\n                                                        <span>Network gas:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n                                                        <span>0.00910955 Ether ($3.43)</span>\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\n                                                    </div>\n                                                    <div className=\"tsb-transHistoryBox\">\n                                                        <span>3rd part validators fees:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n                                                        <span>0.00910955 Ether ($3.43)</span>\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\n                                                    </div>\n                                                    <div className=\"tsb-transHistoryBox\">\n                                                        <span>Transfer tokens:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n                                                        <span>0.00910955 Ether ($3.43)</span>\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\n                                                    </div>\n                                                    <div className=\"tsb-transHistoryBox\">\n                                                        <span>SmartSwap fee:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n                                                        <span>0.00910955 Ether ($3.43)</span>\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\n                                                    </div>\n                                                    <div className=\"tsb-transHistoryBox\">\n                                                        <span>SMART/2 Rebate:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n                                                        <span>0.00910955 Ether ($3.43)</span>\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"trasaction-Amt\"> 0.25 BTC <span>($2,500)</span> </div>\n                                            <div className=\"trasaction-Date\">Feb 2. 2019, 9:21am PST</div>\n                                            <div className=\"trasaction-Box\">\n                                                <div className=\"trasaction-Status\"><span className=\"icon-Box\"><i className=\"fas fa-check-circle\"></i></span>Funds wired to your wallet </div>\n                                                <div className=\"trans-Id\">X0456c19d5A61AeA886E6D657EsEF8849565</div>\n                                                <div className=\"tsb-LinkBox\">\n                                                    <a href=\"javascript:void(0);\" className=\"view-Trans ani-1\">View transaction</a>\n                                                    <a href=\"javascript:void(0);\" className=\"view-Trans02 ani-1\" data-toggle=\"n-collapse\" data-target=\"#trsBox02\" aria-expanded=\"false\" aria-controls=\"trsBox02\">Break down fees <i className=\"fas fa-sort-down\"></i></a>\n                                                </div>\n                                                <div className=\"n-collapse clearfix\" id=\"trsBox02\">\n                                                    <div className=\"tsb-transHistoryBox\">\n                                                        <span>Network gas:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n                                                        <span>0.00910955 Ether ($3.43)</span>\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\n                                                    </div>\n                                                    <div className=\"tsb-transHistoryBox\">\n                                                        <span>3rd part validators fees:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n                                                        <span>0.00910955 Ether ($3.43)</span>\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\n                                                    </div>\n                                                    <div className=\"tsb-transHistoryBox\">\n                                                        <span>Transfer tokens:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n                                                        <span>0.00910955 Ether ($3.43)</span>\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\n                                                    </div>\n                                                    <div className=\"tsb-transHistoryBox\">\n                                                        <span>SmartSwap fee:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n                                                        <span>0.00910955 Ether ($3.43)</span>\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\n                                                    </div>\n                                                    <div className=\"tsb-transHistoryBox\">\n                                                        <span>SMART/2 Rebate:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n                                                        <span>0.00910955 Ether ($3.43)</span>\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"trasaction-Amt\"> 0.25 BTC <span>($2,500)</span> </div>\n                                            <div className=\"trasaction-Date\">Feb 2. 2019, 9:21am PST</div>\n                                            <div className=\"trasaction-Box\">\n                                                <div className=\"trasaction-Status\"><span className=\"icon-Box\"><i className=\"fas fa-check-circle\"></i></span>Funds wired to your wallet </div>\n                                                <div className=\"trans-Id\">X0456c19d5A61AeA886E6D657EsEF8849565</div>\n                                                <div className=\"tsb-LinkBox\">\n                                                    <a href=\"javascript:void(0);\" className=\"view-Trans ani-1\">View transaction</a>\n                                                    <a href=\"javascript:void(0);\" className=\"view-Trans02 ani-1\" data-toggle=\"n-collapse\" data-target=\"#trsBox03\" aria-expanded=\"false\" aria-controls=\"trsBox03\">Break down fees <i className=\"fas fa-sort-down\"></i></a>\n                                                </div>\n                                                <div className=\"n-collapse clearfix\" id=\"trsBox03\">\n                                                    <div className=\"tsb-transHistoryBox\">\n                                                        <span>Network gas:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n                                                        <span>0.00910955 Ether ($3.43)</span>\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\n                                                    </div>\n                                                    <div className=\"tsb-transHistoryBox\">\n                                                        <span>3rd part validators fees:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n                                                        <span>0.00910955 Ether ($3.43)</span>\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\n                                                    </div>\n                                                    <div className=\"tsb-transHistoryBox\">\n                                                        <span>Transfer tokens:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n                                                        <span>0.00910955 Ether ($3.43)</span>\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\n                                                    </div>\n                                                    <div className=\"tsb-transHistoryBox\">\n                                                        <span>SmartSwap fee:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n                                                        <span>0.00910955 Ether ($3.43)</span>\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\n                                                    </div>\n                                                    <div className=\"tsb-transHistoryBox\">\n                                                        <span>SMART/2 Rebate:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n                                                        <span>0.00910955 Ether ($3.43)</span>\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"Title02 pending\">Pending <span>(73.69%)</span></div>\n                                            <div className=\"trasaction-Amt\">10 ETH  <span>($2,500)</span></div>\n                                            <div className=\"trasaction-Box pendingColor\">\n                                                <div className=\"trasaction-Status pending-Text\">Pending <span className=\"pending-loader\"><img src=\"images/loader2.gif\" /></span></div>\n                                            </div>\n                                            <p><span><a href=\"javascript:void(0);\"><i className=\"fas fa-cog\"></i></a></span><a href=\"javascript:void(0);\" className=\"ani-1\">Wait until a match will be found or cancel and redeem the 10 ETH pending to your wallet</a></p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div> */}\n                    <div className=\"swap-textBox\">\n                      <div className=\"container-Grid\">\n                        <div\n                          className=\"swap-boxWrap wow fadeInUp\"\n                          data-wow-delay=\"0.3s\"\n                        >\n                          <div className=\"swap-Box01\">\n                            <div className=\"icon-Box icon04\">\n                              <svg viewBox=\"0 0 200 200\">\n                                <polygon\n                                  class=\"st0\"\n                                  fill=\"var(--button-bg-color)\"\n                                  points=\"170.6,45.7 170.6,42.8 167.5,42.8 167.5,39.8 167.5,39.7 167.5,36.6 161.8,36.6 161.8,33.8 158.5,33.8 \n\t158.5,31.2 158.5,30.9 158.5,28 125.5,28 125.5,30.9 122.8,30.9 122.8,33.8 119.8,33.8 119.8,36.6 113.9,36.6 113.9,39.8 \n\t113.9,39.8 113.9,42.8 110.9,42.8 110.9,45.8 104.8,45.8 104.8,48.9 104.8,49 104.8,52 101.8,52 101.8,54.7 98.8,54.7 98.8,57.7 \n\t95.9,57.7 95.9,60.7 86.7,60.7 86.7,63.7 86.7,63.9 86.7,66.8 86.7,66.9 86.7,69.9 86.7,70 86.7,72.9 77.9,72.9 77.9,76 77.9,76.1 \n\t77.9,78.9 77.9,79.2 77.9,82.1 77.9,82.1 77.9,85 77.9,85.3 77.9,88.1 77.9,88.2 77.9,91 77.9,91.3 77.9,93.9 77.9,94.2 77.9,96.7 \n\t77.9,97.1 77.9,99.6 77.9,99.9 77.9,102.7 77.9,102.8 77.9,105.6 77.9,105.9 77.9,108.8 81,108.8 81,111.8 83.8,111.8 83.8,114.8 \n\t87.1,114.8 87.1,117.6 87.1,117.9 87.1,120.5 87.1,120.8 87.1,123.7 96,123.7 96,126.8 104.6,126.8 104.6,123.7 104.9,123.7 \n\t104.9,120.8 107.8,120.8 107.8,117.6 104.6,117.6 104.6,114.7 98.8,114.7 98.8,111.6 95.8,111.6 95.8,108.6 92.7,108.6 92.7,105.6 \n\t89.8,105.6 89.8,102.8 89.8,102.7 89.8,99.6 86.7,99.6 86.7,97.1 86.7,96.7 86.7,94.2 86.7,93.9 86.7,91.3 86.8,91.3 86.8,88.2 \n\t86.8,88.1 86.8,85.3 89.4,85.3 89.4,82.1 92.7,82.1 92.7,79.2 95.8,79.2 95.8,76.1 95.8,76 95.8,73.1 101.8,73.1 101.8,70 104.8,70 \n\t104.8,66.9 104.8,66.8 104.8,63.9 107.7,63.9 107.7,60.9 113.8,60.9 113.8,57.9 113.8,57.7 113.8,55.2 122.7,55.2 122.7,52.1 \n\t122.7,52 122.7,49 122.8,49 122.8,46 134.6,46 134.6,43 134.6,42.8 134.6,39.8 137.8,39.8 137.8,37 149.8,37 149.8,39.7 149.8,39.8 \n\t149.8,42.8 149.8,42.9 149.8,46 158.6,46 158.6,48.9 158.6,48.9 158.6,52 158.6,52.1 158.6,55.2 164.6,55.2 164.6,58 167.6,58 \n\t167.6,61 167.8,61 167.8,63.8 167.5,63.8 167.5,67 167.6,67 167.6,69.9 164.6,69.9 164.6,73 158.6,73 158.6,75.8 158.6,76.2 \n\t158.6,78.8 158.6,79 158.6,81.7 149.7,81.7 149.7,84.7 149.7,84.9 149.7,87.6 149.7,87.9 149.7,90.6 146.6,90.6 146.6,93.6 \n\t143.5,93.6 143.5,96.6 143.5,96.8 143.5,99.5 140.8,99.5 140.8,102.5 140.8,102.7 140.8,105.4 140.8,105.7 140.8,108.5 140.8,108.6 \n\t140.8,111.7 143.5,111.7 143.5,108.6 146.6,108.6 146.6,105.7 149.7,105.7 149.7,102.7 152.6,102.7 152.6,99.8 158.6,99.8 \n\t158.6,96.8 158.6,96.8 158.6,93.8 158.6,93.6 158.6,90.8 167.6,90.8 167.6,87.9 167.6,87.6 167.6,84.9 170.6,84.9 170.6,82 \n\t176.5,82 176.5,79 176.5,78.8 176.5,76.2 176.5,75.8 176.5,73.1 176.5,73 176.5,70 176.5,69.9 176.5,67 176.5,66.8 176.5,64 \n\t176.5,63.8 176.5,61 176.5,60.8 176.5,58 176.5,57.8 176.5,55.2 176.5,54.8 176.5,52.1 176.5,52 176.5,48.9 176.5,48.9 176.5,45.7 \n\t\"\n                                />\n                                <polygon\n                                  class=\"st1\"\n                                  fill=\"var(--button-bg-color)\"\n                                  points=\"129.7,91.2 129.7,88.2 127,88.2 127,85.2 123.7,85.2 123.7,82.4 123.7,82.1 123.7,79.5 123.7,79.2 \n\t123.7,76.3 114.8,76.3 114.8,73.2 106.1,73.2 106.1,76.3 105.9,76.3 105.9,79.2 103,79.2 103,82.4 106.1,82.4 106.1,85.3 \n\t111.9,85.3 111.9,88.4 115,88.4 115,91.4 118.1,91.4 118.1,94.4 121,94.4 121,97.2 121,97.3 121,100.4 124,100.4 124,102.9 \n\t124,103.3 124,105.8 124,106.1 124,108.7 124,108.7 124,111.8 124,111.9 124,114.7 121.4,114.7 121.4,117.9 118.1,117.9 \n\t118.1,120.8 115,120.8 115,123.9 115,124 115,126.9 108.9,126.9 108.9,130 105.9,130 105.9,133.1 105.9,133.2 105.9,136.1 \n\t103.1,136.1 103.1,139.1 97,139.1 97,142.1 97,142.3 97,144.8 88,144.8 88,147.9 88,148 88,151 88,151 88,154 76.2,154 76.2,157 \n\t76.2,157.2 76.2,160.2 73,160.2 73,163 61,163 61,160.3 61,160.2 61,157.2 61,157.1 61,154 52.1,154 52.1,151.1 52.1,151.1 \n\t52.1,148 52.1,147.9 52.1,144.8 46.1,144.8 46.1,142 43.2,142 43.2,139 43,139 43,136.2 43.3,136.2 43.3,133 43.2,133 43.2,130.1 \n\t46.1,130.1 46.1,127 52.1,127 52.1,124.2 52.1,123.8 52.1,121.2 52.1,121 52.1,118.3 61.1,118.3 61.1,115.3 61.1,115.1 61.1,112.4 \n\t61.1,112.1 61.1,109.4 64.1,109.4 64.1,106.4 67.2,106.4 67.2,103.4 67.2,103.2 67.2,100.5 69.9,100.5 69.9,97.5 69.9,97.3 \n\t69.9,94.6 69.9,94.3 69.9,91.5 69.9,91.4 69.9,88.3 67.2,88.3 67.2,91.4 64.1,91.4 64.1,94.3 61.1,94.3 61.1,97.3 58.1,97.3 \n\t58.1,100.2 52.2,100.2 52.2,103.2 52.1,103.2 52.1,106.2 52.1,106.4 52.1,109.2 43.2,109.2 43.2,112.1 43.2,112.4 43.2,115.1 \n\t40.2,115.1 40.2,118 34.3,118 34.3,121 34.3,121.2 34.3,123.8 34.3,124.2 34.3,126.9 34.3,127 34.3,130 34.3,130.1 34.3,133 \n\t34.3,133.2 34.3,136 34.3,136.2 34.3,139 34.3,139.2 34.3,142 34.3,142.2 34.3,144.8 34.3,145.2 34.3,147.9 34.3,148 34.3,151.1 \n\t34.3,151.1 34.3,154.3 40.1,154.3 40.1,157.2 43.3,157.2 43.3,160.2 43.3,160.3 43.3,163.4 49,163.4 49,166.2 52.2,166.2 \n\t52.2,168.8 52.2,169.1 52.2,172 85.2,172 85.2,169.1 88,169.1 88,166.2 90.9,166.2 90.9,163.4 96.8,163.4 96.8,160.2 96.8,160.2 \n\t96.8,157.2 99.9,157.2 99.9,154.2 105.9,154.2 105.9,151.1 105.9,151 105.9,148 108.9,148 108.9,145.3 112,145.3 112,142.3 \n\t114.8,142.3 114.8,139.3 124,139.3 124,136.3 124,136.1 124,133.2 124,133.1 124,130.1 124,130 124,127.1 132.9,127.1 132.9,124 \n\t132.9,123.9 132.9,121.1 132.9,120.8 132.9,117.9 132.9,117.9 132.9,115 132.9,114.7 132.9,111.9 132.9,111.8 132.9,109 \n\t132.9,108.7 132.9,106.1 132.9,105.8 132.9,103.3 132.9,102.9 132.9,100.4 132.9,100.1 132.9,97.3 132.9,97.2 132.9,94.4 \n\t132.9,94.1 132.9,91.2 \"\n                                />\n                              </svg>\n                            </div>\n                            <div className=\"text-Content\">\n                              <div className=\"text-Title\">\n                                100% <br /> cross-chain\n                              </div>\n                              <p>\n                                No wraps, no side-chain, no light chain, 100%\n                                true one-click swap between all blockchains{\" \"}\n                              </p>\n                            </div>\n                          </div>\n                          <div className=\"swap-Box01\">\n                            <div className=\"icon-Box icon01\">\n                              <svg viewBox=\"0 0 200 200\">\n                                <g>\n                                  <rect\n                                    x=\"35.2\"\n                                    y=\"160.4\"\n                                    class=\"st0\"\n                                    fill=\"var(--button-bg-color)\"\n                                    width=\"128.3\"\n                                    height=\"8.5\"\n                                  />\n                                  <path\n                                    class=\"st0\"\n                                    fill=\"var(--button-bg-color)\"\n                                    d=\"M38.9,115.5v2.9h6.4v3.1h2.9h0.1h2.9v-3.1h6.4v-2.9h9.7v-3.1h3.3v-2.9h3.2v-3.1h3.1v-2.9H79v-3.2h-0.1v-3.2\n\t\th-2.8v-2.6v-0.1v-3.1h-3v-2.7v-0.2v-3.1h-3v-3h-3v-2.7v-0.3v-2.7v-0.2v-3h-3.2v-2.9h-2.8v-3.2h-3v-3.1h-6v-2.7v-0.2v-2.6h3.2h108.1\n\t\tv-3.1v-0.1v-2.9v-0.2v-2.8v-0.2v-3H35.4v3v0.2v2.8v0.2v2.9v0.1v3.1h4.9h3v2.6v0.2v2.7h-5.9v3.1h-3v3.2h-2.8v2.9h-3.1v3v0.2v2.7v0.3\n\t\tv2.7h-3.1v3h-3v3.1v0.2v2.7h-2.9v3.1v0.1v2.6h-3.1v3.2v3.2h3.1v2.9h3.1v3.1h3.2v2.9h3.3v3.1H38.9z M37.2,88.7v-0.2v-2.9v-0.2v-2.8\n\t\tv-0.2v-2.7v-0.3v-2.7h3.1v-2.9h3v-3.2v-3h2.8v-3h3.3v3h2.8v3v3.2h3v2.9h3.1v2.7v0.3v2.7v0.2v2.8v0.2v2.9v0.2v2.7H37.2V88.7z\"\n                                  />\n                                </g>\n                                <g>\n                                  <rect\n                                    x=\"94.8\"\n                                    y=\"19.7\"\n                                    class=\"st1\"\n                                    width=\"9.2\"\n                                    height=\"26.8\"\n                                    fill=\"var(--button-bg-color)\"\n                                  />\n                                  <rect\n                                    x=\"94.8\"\n                                    y=\"58.8\"\n                                    class=\"st1\"\n                                    fill=\"var(--button-bg-color)\"\n                                    width=\"9.2\"\n                                    height=\"101.6\"\n                                  />\n                                  <path\n                                    class=\"st1\"\n                                    fill=\"var(--button-bg-color)\"\n                                    d=\"M183.5,100.3v-3.2h-2.8v-2.6v-0.1v-3.1h-3v-2.7v-0.2v-3.1h-3v-3h-3.1v-2.7v-0.3v-2.7v-0.2v-3h-3.1v-2.9h-2.8\n\t\tv-3.2h-3v-3.1h-6.1v-2.7v-0.2v-2.6h3.2v-3.2h-3.2v-2.9v-0.2v-2.8v-0.2v-3h-8.7v3v0.2v2.8v0.2v2.9h-3.1v3.2h3.1v2.6v0.2v2.7H142v3.1\n\t\th-3v3.2h-2.8v2.9h-3.1v3v0.2v2.7v0.3v2.7H130v3h-3v3.1v0.2v2.7h-2.9v3.1v0.1v2.6H121v3.2v3.2h3.1v2.9h3.1v3.1h3.2v2.9h3.3v3.1h9.7\n\t\tv2.9h6.4v3.1h2.9h0.1h2.9v-3.1h6.4v-2.9h9.7v-3.1h3.3v-2.9h3.2v-3.1h3.1v-2.9h2.1L183.5,100.3L183.5,100.3z M162.9,79.4v0.3v2.7\n\t\tv0.2v2.8v0.2v2.9v0.2v2.7h-21.2v-2.7v-0.2v-2.9v-0.2v-2.8v-0.2v-2.7v-0.3v-2.7h3.1v-2.9h3.1v-3.2v-3h2.8v-3h3.3v3h2.8v3v3.2h3.1\n\t\tv2.9h3.1V79.4z\"\n                                  />\n                                </g>\n                              </svg>\n                            </div>\n                            <div className=\"text-Content\">\n                              <div className=\"text-Title\">\n                                100% <br />\n                                value match\n                              </div>\n                              <p>\n                                Receive new crypto equal to the exact value you\n                                sent with zero slippage\n                              </p>\n                            </div>\n                          </div>\n                          <div className=\"swap-Box01\">\n                            <div className=\"icon-Box icon02\">\n                              <svg viewBox=\"0 0 200 200\">\n                                <path\n                                  class=\"st0\"\n                                  fill=\"var(--button-bg-color)\"\n                                  d=\"M152.4,81.9v-2.7h-2.9V76h-6.4v-2.8h-6.4V64h-3V46.4l-3.2,0v-3.2h-3.1v-3h-3.1v-3.1h-3.1v-3h-3.1v-3h-3.4v-3\n\th-12.7h-4.1H85.3v3h-3.4v3h-3.1v3h-3.1v3.1h-3.1v3h-3.1v3.2l-3.2,0V64h-3v9.2h-6.4V76h-6.4v3.2h-2.9v2.7h-9v2.8v0.5v2.3v0.6v74.5\n\th2.7v3.5h3.1v2.7h3.1v2.9h49.2h6.4h49.2v-2.9h3.1v-2.7h3.1v-3.5h2.7V88.2v-0.6v-2.3v-0.5v-2.8H152.4z M72.4,64h3.3V46.4H85v-3v-0.2\n\tv-2.9h3.4v-3h9.5h4.1h9.5v3h3.4v2.9v0.2v3h9.3V64h3.3v9.2h-26.8h-1.5H72.4V64z M152.7,162.7h-49.5h-6.4H47.3V88.2h6.2v-2.9h3.4h2.5\n\th39.9h1.5h39.9h2.5h3.4v2.9h6.2V162.7z\"\n                                />\n                                <path\n                                  class=\"st1\"\n                                  fill=\"var(--button-bg-color)\"\n                                  d=\"M113.1,114.7v-2.9v-3.2h-2.9v-2.8H107v-2.7v-0.3v-2.9h-7.4h-7.4v2.9v0.3v2.7h-3.3v2.8H86v3.2v2.9H86v3.2H86v3\n\tv0.2v3H89v2.9h5.9v17.9h4.7h0h4.7v-17.9h5.9v-2.9h2.9v-3v-0.2v-3h0.1L113.1,114.7L113.1,114.7z M107.2,117.9h-2.9v3v0.2v2.7h-4.7\n\th-4.7v-2.7v-0.2v-3H92v-2.9h2.9v-3.2h4.7h4.7v3.2h2.9V117.9z\"\n                                />\n                              </svg>\n                            </div>\n                            <div className=\"text-Content\">\n                              <div className=\"text-Title\">\n                                100%\n                                <br />\n                                safe\n                              </div>\n                              <p>\n                                No hot wallet, no deposits, no accounts, no\n                                custodial wallets\n                                <i className=\"help-circle\">\n                                  <i\n                                    className=\"fas fa-question-circle protip\"\n                                    data-pt-position=\"top\"\n                                    data-pt-title=\"All transactions take place on-chain via the blockchains swapping through trustless smart contracts\"\n                                    aria-hidden=\"true\"\n                                  ></i>\n                                </i>\n                              </p>\n                            </div>\n                          </div>\n                          <div className=\"swap-Box01\">\n                            <div className=\"icon-Box icon03\">\n                              <svg viewBox=\"0 0 200 200\">\n                                <polygon\n                                  class=\"st0\"\n                                  fill=\"var(--button-bg-color)\"\n                                  points=\"168.8,93.6 168.8,91.3 171.8,91.3 171.8,88.1 165.9,88.1 165.9,85.7 166.3,85.7 166.3,82.5 165.9,82.5 \n\t165.9,79.8 162.9,79.8 162.9,77.1 162.9,76.9 162.9,74.4 162.9,73.9 162.9,71.7 163.4,71.7 163.4,68.5 160.6,68.5 160.6,65.9 \n\t163.4,65.9 163.4,62.7 154.8,62.7 154.8,60.3 154.8,59.8 154.8,57.1 149.1,57.1 149.1,54.4 146.3,54.4 146.3,51.9 146.3,51.3 \n\t146.3,48.7 140.8,48.7 140.8,45.8 137.8,45.8 137.8,43.5 137.8,43 137.8,40.3 123.6,40.3 123.6,37.3 113.3,37.3 113.3,34.7 \n\t110.2,34.7 110.2,31.9 104.5,31.9 104.5,28.9 104,28.9 104,26.5 104.5,26.5 104.5,23.3 96.4,23.3 96.4,26.3 96.4,26.5 96.4,28.9 \n\t90.5,28.9 90.5,31.9 84.9,31.9 84.9,34.7 81.9,34.7 81.9,37.3 79.4,37.3 79.4,40.3 79.4,40.5 79.4,43 79.4,43.5 79.4,45.8 \n\t79.4,46.2 79.4,49 88.1,49 88.1,51.6 88.1,51.9 88.1,54.8 96.4,54.8 96.4,57.6 104,57.6 104,54.8 107.1,54.8 107.1,51.9 107.1,51.6 \n\t107.1,49 107.1,48.7 107.1,46.2 121.3,46.2 121.3,49 129.7,49 129.7,51.9 135.3,51.9 135.3,54.5 138.3,54.5 138.3,57.6 140.8,57.6 \n\t140.8,60.3 146.3,60.3 146.3,62.7 146.3,63 146.3,65.9 149.5,65.9 149.5,68.6 152.1,68.6 152.1,71.7 155.1,71.7 155.1,73.9 \n\t155.1,74.4 155.1,76.9 155.1,77.1 155.1,79.8 155.1,80.1 155.1,82.5 155.1,83 155.1,85.7 157.8,85.7 157.8,88.6 160.6,88.6 \n\t160.6,91.3 160.7,91.3 160.7,93.6 160.7,94 160.7,96.3 160.7,96.8 160.7,99.1 160.7,99.5 160.7,101.9 160.7,102.3 160.7,104.5 \n\t160.6,104.5 160.6,107.7 160.7,107.7 160.7,110.4 160.7,110.9 160.7,113.3 157.7,113.3 157.7,116.2 157.7,116.6 157.7,118.8 \n\t157.7,119.3 157.7,121.7 155,121.7 155,124.3 155,124.9 155,127.2 155,127.6 155,130 152.1,130 152.1,132.7 149.4,132.7 \n\t149.4,135.5 146.5,135.5 146.5,138.2 146.5,138.7 146.5,141 143.7,141 143.7,143.9 138.2,143.9 138.2,146.8 136.3,146.8 \n\t136.3,149.4 132.5,149.4 132.5,152.3 118.6,152.3 118.6,155.1 115.9,155.1 115.9,157.8 108.7,157.8 107.5,157.8 87.6,157.8 \n\t87.6,155.1 87.3,155.1 87.3,152.3 73.5,152.3 73.5,149.4 70.7,149.4 70.7,147.1 70.7,146.5 70.7,143.9 62.3,143.9 62.3,141.4 \n\t62.5,141.4 62.5,138.2 62.3,138.2 62.3,135.4 56.7,135.4 56.7,132.6 53.9,132.6 53.9,130.1 53.9,129.9 53.9,127.3 53.9,126.8 \n\t53.9,124.8 53.9,124.1 53.9,121.6 48.5,121.6 48.5,118.5 45.5,118.5 45.5,117 45.5,115.9 45.5,82.8 48.3,82.8 48.3,80.1 54.1,80.1 \n\t54.1,77 54.1,76.9 54.1,73.8 53.9,73.8 53.9,71.4 53.9,70.9 53.9,68.6 56.7,68.6 56.7,65.8 56.7,65.4 56.7,62.8 62.4,62.8 \n\t62.4,60.1 62.4,59.6 62.4,57.4 65.2,57.4 65.2,54.2 62.4,54.2 62.4,51.4 57.1,51.4 57.1,54.2 54.4,54.2 54.4,56.9 54.4,57.4 \n\t54.4,59.6 51.3,59.6 51.3,62.6 45.8,62.6 45.8,65.4 45.7,65.4 45.7,68.2 45.3,68.2 45.3,70.9 43,70.9 43,73.8 42.8,73.8 42.8,76.9 \n\t40.1,76.9 40.1,80 40,80 37.3,80 37.3,116 37.4,116 37.4,118.5 37.4,119.2 37.4,121.7 43,121.7 43,124.1 43,124.8 43,126.8 \n\t43,127.3 43,130.1 46.6,130.1 46.6,132.6 46.6,133.1 46.6,135.9 51.1,135.9 51.1,138.6 51.5,138.6 51.5,141.4 54.4,141.4 \n\t54.4,143.9 54.4,144.1 54.4,147.1 59.9,147.1 59.9,149.4 59.9,149.7 59.9,152.6 65.3,152.6 65.3,155.4 71.1,155.4 71.1,158.3 \n\t71.4,158.3 71.4,161 82.1,161 82.1,164.1 90.7,164.1 90.7,166.8 96.1,166.8 96.1,169.8 112.7,169.8 112.7,166.8 112.7,166.6 \n\t112.7,164.1 124,164.1 124,161 138,161 138,158.3 138,157.8 138,155.4 140.6,155.4 140.6,152.6 146.2,152.6 146.2,149.9 \n\t146.5,149.9 146.5,147.1 152.1,147.1 152.1,144.2 154.7,144.2 154.7,141.4 155,141.4 155,138.7 157.6,138.7 157.6,135.9 \n\t163.1,135.9 163.1,133.2 163.1,132.7 163.1,130.4 163.1,130 163.1,127.6 163.4,127.6 163.4,124.9 163.4,124.3 163.4,122.1 \n\t163.4,121.7 163.4,119.3 165.8,119.3 165.8,116.6 166.1,116.6 166.1,113.6 166.1,113.3 166.1,110.9 168.8,110.9 168.8,107.7 \n\t168.8,107.7 168.8,105.1 168.8,104.5 168.8,102.3 171.5,102.3 171.5,99.5 171.8,99.5 171.8,96.3 168.8,96.3 168.8,94 \"\n                                />\n                                <path\n                                  class=\"st1\"\n                                  fill=\"var(--button-bg-color)\"\n                                  d=\"M118.2,108.9v-1.1h0v-2.8v-0.5v-2.2v-0.6v-2.7h-11.1v-2.4v-0.6V94v-0.4v-2.4v-0.4v-2.4V88v-2.4h5.8v2.7h2.2v2.7\n\th3v-2.7v-0.6v-2.1h3v-2.8v-0.3v-2.8h-3v-2.8h-11.1v-2.4v-0.5v-2.3v-0.4v-2.8H96.4v2.8v0.4v2.3v0.5v2.4H91v2.8h-0.3v2.8h-3v2.8h-5.4\n\tV88v0.4v2.4v0.4v2.4V94v2.2v0.6v2.6h5.4v1.1h0v2.8v0.5v2.2v0.6v2.7h11.1v2.4v0.6v2.2v0.4v2.4v0.4v2.4v0.4v2.4h-5.8V120h-2.2v-2.7h-3\n\tv2.7v0.6v2.1h-3v2.8v0.3v2.8h3v2.8h11.1v2.4v0.5v2.3v0.4v2.8h10.7V137v-0.4v-2.3v-0.5v-2.4h5.5v-2.8h0.3v-2.8h3v-2.8h5.4v-2.8v-0.4\n\tv-2.4v-0.4v-2.4v-0.4v-2.2v-0.6v-2.6H118.2z M95.7,94v-0.4v-2.4v-0.4v-2.4h3.2v2.4v0.4v2.4V94v2.2h-3.2V94z M110.2,114.3v0.4v2.4\n\tv0.4v2.4H107v-2.4v-0.4v-2.4v-0.4v-2.2h3.2V114.3z\"\n                                />\n                              </svg>\n                            </div>\n                            <div className=\"text-Content\">\n                              <div className=\"text-Title\">\n                                100%\n                                <br />\n                                reimbursement\n                              </div>\n                              <p>\n                                Fees and gas reimbursed fully with SMART{\" \"}\n                                <i className=\"help-circle\">\n                                  <i\n                                    className=\"fas fa-question-circle protip\"\n                                    data-pt-position=\"top-right-corner\"\n                                    data-pt-title=\"#reimburTip\"\n                                    data-pt-width=\"402\"\n                                    aria-hidden=\"true\"\n                                  ></i>\n                                </i>\n                              </p>\n                            </div>\n                            <div id=\"reimburTip\" style={{ display: \"none\" }}>\n                              <p>\n                                At the end of the swap, once the final cost for each user (sender / receiver) is known, the SmartSwap will send both users SMART at the same face value to rebate user’s fees and gas 100% paid throughout the swap. Users must join the bus to receive the reimbursement.\n                              </p>\n                            </div>\n                          </div>\n                          <div className=\"swap-Box01\">\n                            <div className=\"icon-Box icon05\">\n                              <svg viewBox=\"0 0 200 200\">\n                                <path\n                                  class=\"st0\"\n                                  fill=\"var(--button-bg-color)\"\n                                  d=\"M169.2,96.7v-2.3h-2.7v-0.3v-1.9v-0.5v-0.3V89v-0.1v-3.1h-2.7v-2.5v-0.3v-2.9h-0.3v-2.8h-2.5V75v-0.3v-2.3v-0.5\n\tv-2.7h-0.3v-2.5v-0.3V64v-0.5v-2.7h-5.5V58h-2.6v-2.7h-0.3v-2.8h-2.6v-2.9h-5.5v-2.9H144v-2.6h-5.6v-2.9h-2.6v-2.4v-0.4v-2.8h-14\n\tv-3.1h-11.3v-2.5v-0.2v-3H93.9v3h-5.4v2.6h-8.7v3.1H69.2v2.8h-0.4v2.8h-5.7v2.8h-5.4V47v0.3v2.3h-5.5v3v0.2v2.5h-2.9V58h-0.3v2.8\n\th-4.5v2.8V64v2.6h-3.6v2.8v0.4v2.1v0.7V75h-5.5v2.6v0.6v2.3h-0.1v0.2v35.8v0.2h0.1v2.3v0.7v2.5h5.5v2.4v0.7v2.1v0.4v2.8h3.6v2.6v0.4\n\tv2.8h4.5v2.8h0.3v2.8h2.9v2.5v0.2v3h5.5v2.3v0.3v2.9h5.4v2.9h5.7v2.8h0.4v2.8h10.6v3.1h8.7v2.6h5.4v3.1h16.6v-3.1v-0.1v-2.5h11.3\n\tv-3.1h14v-2.8v-0.4v-2.3h2.6V153h5.6v-2.6h0.3v-2.9h5.5v-2.8h2.6v-2.8h0.3v-2.7h2.6v-2.8h5.5v-2.7v-0.5v-2.4v-0.4V128h0.3v-2.6v-0.6\n\tv-2.3v-0.4v-2.3h2.5V117h0.3v-3v-0.3v-2.5h2.7v-3.1v-0.1v-2.3v-0.3V105v-1.9v-0.3h2.7v-2.3h0.3v-0.5v-2.7v-0.5H169.2z M158.4,103.1\n\tv1.9h-0.1v3.2h0.1v2.7v0.5v2.5h-2.9v2.8v0.4v2.3v0.5v2.3h-2.8v2.7v0.6v2.3v0.4v2.4h-2.9v2.7h-2.6v2.8h-2.9v2.7v0.5v2.3h-2.8v2.9H136\n\tv2.9h-2v2.6h-3.8v2.9h-13.9v2.8h-2.7v2.8h-7.2h-1.2H85.4v-2.8h-0.3v-2.8H71.3v-2.8h-2.8v-2.3V147v-2.6H60v-2.5h0.3v-3.2H60v-2.8\n\th-5.6v-2.8h-2.8v-2.6v-0.2v-2.6v-0.4v-2.1v-0.7V122h-5.5V119h-2.9v-1.5V117H46v-3.2h-2.7V83.3H46v-3.2h-2.7v-0.4v-1.5h2.9v-3h5.5\n\tv-2.5v-0.7v-2.1v-0.4v-2.6v-0.2V64h2.8v-2.8H60v-2.8h0.3v-3.2H60v-2.5h8.4v-2.6v-0.6v-2.3h2.8v-2.8h13.8v-2.8h0.3v-2.8h19.8h1.2h7.2\n\tv2.8h2.7v2.8h13.9v2.9h3.8v2.6h2v2.9h5.5v2.9h2.8V58v0.5v2.7h2.9V64h2.6v2.7h2.9v2.5v0.4v2.3v0.5V75h2.8v2.3v0.5v2.3v0.4v2.8h2.9\n\tv2.5v0.5v2.7h-0.1v3.2h0.1v1.9v0.3v0.1v0.3v1.9v0.5v0.1v0.3v1.9v0.3v0.1v0.5v1.9v0.3v0.1V103.1z\"\n                                />\n                                <path\n                                  class=\"st1\"\n                                  fill=\"var(--button-bg-color)\"\n                                  d=\"M115.9,106.2v-1.1h0v-2.8v-0.4v-2.2v-0.5v-2.7h-11.1V94v-0.6v-2.1v-0.5v-2.3v-0.4v-2.4v-0.4v-2.4h5.8v2.7h2.2\n\tv2.6h3v-2.6V85v-2.1h3V80v-0.4v-2.8h-3v-2.8h-11.1v-2.3v-0.5v-2.3v-0.4v-2.8H94.2v2.8v0.4v2.3v0.5v2.3h-5.5v2.8h-0.3v2.8h-3v2.8H80\n\tv2.8v0.4v2.4v0.4v2.3v0.5v2.1V94v2.6h5.4v1.1h0v2.8v0.4v2.2v0.5v2.7h11.1v2.5v0.6v2.2v0.4v2.3v0.4v2.4v0.4v2.4h-5.8v-2.6h-2.2v-2.7\n\th-3v2.7v0.5v2.1h-3v2.9v0.3v2.8h3v2.7h11.1v2.4v0.5v2.3v0.4v2.8h10.7v-2.8v-0.4v-2.3v-0.5v-2.4h5.5V126h0.3v-2.8h3v-2.8h5.4v-2.8\n\tv-0.4v-2.4v-0.4V112v-0.4v-2.2v-0.6v-2.6H115.9z M93.5,91.3v-0.5v-2.3v-0.4v-2.4h3.2v2.4v0.4v2.3v0.5v2.1h-3.2V91.3z M107.9,111.5\n\tv0.4v2.3v0.4v2.4h-3.2v-2.4v-0.4V112v-0.4v-2.2h3.2V111.5z\"\n                                />\n                                <polygon\n                                  class=\"st0\"\n                                  fill=\"var(--button-bg-color)\"\n                                  points=\"169.9,33.4 166.7,33.4 166.7,30.4 163.6,30.4 163.6,33.4 157.3,33.4 157.3,36.5 153.9,36.5 153.9,39.7 \n\t150.8,39.7 150.8,42.8 147.6,42.8 147.6,45.8 144.5,45.8 144.5,49 141.3,49 141.3,52.1 138.3,52.1 138.3,55.1 135.1,55.1 \n\t135.1,58.2 131.9,58.2 131.9,61.2 128.9,61.2 128.9,64.4 125.7,64.4 125.7,67.5 122.7,67.5 122.7,70.5 119.6,70.5 119.6,73.6 \n\t116.3,73.6 116.3,76.6 113.3,76.6 113.3,79.8 110.1,79.8 110.1,82.9 107.1,82.9 107.1,86.1 103.6,86.1 103.6,89.2 100.3,89.2 \n\t100.3,92.2 97.3,92.2 97.3,95.4 94.1,95.4 94.1,98.5 91.1,98.5 91.1,101.5 87.8,101.5 87.8,104.6 84.6,104.6 84.6,107.6 81.5,107.6 \n\t81.5,110.8 78.3,110.8 78.3,113.9 75.3,113.9 75.3,116.9 72.2,116.9 72.2,120 68.9,120 68.9,123 65.9,123 65.9,126.2 62.7,126.2 \n\t62.7,129.3 59.7,129.3 59.7,132.3 56.5,132.3 56.5,135.4 53.3,135.4 53.3,138.4 50.3,138.4 50.3,141.6 47,141.6 47,144.7 44,144.7 \n\t44,147.9 40.5,147.9 40.5,151 37.3,151 37.3,154 34.3,154 34.3,157.2 31,157.2 31,160.3 28,160.3 28,163.5 31,163.5 31,166.4 \n\t34.1,166.4 34.1,163.5 40.2,163.5 40.2,160.4 43.6,160.4 43.6,157.2 46.8,157.2 46.8,154.2 49.8,154.2 49.8,151.1 53,151.1 \n\t53,147.9 56.2,147.9 56.2,144.8 59.6,144.8 59.6,141.6 62.8,141.6 62.8,138.6 65.8,138.6 65.8,135.5 69.1,135.5 69.1,132.5 \n\t71.8,132.5 71.8,129.4 75.2,129.4 75.2,126.2 78.4,126.2 78.4,123.2 81.4,123.2 81.4,120.1 84.7,120.1 84.7,117.1 87.3,117.1 \n\t87.3,114 90.8,114 90.8,110.8 94,110.8 94,107.8 97,107.8 97,104.7 100.3,104.7 100.3,101.7 103.2,101.7 103.2,98.6 106.6,98.6 \n\t106.6,95.4 109.8,95.4 109.8,92.4 112.8,92.4 112.8,89.3 116.1,89.3 116.1,86.1 119.2,86.1 119.2,83 122.6,83 122.6,79.8 \n\t125.8,79.8 125.8,76.8 128.8,76.8 128.8,73.7 132.1,73.7 132.1,70.7 134.8,70.7 134.8,67.6 138.2,67.6 138.2,64.4 141.4,64.4 \n\t141.4,61.4 144.4,61.4 144.4,58.3 147.6,58.3 147.6,55.3 150.4,55.3 150.4,52.2 153.8,52.2 153.8,49 157,49 157,46 160,46 160,42.9 \n\t163.3,42.9 163.3,39.7 166.7,39.7 166.7,36.6 169.9,36.6 \"\n                                />\n                              </svg>\n                            </div>\n                            <div className=\"text-Content\">\n                              <div className=\"text-Title\">\n                                100% <br /> free license\n                              </div>\n                              <p>\n                                Build your own SmartSwap at no cost or become an\n                                affiliate\n                              </p>\n                            </div>\n                          </div>\n                          <div className=\"swap-Box01\">\n                            <div className=\"icon-Box icon06\">\n                              <svg viewBox=\"0 0 200 200\">\n                                <path\n                                  class=\"st0\"\n                                  fill=\"var(--button-bg-color)\"\n                                  d=\"M150.2,56.9v-3.6h-2.7v-2.7v-0.3v-2.9h-2.7v-3.1h-7.7v-2.5h-7.4v-1.9v-0.6v-2.6h-29.6H100H70.2v2.6v0.6v1.9\n\th-7.4v2.5h-7.7v3.1h-2.7v2.9v0.3v2.7h-2.7v3.6h-2.7v50.9h2.7v2.8h2.7v8.3h0.6v2.7h2.1v2.2v0.5v2.7h2v2.4v0.7v2.3v0.2v3H63v2.7v0.3\n\tv2.9h2.3v2.5h4.9v2.6v3.2h5.7v2.8H79v3.1h3.2v3h2.3v2.7h3.1v2.7H100h0.1h12.3v-2.7h3.1v-2.7h2.3v-3h3.2v-3.1h3.1v-2.8h5.7v-3.2v-2.6\n\th4.9v-2.5h2.3v-2.9v-0.3v-2.7h5.8v-3v-0.2v-2.3v-0.7v-2.4h2v-2.7v-0.5v-2.2h2.1V119h0.6v-8.3h2.7v-2.8h2.7V56.9H150.2z M144.3,118.5\n\tH137v2.7v0.5v2.2v0.5v2.6v0.1v2.4h-1.9v3h-5.3v3.1v0.1v2.7v0.3v2.2h-7.4v2.6v0.6v2.6h-3.3v2.8h-3.6v3.1v0.1v2.9h-8l0-14.6h-2.3V139\n\tH100H100h-5.2v2.1h-2.3l0,14.6h-8v-2.9v-0.1v-3.1h-3.6v-2.8h-3.3v-2.6v-0.6v-2.6h-7.4v-2.2v-0.3v-2.7v-0.1v-3.1h-5.3v-3H63v-2.4V127\n\tv-2.6v-0.5v-2.2v-0.5v-2.7h-7.3V50.6h7.1v-3.1h4.7V45H100h0.5h32v2.5h4.7v3.1h7.1V118.5z\"\n                                />\n                                <g>\n                                  <polygon\n                                    class=\"st1\"\n                                    fill=\"var(--button-bg-color)\"\n                                    points=\"65.3,69.7 69.8,69.7 69.8,67 77.6,67 77.6,69.7 80.4,69.7 80.4,72.4 82.7,72.4 82.7,75.3 85.1,75.3 \n\t\t85.1,78.2 85.2,78.2 85.2,81.2 77.6,81.2 77.6,78.3 70.2,78.3 70.2,81.2 65.3,81.2 65.3,83.7 65.3,84.4 65.3,86.9 70.2,86.9 \n\t\t70.2,89.6 77.6,89.6 77.6,86.9 85.1,86.9 85.1,84.4 85.2,84.4 85.2,81.3 92.8,81.3 92.8,78.2 92.8,78.1 92.8,75.3 92.8,75 \n\t\t92.8,72.4 92.8,72.1 92.8,69.7 92.8,69.2 92.8,66.5 85.1,66.5 85.1,63.8 82.7,63.8 82.7,61.5 79.7,61.5 79.7,58.9 72.9,58.9 \n\t\t72.9,61.5 70.2,61.5 70.2,63.8 67.7,63.8 67.7,66.5 65.3,66.5 65.3,68.8 62.8,68.8 62.8,72 65.3,72 \t\"\n                                  />\n                                  <polygon\n                                    class=\"st1\"\n                                    fill=\"var(--button-bg-color)\"\n                                    points=\"134.7,68.8 134.7,66.5 132.3,66.5 132.3,63.8 129.8,63.8 129.8,61.5 127.1,61.5 127.1,58.9 \n\t\t120.3,58.9 120.3,61.5 117.3,61.5 117.3,63.8 114.9,63.8 114.9,66.5 107.2,66.5 107.2,69.2 107.2,69.7 107.2,72.1 107.2,72.4 \n\t\t107.2,75 107.2,75.3 107.2,78.1 107.2,78.2 107.2,81.3 114.8,81.3 114.8,84.4 114.9,84.4 114.9,86.9 122.4,86.9 122.4,89.6 \n\t\t129.8,89.6 129.8,86.9 134.7,86.9 134.7,84.4 134.7,83.7 134.7,81.2 129.8,81.2 129.8,78.3 122.4,78.3 122.4,81.2 114.8,81.2 \n\t\t114.8,78.2 114.9,78.2 114.9,75.3 117.3,75.3 117.3,72.4 119.6,72.4 119.6,69.7 122.4,69.7 122.4,67 130.2,67 130.2,69.7 \n\t\t134.7,69.7 134.7,72 137.2,72 137.2,68.8 \t\"\n                                  />\n                                  <polygon\n                                    class=\"st1\"\n                                    fill=\"var(--button-bg-color)\"\n                                    points=\"132.2,111.1 129.8,111.1 129.8,113.7 127.4,113.7 127.4,116.4 124.9,116.4 124.9,119.5 107.2,119.5 \n\t\t107.2,116.9 107.2,116.4 107.2,114.3 107.2,113.7 107.2,111.1 100,111.1 100,111.1 92.8,111.1 92.8,113.7 92.8,114.3 92.8,116.4 \n\t\t92.8,116.9 92.8,119.5 75.1,119.5 75.1,116.4 72.6,116.4 72.6,113.7 70.2,113.7 70.2,111.1 67.8,111.1 67.8,108.3 63,108.3 \n\t\t63,111.5 65.6,111.5 65.6,114.3 67.8,114.3 67.8,116.9 70.2,116.9 70.2,119.5 70.2,119.6 70.2,122.5 70.2,122.7 70.2,125.7 \n\t\t73.9,125.7 73.9,128.9 93.7,128.9 93.7,125.7 100,125.7 100,125.7 106.3,125.7 106.3,128.9 126.1,128.9 126.1,125.7 129.8,125.7 \n\t\t129.8,122.7 129.8,122.5 129.8,119.6 129.8,119.5 129.8,116.9 132.2,116.9 132.2,114.3 134.4,114.3 134.4,111.5 137,111.5 \n\t\t137,108.3 132.2,108.3 \t\"\n                                  />\n                                </g>\n                              </svg>\n                            </div>\n                            <div className=\"text-Content\">\n                              <div className=\"text-Title\">\n                                100% <br /> anonymous\n                              </div>\n                              <p>\n                                Complete privacy guard with no KYC / AML needed{\" \"}\n                              </p>\n                            </div>\n                          </div>\n                          <div className=\"swap-Box01\">\n                            <div className=\"icon-Box icon07\">\n                              <svg viewBox=\"0 0 200 200\">\n                                <g>\n                                  <path\n                                    class=\"st0\"\n                                    fill=\"var(--button-bg-color)\"\n                                    d=\"M155.9,51.4v-2.7h-2.7v-2.7h-2.2v-2.3H71.2v5h-2.2v5h-2.4v72h2.2v4.9h2.5v2.4h6.8v2.4h70.2V133h10v-2.4v-0.5\n\t\tv-1.5v-2.9V51.4H155.9z M73.9,125.7V55.8v-2.1v-2.3h75.8h1.2v74.3H73.9z\"\n                                  />\n                                  <polygon\n                                    class=\"st1\"\n                                    fill=\"var(--button-bg-color)\"\n                                    points=\"93.8,140.1 83.7,140.1 83.7,155.3 49,155.3 49,119.8 49,118.4 63.8,118.4 63.8,111 49,111 49,115.6 \n\t\t44.3,115.6 44.3,118.4 41.8,118.4 41.8,155.3 44.3,155.3 44.3,158.2 49,158.2 49,162.8 86.2,162.8 86.2,158.2 91.2,158.2 \n\t\t91.2,155.3 93.8,155.3 \t\"\n                                  />\n                                </g>\n                              </svg>\n                            </div>\n                            <div className=\"text-Content\">\n                              <div className=\"text-Title\">\n                                100% <br /> scalable\n                              </div>\n                              <p>\n                                No LP, no pools, true decentralized CEX and OTC\n                                liquidity bridge{\" \"}\n                              </p>\n                            </div>\n                          </div>\n                          <div className=\"swap-Box01\">\n                            <div className=\"icon-Box icon09\">\n                              <svg viewBox=\"0 0 200 200\">\n                                <g>\n                                  <g>\n                                    <polygon\n                                      class=\"st0\"\n                                      fill=\"var(--button-bg-color)\"\n                                      points=\"70.1,81.8 70.1,84.9 70.1,88.1 72.7,88.1 72.7,91.2 75.2,91.2 75.2,94 75.2,94.1 75.2,96.9 \n\t\t\t82.9,96.9 82.9,94.1 82.9,94 82.9,90.9 82.4,90.9 82.4,88 79.7,88 79.7,84.9 79.7,81.7 77.9,81.7 77.9,78.6 75.2,78.6 75.2,76.1 \n\t\t\t64.9,76.1 64.9,79.3 68.2,79.3 68.2,81.8 \t\t\"\n                                    />\n                                    <rect\n                                      x=\"109.4\"\n                                      y=\"103.7\"\n                                      class=\"st0\"\n                                      fill=\"var(--button-bg-color)\"\n                                      width=\"14.6\"\n                                      height=\"8.8\"\n                                    />\n                                    <polygon\n                                      class=\"st0\"\n                                      fill=\"var(--button-bg-color)\"\n                                      points=\"77.3,123.4 75.2,123.4 75.2,126.1 75.2,130.9 70.3,130.9 70.3,138 70.3,143.3 68.2,143.3 68.2,145.5 \n\t\t\t77.3,145.5 77.3,143.3 77.3,138 80.2,138 80.2,130.9 85.2,130.9 85.2,126.1 85.2,123.4 87.6,123.4 87.6,120.4 77.3,120.4 \t\t\"\n                                    />\n                                  </g>\n                                  <path\n                                    class=\"st1\"\n                                    fill=\"var(--button-bg-color)\"\n                                    d=\"M77.8,53.7v-3.1h-5v-3.1v-3.2h-4.9v-2.8h-3v-2.1v-0.8v-2.4H40.5v2.4v0.8v2.1H38v2.8h-7.4v2.6v0.6V50v0.1v3v0.1\n\t\tv2.9v0.2v12.8h4.9V74h5v2.7h7.2v4.2h17.2v-4.2h5.3v-3.1h2.6v-4.3h2.7v-3h2.4v-3v-0.2v-3v-3.2L77.8,53.7L77.8,53.7z M68.3,60.1v3\n\t\tv0.2v2.8h-2.5v3h-0.9v2.3h-4.5V74H48.3h-0.5v-4.9h-7.2V56.3v-0.2v-2.9H43v-3.1h4.7v-2.6v-0.6v-2.2h14.9v2.8v3.1v0.1v3.1h5.7v3.1\n\t\tV60.1z\"\n                                  />\n                                  <path\n                                    class=\"st1\"\n                                    fill=\"var(--button-bg-color)\"\n                                    d=\"M109.4,103.7v-2.2h-3.6v-2.2v-2.3h-3.6v-2H100v-1.5v-0.6V91H82.3v1.7v0.6v1.5h-1.8v2h-5.4v1.9v0.4v1.8v0.1v2.2\n\t\tv0.1v2.1v0.1v9.3h3.6v3.6h3.6v2h5.2v3H100v-3h3.8v-2.2h1.9V115h2v-2.2h1.7v-2.2v-0.1v-2.2V106L109.4,103.7L109.4,103.7z\n\t\t M102.5,108.3v2.2v0.1v2h-1.8v2.2H100v1.6h-3.3v1.9h-8.8h-0.4v-3.6h-5.2v-9.3v-0.1v-2.1h1.8v-2.2h3.4v-1.9v-0.4v-1.6h10.8v2v2.2\n\t\tv0.1v2.2h4.1v2.2V108.3z\"\n                                  />\n                                  <path\n                                    class=\"st1\"\n                                    fill=\"var(--button-bg-color)\"\n                                    d=\"M176.4,101.7V98h-5.6v-3.7v-3.8h-5.4v-3.3h-3.3v-2.5v-1v-2.9H135v2.9v1v2.5h-2.8v3.3H124v3.1v0.7v3v0.1v3.6\n\t\tv0.1v3.4v0.2V120h5.5v5.8h5.5v3.2h8v5h19.1v-5h5.9v-3.7h2.9v-5.1h3v-3.6h2.7v-3.6v-0.2v-3.6v-3.8v-3.8H176.4z M165.9,109.3v3.6v0.2\n\t\tv3.3h-2.8v3.6h-1v2.7h-5v3.1h-13.6H143V120h-8v-15.2v-0.2v-3.4h2.8v-3.7h5.2v-3.1v-0.7V91h16.6v3.3V98v0.1v3.7h6.3v3.7V109.3z\"\n                                  />\n                                  <path\n                                    class=\"st1\"\n                                    fill=\"var(--button-bg-color)\"\n                                    d=\"M79.2,154.2v-1.5h-2.3v-1.5v-1.6h-2.3v-1.4h-1.4v-1v-0.4v-1.2H61.8v1.2v0.4v1h-1.2v1.4h-3.5v1.3v0.3v1.2v0v1.5\n\t\tv0v1.4v0.1v6.4h2.3v2.4h2.3v1.3h3.4v2.1h8v-2.1h2.5v-1.5h1.2V162h1.3v-1.5h1.1V159v-0.1v-1.5v-1.6L79.2,154.2L79.2,154.2z\n\t\t M74.8,157.4v1.5v0.1v1.4h-1.2v1.5h-0.4v1.1h-2.1v1.3h-5.7h-0.2v-2.4h-3.4v-6.4v-0.1V154h1.2v-1.5h2.2v-1.3v-0.3v-1.1h7v1.4v1.5v0\n\t\tv1.5h2.7v1.5V157.4z\"\n                                  />\n                                </g>\n                              </svg>\n                            </div>\n                            <div className=\"text-Content\">\n                              <div className=\"text-Title\">\n                                100% <br /> decentralized\n                              </div>\n                              <p>\n                                DAO approach with a closed system lacking any\n                                single point of failure privilege{\" \"}\n                              </p>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {/* <!--======================= SWAP BLOCK END =====================--> */}\n                </div>\n\n                <div\n                  className=\"mainBlock\"\n                  style={\n                    this.state.cloneData.bgimage\n                      ? { paddingTop: 0, display: \"none\" }\n                      : { paddingTop: 0 }\n                  }\n                >\n                  {/* <div className=\"error-Msg\">\n                            <label>\n                                For BSC testnet use this RPC\n                                URL:https://data-seed-prebsc-2-s3.binance.org:8545\n              </label>\n                        </div> */}\n                  {/* <br />\n                        <br /> */}\n                  {/* <!--======================= SWAP BLOCK START =====================--> */}\n                  <div className=\"swap-Block\">\n                    <div className=\"swap-textBox\" style={{ paddingTop: 0 }}>\n                      <div className=\"container-Grid\" onPointerEnter={() => { this.updateTotalAmounts() }}>\n                        <div\n                          className=\"ssBTNbar01 wow fadeInUp\" data-wow-delay=\"0.2s\"\n                          style={{ justifyContent: \"center\" }}\n                        >\n                          <Link to=\"/ownLicence\" className=\"ssBtn01\">\n                            GET YOUR OWN LICENSE FOR FREE{\" \"}\n                          </Link>\n                          <Link\n                            to=\"/\"\n                            className=\"ssBtn02\"\n                            onClick={() => {\n                              // this.openPopup(\"LiquidityProvider\");\n                            }}\n                            disabled=\"true\"\n                          >\n                            <span>BECOME A SWAP PROVIDER</span>{\" \"}\n                          </Link>\n                        </div>\n                        <div className=\"ssTitle01 wow fadeInUp\" data-wow-delay=\"0.2s\">\n                          Alternative to AMMs with zero pools or LPs needed\n                        </div>\n                        <div className=\"ssText01 wow fadeInUp\" data-wow-delay=\"0.4s\" style={{ marginTop: \"10px\" }}>\n                          SmartSwap is the world's first smart decentralized\n                          exchange (SDEX) providing a one-click slippage-free\n                          cross-chain swap in a simple layer that decentralizes\n                          the access to all CEX (Centralize exchanges) and OTC\n                          (Over-the-counter) industry. The best way to think of\n                          SDEX is like PayPal creating a simple one-click layer\n                          on top of banks to send and receive funds.\n                        </div>\n                        <div className=\"ssTitle01 wow fadeInRight\" data-wow-delay=\"0.2s\">Supporting blockchains</div>\n                        <Carousel className=\"wow fadeInRight\" data-wow-delay=\"0.3s\"\n                          swipeable={false}\n                          draggable={false}\n                          showDots={false}\n                          responsive={responsive}\n                          ssr={true} // means to render carousel on server-side.\n                          infinite={true}\n                          autoPlay={false}\n                          autoPlaySpeed={5000}\n                          keyBoardControl={true}\n                          customTransition=\"all 1sec\"\n                          transitionDuration={900}\n                          containerClass=\"carousel-container ani-1\"\n                          // removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\n                          deviceType={this.props.deviceType}\n                          dotListClass=\"custom-dot-list-style\"\n                          itemClass=\"carousel-item-padding-40-px\"\n                        >\n                          <div className=\"sbSlide\">\n                            {\" \"}\n                            <img src={SBLogo01} alt=\"\" />{\" \"}\n                          </div>\n                          <div className=\"sbSlide\">\n                            {\" \"}\n                            <img src={SBLogo02} alt=\"\" />{\" \"}\n                          </div>\n                          <div className=\"sbSlide disable\">\n                            {\" \"}\n                            <img src={SBLogo03} alt=\"\" />{\" \"}\n                          </div>\n                          <div className=\"sbSlide disable\">\n                            {\" \"}\n                            <img src={SBLogo04} alt=\"\" />{\" \"}\n                          </div>\n                          <div className=\"sbSlide disable\">\n                            {\" \"}\n                            <img src={SBLogo05} alt=\"\" />{\" \"}\n                          </div>\n                          <div className=\"sbSlide disable\">\n                            {\" \"}\n                            <img src={SBLogo06} alt=\"\" />{\" \"}\n                          </div>\n                          <div className=\"sbSlide disable\">\n                            {\" \"}\n                            <img src={SBLogo07} alt=\"\" />{\" \"}\n                          </div>\n                          <div className=\"sbSlide disable\">\n                            {\" \"}\n                            <img src={SBLogo08} alt=\"\" />{\" \"}\n                          </div>\n                          <div className=\"sbSlide disable\">\n                            {\" \"}\n                            <img src={SBLogo09} alt=\"\" />{\" \"}\n                          </div>\n                          <div className=\"sbSlide disable\">\n                            {\" \"}\n                            <img src={SBLogo010} alt=\"\" />{\" \"}\n                          </div>\n                          <div className=\"sbSlide disable\">\n                            {\" \"}\n                            <img src={SBLogo011} alt=\"\" />{\" \"}\n                          </div>\n                          <div className=\"sbSlide disable\">\n                            {\" \"}\n                            <img src={SBLogo03} alt=\"\" />{\" \"}\n                          </div>\n                          <div className=\"sbSlide disable\">\n                            {\" \"}\n                            <img src={SBLogo04} alt=\"\" />{\" \"}\n                          </div>\n                          <div className=\"sbSlide disable\">\n                            {\" \"}\n                            <img src={SBLogo05} alt=\"\" />{\" \"}\n                          </div>\n                          <div className=\"sbSlide disable\">\n                            {\" \"}\n                            <img src={SBLogo06} alt=\"\" />{\" \"}\n                          </div>\n                          <div className=\"sbSlide disable\">\n                            {\" \"}\n                            <img src={SBLogo07} alt=\"\" />{\" \"}\n                          </div>\n                          <div className=\"sbSlide disable\">\n                            {\" \"}\n                            <img src={SBLogo08} alt=\"\" />{\" \"}\n                          </div>\n                          <div className=\"sbSlide disable\">\n                            {\" \"}\n                            <img src={SBLogo09} alt=\"\" />{\" \"}\n                          </div>\n                          <div className=\"sbSlide disable\">\n                            {\" \"}\n                            <img src={SBLogo010} alt=\"\" />{\" \"}\n                          </div>\n                          <div className=\"sbSlide disable\">\n                            {\" \"}\n                            <img src={SBLogo011} alt=\"\" />{\" \"}\n                          </div>\n                        </Carousel>\n\n                        <div className=\"ssTitle01 wow fadeInLeft\" data-wow-delay=\"0.2s\">\n                          SMART Tokenomics in Action\n                        </div>\n                        <div className=\"ssText01 wow fadeInLeft\" data-wow-delay=\"0.4s\" style={{ marginTop: \"10px\" }}>\n                          SmartSwap does not utilize LPs or pools therefore fees\n                          are used to support SMART through automatic buybacks.{\" \"}\n                        </div>\n\n                        <div class=\"stActMBX\">\n                          <div class=\"stActSbx01 wow zoomIn\" data-wow-delay=\"0.1s\">\n                            {\" \"}\n                            <span>\n                              Total Amount Swapped\n                            </span>\n                            <div className=\"container\">\n                              $<AnimatedNumber\n                                includeComma\n                                animateToNumber={this.state.amounts.totalAmountSwapped}\n                                fontStyle={{ fontSize: 25 }}\n                                configs={[{ \"mass\": 1, \"tension\": 140, \"friction\": 126 }, { \"mass\": 1, \"tension\": 130, \"friction\": 114 }, { \"mass\": 1, \"tension\": 150, \"friction\": 112 }, { \"mass\": 1, \"tension\": 130, \"friction\": 120 }]}\n                              ></AnimatedNumber>\n                            </div>{\" \"}\n                          </div>\n                          <div class=\"stActSbx01 wow zoomIn\" data-wow-delay=\"0.2s\">\n                            {\" \"}\n                            <span>Fees Generated</span>\n                            <div className=\"container\">\n                              $<AnimatedNumber\n                                includeComma\n                                animateToNumber={this.state.amounts.feesGenerated}\n                                fontStyle={{ fontSize: 25 }}\n                                configs={[{ \"mass\": 1, \"tension\": 140, \"friction\": 126 }, { \"mass\": 1, \"tension\": 130, \"friction\": 114 }, { \"mass\": 1, \"tension\": 150, \"friction\": 112 }, { \"mass\": 1, \"tension\": 130, \"friction\": 120 }]}\n                              ></AnimatedNumber>\n                            </div>{\" \"}\n                          </div>\n                          <div class=\"stActSbx01 wow zoomIn\" data-wow-delay=\"0.3s\">\n                            {\" \"}\n                            <span>\n                              Smart Bought and Burned\n                            </span>\n                            <div className=\"container\">\n                              <AnimatedNumber\n                                includeComma\n                                animateToNumber={this.state.amounts.smartBoughtBurned}\n                                fontStyle={{ fontSize: 25 }}\n                                configs={[{ \"mass\": 1, \"tension\": 140, \"friction\": 126 }, { \"mass\": 1, \"tension\": 130, \"friction\": 114 }, { \"mass\": 1, \"tension\": 150, \"friction\": 112 }, { \"mass\": 1, \"tension\": 130, \"friction\": 120 }]}\n                              ></AnimatedNumber>\n                            </div>{\" \"}\n                          </div>\n                          <div class=\"stActSbx01 wow zoomIn\" data-wow-delay=\"0.4s\">\n                            {\" \"}\n                            <span>Total Fees Reimbursed</span>\n                            <div className=\"container\">\n                              $<AnimatedNumber\n                                includeComma\n                                animateToNumber={this.state.amounts.totalFeesReimbursed}\n                                fontStyle={{ fontSize: 25 }}\n                                configs={[{ \"mass\": 1, \"tension\": 140, \"friction\": 126 }, { \"mass\": 1, \"tension\": 130, \"friction\": 114 }, { \"mass\": 1, \"tension\": 150, \"friction\": 112 }, { \"mass\": 1, \"tension\": 130, \"friction\": 120 }]}\n                              ></AnimatedNumber> </div>{\" \"}\n                          </div>\n                          <div class=\"stActSbx01 wow zoomIn\" data-wow-delay=\"0.5s\">\n                            {\" \"}\n                            <span>\n                              Total reimbursement staking\n                            </span>\n                            <div className=\"container\">\n                              <AnimatedNumber\n                                includeComma\n                                animateToNumber={this.state.amounts.totalReimbursementStaking}\n                                fontStyle={{ fontSize: 25 }}\n                                configs={[{ \"mass\": 1, \"tension\": 140, \"friction\": 126 }, { \"mass\": 1, \"tension\": 130, \"friction\": 114 }, { \"mass\": 1, \"tension\": 150, \"friction\": 112 }, { \"mass\": 1, \"tension\": 130, \"friction\": 120 }]}\n                              ></AnimatedNumber>\n                            </div>{\" \"}\n                          </div>\n                        </div>\n\n                        <div className=\"ssTitle01 wow fadeInLeft\" data-wow-delay=\"0.2s\">\n                          SmartSwap AMA Series:\n                          <span>\n                            Alon Goren (Draper-Goren-Holm) and Yoda (Jude) Regev\n                          </span>\n                        </div>\n                        <div className=\"videoMcontent wow fadeInLeft\" data-wow-delay=\"0.4s\">\n                          <div className=\"video-responsive\">\n                            <iframe\n                              width=\"560\"\n                              height=\"315\"\n                              src=\"https://www.youtube.com/embed/LKtJ6oaFak0\"\n                              title=\"YouTube video player\"\n                              frameborder=\"0\"\n                              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                              allowfullscreen\n                            ></iframe>\n                          </div>\n                        </div>\n                        <div\n                          className=\"ssBTNbar01 wow fadeInUp\" data-wow-delay=\"0.2s\"\n                          style={{ justifyContent: \"center\" }}\n                        >\n                          <Link to=\"/ownLicence\" className=\"ssBtn01\">\n                            GET YOUR OWN LICENSE FOR FREE{\" \"}\n                          </Link>\n                          <Link\n                            to=\"/\"\n                            className=\"ssBtn02\"\n                            onClick={() => {\n                              // this.openPopup(\"LiquidityProvider\");\n                            }}\n                          >\n                            <span>BECOME A SWAP PROVIDER</span>{\" \"}\n                          </Link>\n                        </div>\n                        {/* <div className=\"ssTitle01\">Market Prices </div>\n                                    <div className=\"ssSearchBox\">\n                                        <div className=\"ssSearchMBox01\">\n                                            <i class=\"fas fa-search\"></i>\n                                            <input\n                                                type=\"text\"\n                                                placeholder=\"Search coin name or token name\"\n                                                onChange={(e) => this.tableSearchHandler(e)}\n                                            />\n                                        </div>\n                                        <div className=\"ssSearchMBox02\">\n                                            Choose amount of token to compare prices\n                      <div class=\"sswapSelectbx\">\n                                                <select\n                                                    name=\"slct\"\n                                                    id=\"slct\"\n                                                    onChange={(e) => this.dropDownSearch(e)}\n                                                >\n                                                    <option value=\"1\">1</option>\n                                                    <option value=\"100\">100</option>\n                                                    <option value=\"1000\">1000</option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"sswapTable01\">\n                                        <table\n                                            width=\"100%\"\n                                            border=\"0\"\n                                            cellspacing=\"0\"\n                                            cellpadding=\"10\"\n                                        >\n                                            <tbody>\n                                                <tr>\n                                                    <th\n                                                        colspan=\"3\"\n                                                        align=\"left\"\n                                                        valign=\"middle\"\n                                                        scope=\"col\"\n                                                        style={{ backgroundColor: '#0e0424' }}\n                                                    >\n                                                        <div className=\"TableBTN01\">\n                                                            Select: <button className=\"active\">BUY</button>{' '}\n                                                            <button>SELL</button>\n                                                        </div>\n                                                    </th>\n                                                    <th align=\"left\" valign=\"middle\" scope=\"col\">\n                                                        Smart.Exchange\n                          </th>\n                                                    <th align=\"left\" valign=\"middle\" scope=\"col\">\n                                                        CoinGecko\n                          </th>\n                                                    <th align=\"left\" valign=\"middle\" scope=\"col\">\n                                                        CoinMarketCap\n                          </th>\n                                                    <th align=\"left\" valign=\"middle\" scope=\"col\">\n                                                        UniSwap\n                          </th>\n                                                    <th align=\"left\" valign=\"middle\" scope=\"col\">\n                                                        PancakeSwap\n                          </th>\n                                                </tr>\n                                                <tr>\n                                                    <td\n                                                        width=\"50\"\n                                                        align=\"center\"\n                                                        valign=\"middle\"\n                                                        scope=\"col\"\n                                                    >\n                                                        #\n                          </td>\n                                                    <td align=\"left\" valign=\"middle\" scope=\"col\">\n                                                        <b>Coin</b>\n                                                    </td>\n                                                    <td align=\"left\" valign=\"middle\" scope=\"col\">\n                                                        <b>Symbol</b>\n                                                    </td>\n                                                    <td align=\"left\" valign=\"middle\">\n                                                        <strong>Final Cost</strong>\n                                                    </td>\n                                                    <td align=\"left\" valign=\"middle\">\n                                                        <strong>Final Cost</strong>\n                                                    </td>\n                                                    <td align=\"left\" valign=\"middle\">\n                                                        <strong>Final Cost</strong>\n                                                    </td>\n                                                    <td align=\"left\" valign=\"middle\">\n                                                        <strong>Final Cost</strong>\n                                                    </td>\n                                                    <td align=\"left\" valign=\"middle\">\n                                                        <strong>Final Cost</strong>\n                                                    </td>\n                                                </tr>\n\n                                                {this.state.tableDataToDisplay.length > 0 &&\n                                                    this.state.tableDataToDisplay.map((data, i) => {\n                                                        return (\n                                                            <tr key={i}>\n                                                                <td\n                                                                    data-label=\"#\"\n                                                                    align=\"center\"\n                                                                    valign=\"middle\"\n                                                                >\n                                                                    {i + 1}\n                                                                </td>\n                                                                <td\n                                                                    data-label=\"Coin\"\n                                                                    align=\"left\"\n                                                                    valign=\"middle\"\n                                                                >\n                                                                    <div className=\"coinBX\">\n                                                                        {' '}\n                                                                        <i>\n                                                                            <img\n                                                                                src={`images/coins/${data.fullName}.png`}\n                                                                            />\n                                                                        </i>{' '}\n                                                                        {data.fullName}{' '}\n                                                                    </div>\n                                                                </td>\n                                                                <td\n                                                                    data-label=\"Symbol\"\n                                                                    align=\"left\"\n                                                                    valign=\"middle\"\n                                                                >\n                                                                    {data.shortName}\n                                                                </td>\n                                                                <td align=\"left\" valign=\"middle\">\n                                                                    ${parseFloat(data.priceUsd).toFixed(4)}\n                                                                </td>\n                                                                <td align=\"left\" valign=\"middle\">\n                                                                    ${parseFloat(data.coingeckoValue).toFixed(4)}\n                                                                </td>\n                                                                <td align=\"left\" valign=\"middle\">\n                                                                    $\n                                  {parseFloat(data.coinMarketCapValue).toFixed(\n                                                                    4\n                                                                )}\n                                                                </td>\n                                                                <td align=\"left\" valign=\"middle\">\n                                                                    ${parseFloat(data.uniswapValue).toFixed(4)}\n                                                                </td>\n                                                                <td align=\"left\" valign=\"middle\">\n                                                                    $\n                                  {parseFloat(\n                                                                    data.pancakeswapValue.usdValue\n                                                                ).toFixed(4)}\n                                                                </td>\n                                                            </tr>\n                                                        );\n                                                    })}\n                                                \n                                            </tbody>\n                                        </table>\n                                    </div>\n                                    <div className=\"sswapInfoBXM\">\n                                        <div className=\"sswapText\">\n                                            All prices before fees and reimbursement\n                    </div>\n\n                                        <div className=\"sswapPowerdBOX\">\n                                            Powered by{' '}\n                                            <a href=\"#\">\n                                                {' '}\n                                                <img src=\"images/coinGecko-logo.png\"></img>{' '}\n                                            </a>{' '}\n                      |\n                      <a href=\"#\">\n                                                {' '}\n                                                <img src=\"images/coinMarketcap-logo01.png\"></img>{' '}\n                                            </a>{' '}\n                      |\n                      <a href=\"#\">\n                                                {' '}\n                                                <img src=\"images/uniswap-logo.png\"></img>{' '}\n                                            </a>{' '}\n                      |\n                      <a href=\"#\">\n                                                {' '}\n                                                <img src=\"images/pancake-logo.png\"></img>{' '}\n                                            </a>\n                                        </div>\n                                    </div>\n                                    <div className=\"sswapBreadCome\">\n                                        <a href=\"#\">\n                                            <i class=\"fas fa-angle-left\"></i>\n                                        </a>\n                                        <a href=\"#\" className=\"active\">\n                                            1\n                    </a>\n                                        <a href=\"#\">2</a>\n                                        <a href=\"#\">3</a>\n                                        <a href=\"#\">4</a>\n                                        <a href=\"#\">5</a>\n                    ...\n                    <a href=\"#\">45</a>\n                                        <a href=\"#\">\n                                            <i class=\"fas fa-angle-right\"></i>\n                                        </a>\n                                    </div> */}\n\n                        {/* <div className=\"ssBTNbar01\">\n                                        <Link to=\"/ownLicence\" className=\"ssBtn02\">\n                                            Get your own free license{' '}\n                                        </Link>\n                                        <Link to=\"/SmartSwapLicence\" className=\"ssBtn03\">\n                                            become a partner{' '}\n                                        </Link>\n                                    </div> */}\n\n                        <div className=\"ssTitle01 wow fadeInUp\" data-wow-delay=\"0.2s\">License Partners</div>\n                        <div\n                          className=\"VPMainBX wow fadeInUp\" data-wow-delay=\"0.4s\"\n                          style={{\n                            justifyContent: \"center\",\n                            marginBottom: \"80px\",\n                          }}\n                        >\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img src=\"images/lp-logo01.png\" alt=\"\" />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img src=\"images/lp-logo02.png\" alt=\"\" />{\" \"}\n                          </div>\n                        </div>\n\n                        <div className=\"ssTitle01 wow fadeInUp\" data-wow-delay=\"0.2s\">Venture Partners</div>\n\n                        <div className=\"VPMainBX wow fadeInUp\" data-wow-delay=\"0.4s\">\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-01.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-02.png?v1\"\n                              alt=\"\"\n                            />\n                            Hassan (Hatu) Sheikh{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-03.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-04.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-05.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-06.png\"\n                              alt=\"\"\n                            />{\" \"}\n                            Andrea Castiglione\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-07.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-08.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-09.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-010.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-011.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-012.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-013.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-014.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-015.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-016.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-017.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-018.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-019.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-020.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-021.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-022.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-023.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-024.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-025.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-026.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-027.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-028.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-029.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-030.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-031V2.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-032.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-033.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-034.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-035.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-036.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-037.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-038.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-039.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                          <div className=\"VPSubBX01\">\n                            {\" \"}\n                            <img\n                              src=\"images/venture-partners/vpICON-040.png\"\n                              alt=\"\"\n                            />{\" \"}\n                          </div>\n                        </div>\n                        <div className=\"smrtSwapNewsletterBX wow fadeInUp\" data-wow-delay=\"0.2s\">\n                          {/* <button className='smrtNLBTN01'>Connect Your Wallet To Become An Affiliate</button> */}\n\n                          {/* <div className=\"smrtSwapNewslSBX\">\n                            <input\n                              type=\"text\"\n                              value=\"smartswap.exchange/ref/917Ak92j06noRka\"\n                            />\n                            <button className=\"submitBTN\">COPY LINK</button>\n                          </div> */}\n                          {/* <div className=\"smrtSwapInfoSBX\">\n                            Share your link and receive 0.1% with SAMRT tokens\n                            for each swap you refer{\" \"}\n                            <i className=\"help-circle\">\n                              {\" \"}\n                              <i\n                                className=\"fas fa-question-circle protip\"\n                                data-pt-position=\"top\"\n                                data-pt-title=\"Help Text\"\n                                aria-hidden=\"true\"\n                              ></i>{\" \"}\n                            </i>{\" \"}\n                            | Total commission: <span>4526.32</span> SMART\n                          </div> */}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {/* <!--======================= SWAP BLOCK END =====================--> */}\n                </div>\n              </div>\n\n              {/* <!--======================= WALLET POPUP START =====================--> */}\n              <WalletPopup\n                web3={this.state.web3}\n                web3Config={web3Config}\n              ></WalletPopup>\n              {/* <!--======================= WALLET POPUP END =====================-->\n                    <!--======================= COIN POPUP START =====================--> */}\n              <CoinPopup\n                web3={this.state.web3}\n                web3Config={web3Config}\n                setCurrency={this.setSendCurrency}\n                popId={\"sendCurPop\"}\n                opositeSelectedCurrrency={this.state.selectedReceiveCurrency}\n                selectedCurrrency={this.state.selectedSendCurrency}\n              ></CoinPopup>\n              <CoinPopup\n                web3={this.state.web3}\n                web3Config={web3Config}\n                setCurrency={this.setReceiveCurrency}\n                popId={\"receiveCurPop\"}\n                opositeSelectedCurrrency={this.state.selectedSendCurrency}\n                selectedCurrrency={this.state.selectedReceiveCurrency}\n              ></CoinPopup>\n\n              <LiquidityProvider\n                closePopup={this.closePopup}\n                openPopup={this.openPopup}\n              ></LiquidityProvider>\n\n              <LiquidityFountainSP\n                closePopup={this.closePopup}\n                openPopup={this.openPopup}\n              />\n              <About\n                closePopup={this.closePopup}\n                openPopup={this.openPopup}\n              ></About>\n              <PeerPopup\n                closePopup={this.closePopup}\n                openPopup={this.openPopup}\n              ></PeerPopup>\n              <HowItWorks\n                closePopup={this.closePopup}\n                openPopup={this.openPopup}\n              ></HowItWorks>\n              {/* <DepositToken\n                closePopup={this.closePopup}\n                openPopup={this.openPopup}\n              ></DepositToken> */}\n              <CefiToDefi\n                closePopup={this.closePopup}\n                openPopup={this.openPopup}\n              ></CefiToDefi>\n              <NoDomain\n                closePopup={this.closePopup}\n                openPopup={this.openPopup}\n                subDomainName={this.state.subDomainName}\n              ></NoDomain>\n              {/* <!--======================= COIN POPUP END =====================-->\n                    <!--======================= SIDE POPUP START =====================--> */}\n              <SidePopup\n                web3={this.state.web3}\n                web3Config={web3Config}\n                closePopup={() => { this.setState({ sideBar: false }) }}\n                openPopup={this.openPopup}\n                sideBar={this.state.sideBar}\n              ></SidePopup>\n              {/* <!--======================= SIDE POPUP END =====================--> */}\n              {/* <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/gnaJlUA20lk\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> */}\n            </div>\n          </main>\n        )}\n      </>\n    );\n  }\n}\n","/var/www/html/SmartSwap_frontend/src/constants.js",[],"/var/www/html/SmartSwap_frontend/src/helper/validation.js",["278"],"import {\n    EventEmitter\n} from \"events\";\n\n\n\nclass Validation extends EventEmitter {\n\n\n    constructor() {\n        super();\n    }\n\n    floatOnly(event) {\n        if (event.shiftKey === true) event.preventDefault();\n\n        var code = event.keyCode;\n\n        if (\n            (code >= 48 && code <= 57) ||\n            (code >= 96 && code <= 105) ||\n            code === 8 ||\n            code === 9 ||\n            code === 37 ||\n            code === 39 ||\n            code === 46 ||\n            code === 190 ||\n            code === 110\n        ) {\n            // allowed characters\n        } else event.preventDefault();\n\n        if (\n            event.target.value.indexOf(\".\") !== -1 &&\n            (code === 190 || code === 110)\n        )\n            event.preventDefault();\n    }\n\n    handleActions(action) {\n        switch (action.type) { }\n    }\n\n\n}\n\n\nconst validation = new Validation();\n//dispatcher.register(Validation.handleActions.bind(validation));\nexport default validation;","/var/www/html/SmartSwap_frontend/src/config/web3Config.js",[],"/var/www/html/SmartSwap_frontend/src/config/notificationConfig.js",[],"/var/www/html/SmartSwap_frontend/src/helper/swapFactoryContract.js",["279","280","281","282"],"import {\n    EventEmitter\n} from \"events\";\nimport web3Js from 'web3';\nimport { ethers } from 'ethers';\n\nimport swapFactoryAbi from \"../abis/swapFactory.json\";\nimport tokenAbi from \"../abis/tokenAbi.json\";\nimport constantConfig from \"../config/constantConfig\";\nimport web3Config from \"../config/web3Config\";\nvar BigNumber = require('big-number');\n\n// const ADRESS_ONE = \"0x0000000000000000000000000000000000000001\";\n// const ADRESS_TWO = \"0x0000000000000000000000000000000000000002\";\n\nclass SwapFactoryContract extends EventEmitter {\n\n    constructor(web3, networkId) {\n        super();\n        this.web3 = web3;\n        this.networkId = networkId;\n        this.swapFactoryAddress = constantConfig[networkId].swapFactoryContract;\n\n        this.swapFactoryInstance = new ethers.Contract(\n            this.swapFactoryAddress,\n            swapFactoryAbi,\n            web3.getSigner(0)\n        );\n\n        // this.JNTRTokenInstance = new ethers.Contract(\n        //     \"0x1350044d6a653E87Ed3384DC1D2f6b1A7F138e0A\",\n        //     tokenAbi,\n        //     web3.getSigner(0)\n        // );\n\n        // this.JNTRETokenInstance = new ethers.Contract(\n        //     \"0x40a99d086d517f06f9d1ed564f51ef75b8f7f042\",\n        //     tokenAbi,\n        //     web3.getSigner(0)\n        // );\n\n        // this.JNTRBTokenInstance = new ethers.Contract(\n        //     \"0x001667842cc59cadb0a335bf7c7f77b3c75f41c2\",\n        //     tokenAbi,\n        //     web3.getSigner(0)\n        // );\n    }\n\n    async sendTransaction(payload, value, gasLimit, to, txCb, receiptCb) {\n        let gasPrice = \"0\";\n        if (this.networkId === 56 || this.networkId === 97)\n            gasPrice = \"20\";\n        else if (this.networkId === 42)\n            gasPrice = \"30\";\n        else {\n            const response = await fetch('https://ethgasstation.info/json/ethgasAPI.json');\n            const json = await response.json();\n            gasPrice = (json.fast / 10).toString();\n        }\n\n        const tx = {\n            to: to,\n            data: payload,\n            gasPrice: web3Js.utils.toHex(web3Js.utils.toWei(gasPrice, \"gwei\")),\n\n            value: web3Js.utils.toHex(value)\n        };\n\n        // gasLimit: web3Js.utils.toHex(gasLimit),\n\n        console.log(\"EstimateGas : \")\n        try {\n            console.log((await this.web3.getSigner(0).estimateGas(tx))._hex)\n            tx['gasLimit'] = (await this.web3.getSigner(0).estimateGas(tx))._hex\n        } catch (e) {\n            tx['gasLimit'] = '0x186A0'\n        }\n\n        // const tx2 = {\n        //     to: to,\n        //     data: payload,\n        //     gasPrice: web3Js.utils.toHex(web3Js.utils.toWei(gasPrice, \"gwei\")),\n        //     value: web3Js.utils.toHex(value)\n        // };\n\n        // console.log((await this.web3.getSigner(0).estimateGas(tx2))._hex)\n\n        this.web3.getSigner(0).sendTransaction(tx).then(result => {\n            txCb(result.hash)\n            result.wait().then(async (receipt) => {\n                receiptCb(receipt);\n            })\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    pad32Bytes(data) {\n        var s = String(data);\n        while (s.length < (64 || 2)) { s = \"0\" + s; }\n        return s;\n    }\n\n    async swap(tokenA, tokenB, amount, swapAmount, fee, licenseeAddress, processingFees, txCb, receiptCb) {\n        // let fee = await this.swapFactoryInstance.processingFee();\n        // let fee = web3Js.utils.toWei(0.1);\n        // fee = web3Js.utils.hexToNumberString(fee._hex);\n        // amount = BigNumber(amount).add(fee);\n        // amount = amount.toString();\n\n        console.log(amount)\n        console.log(swapAmount)\n        console.log(fee)\n\n        console.log((Number(amount) + Number(fee.totalFees)).toString())\n        let amountNew = (Number(amount) + Number(fee.totalFees)).toString();\n\n        let receiver = web3Config.getAddress();\n        let licensee = licenseeAddress;\n        let isInvestment = false;\n        let minimumAmountToClaim = 0;\n        let limitPice = 0;\n\n        console.log(\"------------------------------------fees-start-------------------------------------\")\n        console.log(fee.totalFees)\n        console.log((Number(fee.processingFees) * 10 ** 18))\n        console.log(Number(fee.totalFees) - (Number(fee.processingFees) * 10 ** 18))\n        console.log(\"------------------------------------fees-end-------------------------------------\")\n\n        let fees = web3Js.utils.toHex(Number(fee.totalFees) - (Number(fee.processingFees) * 10 ** 18)).replace(\"0x\", \"\");\n        console.log(fees)\n\n        let newamount = web3Js.utils.toHex(swapAmount).replace(\"0x\", \"\");\n        tokenA = tokenA.replace(\"0x\", \"\");\n        tokenB = tokenB.replace(\"0x\", \"\");\n        receiver = receiver.replace(\"0x\", \"\");\n        licensee = licensee.replace(\"0x\", \"\");\n        // var encodeABI = `${pad32Bytes(requestId)}${pad32Bytes(price)}`;\n\n        var payload = `0xe0e45f0e${this.pad32Bytes(tokenA)}${this.pad32Bytes(tokenB)}${this.pad32Bytes(receiver)}${this.pad32Bytes(newamount)}${this.pad32Bytes(licensee)}${this.pad32Bytes(0)}${this.pad32Bytes(0)}${this.pad32Bytes(0)}${this.pad32Bytes(fees)}`\n\n        // let payload = `0xdf791e50${this.pad32Bytes(tokenA)}${this.pad32Bytes(tokenB)}${this.pad32Bytes(newamount)}`;\n\n        // let payload = await this.swapFactoryInstance.populateTransaction.swap(tokenA, tokenB, receiver, swapAmount, licensee, isInvestment, minimumAmountToClaim, limitPice);\n        console.log(payload)\n        this.sendTransaction(payload, amountNew, \"270000\", this.swapFactoryAddress, txCb, receiptCb)\n    }\n\n    async addSwapProvider(nativeToken, foreignToken, nativeTokenReceiver, foreignTokenReceiver, feeAmountLimit, txCb, receiptCb) {\n        let _nativeToken = nativeToken.replace(\"0x\", \"\");\n        let _foreignToken = foreignToken.replace(\"0x\", \"\");\n        let _nativeTokenReceiver = nativeTokenReceiver.replace(\"0x\", \"\");\n        let _foreignTokenReceiver = foreignTokenReceiver.replace(\"0x\", \"\");\n        let _feeAmountLimit = web3Js.utils.toBN(web3Js.utils.toWei((feeAmountLimit).toString()));\n\n        var payload = `0xd104451a${this.pad32Bytes(_nativeToken)}${this.pad32Bytes(_foreignToken)}${this.pad32Bytes(_nativeTokenReceiver)}${this.pad32Bytes(_foreignTokenReceiver)}${this.pad32Bytes(_feeAmountLimit)}`\n        console.log(payload);\n        console.log(this.swapFactoryAddress);\n\n        this.sendTransaction(payload, 0, \"400680\", this.swapFactoryAddress, txCb, receiptCb)\n    }\n\n    async estimateSwapGasFee(tokenA, tokenB, amount, swapAmount, fee, licenseeAddress, gasLimit, estGasCb) {\n        // let fee = await this.swapFactoryInstance.processingFee();\n        // fee = web3Js.utils.hexToNumberString(fee._hex);\n        // amount = BigNumber(amount).add(fee);\n        // amount = amount.toString();\n\n        let amountNew = (Number(amount) + Number(fee.totalFees)).toString();\n\n        let receiver = web3Config.getAddress();\n        let licensee = licenseeAddress;\n\n        let gasPrice = \"0\";\n        if (this.networkId === 56 || this.networkId === 97)\n            gasPrice = \"20\";\n        else if (this.networkId === 42)\n            gasPrice = \"30\";\n        else {\n            const response = await fetch('https://ethgasstation.info/json/ethgasAPI.json');\n            const json = await response.json();\n            gasPrice = (json.fast / 10).toString();\n        }\n        console.log(swapAmount)\n        let newamount = web3Js.utils.toHex(swapAmount).replace(\"0x\", \"\");\n        tokenA = tokenA.replace(\"0x\", \"\");\n        tokenB = tokenB.replace(\"0x\", \"\");\n        receiver = receiver.replace(\"0x\", \"\");\n        licensee = licensee.replace(\"0x\", \"\");\n\n        let fees = web3Js.utils.toHex(Number(fee.totalFees) - (Number(fee.processingFees) * 10 ** 18)).replace(\"0x\", \"\");\n        // var encodeABI = `${pad32Bytes(requestId)}${pad32Bytes(price)}`;\n\n        console.log(\"------------------------------------fees-start-------------------------------------\")\n        console.log(this.pad32Bytes(fees))\n        console.log(\"------------------------------------fees-end-------------------------------------\")\n\n        var payload = `0xe0e45f0e${this.pad32Bytes(tokenA)}${this.pad32Bytes(tokenB)}${this.pad32Bytes(receiver)}${this.pad32Bytes(newamount)}${this.pad32Bytes(licensee)}${this.pad32Bytes(0)}${this.pad32Bytes(0)}${this.pad32Bytes(0)}${this.pad32Bytes(fees)}`\n\n        const tx = {\n            to: this.swapFactoryAddress,\n            data: payload,\n            gasPrice: web3Js.utils.toHex(web3Js.utils.toWei(gasPrice, \"gwei\")),\n            gasLimit: web3Js.utils.toHex(gasLimit),\n            value: web3Js.utils.toHex(amountNew)\n        };\n\n        this.web3.getSigner(0).estimateGas(tx).then(result => {\n            let estGasEth = web3Js.utils.fromWei((web3Js.utils.toDecimal(result) * web3Js.utils.toWei(gasPrice, \"gwei\")).toString());\n            estGasCb(estGasEth);\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    async approveJNTRTokenForSwapFactory(tokenAddress, swapFactoryAddress, txCb, receiptCb) {\n\n        let web3 = this.web3;\n\n        this.tokenInstance = new ethers.Contract(\n            tokenAddress,\n            tokenAbi,\n            web3.getSigner(0)\n        );\n\n        let highApproval = web3Js.utils.toWei(\"10000000000000\");\n        let payload = await this.tokenInstance.populateTransaction.approve(swapFactoryAddress, highApproval);\n        this.sendTransaction(payload.data, 0, \"150000\", tokenAddress, txCb, receiptCb);\n\n    }\n\n    // async approveJNTRTokenForSwapFactory(txCb,receiptCb){\n    //     let highApproval = web3Js.utils.toWei(\"10000000000000\");\n    //     let payload = await this.JNTRTokenInstance.populateTransaction.approve(\"0x001667842cc59cadb0a335bf7c7f77b3c75f41c2\",highApproval);\n    //     this.sendTransaction(payload.data,0,\"150000\",txCb,receiptCb);\n    // }\n\n    // async approveJNTRETokenForSwapFactory(txCb,receiptCb){\n    //     let highApproval = web3Js.utils.toWei(\"10000000000000\");\n    //     let payload = await this.JNTRETokenInstance.populateTransaction.approve(\"0xeaf41806fcc2a3893a662dbba7a111630f9f6704\",highApproval);\n    //     this.sendTransaction(payload.data,0,\"150000\",txCb,receiptCb);\n    // }\n\n    // async approveJNTRBTokenForSwapFactory(txCb,receiptCb){\n    //     let highApproval = web3Js.utils.toWei(\"10000000000000\");\n    //     let payload = await this.JNTRBTokenInstance.populateTransaction.approve(\"0x001667842cc59cadb0a335bf7c7f77b3c75f41c2\",highApproval);\n    //     this.sendTransaction(payload.data,0,\"150000\",txCb,receiptCb);\n    // }\n\n\n    handleActions(action) {\n        switch (action.type) { }\n    }\n\n}\n\n\n\n\n\nexport default SwapFactoryContract;","/var/www/html/SmartSwap_frontend/src/config/constantConfig.js",[],"/var/www/html/SmartSwap_frontend/src/helper/reimbursementContract.js",["283","284","285"],"import { EventEmitter } from \"events\";\nimport web3Js from \"web3\";\nimport { ethers } from \"ethers\";\n\nimport reimbursementAbi from \"../abis/reimbursementAbi.json\";\nimport tokenAbi from \"../abis/tokenAbi.json\";\nimport tokenVaultAbi from \"../abis/tokenVaultAbi.json\";\nimport constantConfig from \"../config/constantConfig\";\nimport web3Config from \"../config/web3Config\";\nvar BigNumber = require(\"big-number\");\n\n// const ADRESS_ONE = \"0x0000000000000000000000000000000000000001\";\n// const ADRESS_TWO = \"0x0000000000000000000000000000000000000002\";\n\nclass ReimbursementContract extends EventEmitter {\n    constructor(web3, networkId) {\n        super();\n        this.web3 = web3;\n        this.networkId = networkId;\n        // this.reimbursementAddress = constantConfig[networkId].reimbursementContract;\n\n        // this.reimbursementInstance = new ethers.Contract(\n        //     this.reimbursementAddress,\n        //     reimbursementAbi,\n        //     web3.getSigner(0)\n        // );\n\n    }\n\n    async sendTransaction(payload, value, gasLimit, to, txCb, receiptCb, errorCb) {\n        let gasPrice = \"0\";\n        if (this.networkId === 56 || this.networkId === 97) gasPrice = \"20\";\n        else if (this.networkId === 42) gasPrice = \"30\";\n        else {\n            const response = await fetch(\n                \"https://ethgasstation.info/json/ethgasAPI.json\"\n            );\n            const json = await response.json();\n            gasPrice = (json.fast / 10).toString();\n        }\n\n        const tx = {\n            to: to,\n            data: payload,\n            gasPrice: web3Js.utils.toHex(web3Js.utils.toWei(gasPrice, \"gwei\")),\n            gasLimit: web3Js.utils.toHex(gasLimit),\n            value: web3Js.utils.toHex(value),\n        };\n\n        this.web3\n            .getSigner(0)\n            .sendTransaction(tx)\n            .then((result) => {\n                txCb(result.hash);\n                result.wait().then(async (receipt) => {\n                    receiptCb(receipt);\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                errorCb(error);\n            });\n    }\n\n    pad32Bytes(data) {\n        var s = String(data);\n        while (s.length < (64 || 2)) {\n            s = \"0\" + s;\n        }\n        return s;\n    }\n\n    async getVaultAddress(receipt) {\n        const iface = new ethers.utils.Interface(reimbursementAbi)\n\n        if (receipt.status === 1) {\n            for (var i = 0; i < receipt.logs.length; i++) {\n                if (receipt.logs[i].topics[0] === \"0x897c133dfbfe1f6239e98b4ffd7e4f6c86a62350a131a7a37790419f58af02f9\") {\n                    return iface.decodeEventLog(\"VaultCreated\", receipt.logs[i].data, receipt.logs[i].topics).vault;\n                }\n            }\n        }\n    }\n\n    async newVault(newVaultData, txCb, receiptCb, errorCb) {\n        let token = newVaultData.token;                         // reimbursement token\n        let isMintable = newVaultData.isMintable;               // token can be minted by this contract (`false` for Licensee)\n        let period = newVaultData.period;                       // staking period in seconds (365 days)\n        let reimbursementRatio = newVaultData.reimbursementRatio;   // the ratio of deposited amount to reimbursement amount (with 2 decimals). \n        let swapPair = newVaultData.swapPair;                    // uniswap compatible pair for token and native coin (ETH, BNB)\n        let licenseeFee = newVaultData.licenseeFee;             // percentage of Licensee fee (with 2 decimals). I.e. 30 means 0.3%\n        let projectContract = newVaultData.projectContract;\n\n        let reimbursementInstance = await new ethers.Contract(\n            newVaultData.reimbursementAddress,\n            reimbursementAbi,\n            this.web3.getSigner(0)\n        );\n\n        let payload = (await reimbursementInstance.populateTransaction.newVault(\n            token,\n            isMintable,\n            period,\n            reimbursementRatio,\n            swapPair,\n            licenseeFee,\n            projectContract\n        )).data;\n\n        console.log(payload);\n\n        this.sendTransaction(\n            payload,\n            0,\n            \"900000\",\n            newVaultData.reimbursementAddress,\n            txCb,\n            receiptCb,\n            errorCb\n        );\n\n    }\n\n    async depositTokens(transferTokenData, txCb, receiptCb, errorCb) {\n        console.log(transferTokenData)\n        let to = transferTokenData.to;                         // reimbursement token\n        let amount = web3Js.utils.toWei(transferTokenData.amount);\n\n        let tokenInstance = await new ethers.Contract(\n            transferTokenData.tokenAddress,\n            tokenAbi,\n            this.web3.getSigner(0)\n        );\n\n        let payload = (await tokenInstance.populateTransaction.transfer(\n            to,\n            amount\n        )).data;\n\n        console.log(payload);\n\n        this.sendTransaction(\n            payload,\n            0,\n            \"900000\",\n            transferTokenData.tokenAddress,\n            txCb,\n            receiptCb,\n            errorCb\n        );\n\n    }\n\n    async withdrawTokens(withdrawTokensData, txCb, receiptCb, errorCb) {\n        let vault = withdrawTokensData.vault;                         // reimbursement token\n        let amount = web3Js.utils.toWei(withdrawTokensData.amount);\n\n        console.log(withdrawTokensData)\n\n        let reimbursementInstance = await new ethers.Contract(\n            withdrawTokensData.reimbursementAddress,\n            reimbursementAbi,\n            this.web3.getSigner(0)\n        );\n\n        let payload = (await reimbursementInstance.populateTransaction.withdrawTokens(\n            vault,\n            amount\n        )).data;\n\n        console.log(payload);\n\n        this.sendTransaction(\n            payload,\n            0,\n            \"900000\",\n            withdrawTokensData.reimbursementAddress,\n            txCb,\n            receiptCb,\n            errorCb\n        );\n\n    }\n\n    async setLicenseeFee(setLicenseeFeeData, txCb, receiptCb, errorCb) {\n        let vault = setLicenseeFeeData.vault;\n        let projectContract = setLicenseeFeeData.projectContract;\n        let fee = setLicenseeFeeData.fee;             // percentage of Licensee fee (with 2 decimals). I.e. 30 means 0.3%\n\n        console.log(vault, projectContract, fee)\n\n        let reimbursementInstance = await new ethers.Contract(\n            setLicenseeFeeData.reimbursementAddress,\n            reimbursementAbi,\n            this.web3.getSigner(0)\n        );\n\n        let payload = (await reimbursementInstance.populateTransaction.setLicenseeFee(\n            vault,\n            projectContract,\n            fee\n        )).data;\n\n        console.log(payload);\n\n        this.sendTransaction(\n            payload,\n            0,\n            \"900000\",\n            setLicenseeFeeData.reimbursementAddress,\n            txCb,\n            receiptCb,\n            errorCb\n        );\n    }\n\n    async estimateSwapGasFee(\n        tokenA,\n        tokenB,\n        amount,\n        swapAmount,\n        fee,\n        gasLimit,\n        estGasCb\n    ) {\n        // let fee = await this.reimbursementInstance.processingFee();\n        // fee = web3Js.utils.hexToNumberString(fee._hex);\n        // amount = BigNumber(amount).add(fee);\n        // amount = amount.toString();\n\n        let amountNew = (Number(amount) + Number(fee)).toString();\n\n        let receiver = web3Config.getAddress();\n        let licensee = \"0x0000000000000000000000000000000000000000\";\n\n        let gasPrice = \"0\";\n        if (this.networkId === 56 || this.networkId === 97) gasPrice = \"20\";\n        else if (this.networkId === 42) gasPrice = \"30\";\n        else {\n            const response = await fetch(\n                \"https://ethgasstation.info/json/ethgasAPI.json\"\n            );\n            const json = await response.json();\n            gasPrice = (json.fast / 10).toString();\n        }\n        console.log(swapAmount);\n        let newamount = web3Js.utils.toHex(swapAmount).replace(\"0x\", \"\");\n        tokenA = tokenA.replace(\"0x\", \"\");\n        tokenB = tokenB.replace(\"0x\", \"\");\n        receiver = receiver.replace(\"0x\", \"\");\n        licensee = licensee.replace(\"0x\", \"\");\n        // var encodeABI = `${pad32Bytes(requestId)}${pad32Bytes(price)}`;\n\n        var payload = `0x653c3c8f${this.pad32Bytes(tokenA)}${this.pad32Bytes(\n            tokenB\n        )}${this.pad32Bytes(receiver)}${this.pad32Bytes(\n            newamount\n        )}${this.pad32Bytes(licensee)}${this.pad32Bytes(0)}${this.pad32Bytes(\n            0\n        )}${this.pad32Bytes(0)}`;\n\n        const tx = {\n            to: this.reimbursementAddress,\n            data: payload,\n            gasPrice: web3Js.utils.toHex(web3Js.utils.toWei(gasPrice, \"gwei\")),\n            gasLimit: web3Js.utils.toHex(gasLimit),\n            value: web3Js.utils.toHex(amountNew),\n        };\n\n        this.web3\n            .getSigner(0)\n            .estimateGas(tx)\n            .then((result) => {\n                let estGasEth = web3Js.utils.fromWei(\n                    (\n                        web3Js.utils.toDecimal(result) *\n                        web3Js.utils.toWei(gasPrice, \"gwei\")\n                    ).toString()\n                );\n                estGasCb(estGasEth);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }\n\n    async approveJNTRTokenForSwapFactory(\n        tokenAddress,\n        reimbursementAddress,\n        txCb,\n        receiptCb\n    ) {\n        let web3 = this.web3;\n\n        this.tokenInstance = new ethers.Contract(\n            tokenAddress,\n            tokenAbi,\n            web3.getSigner(0)\n        );\n\n        let highApproval = web3Js.utils.toWei(\"10000000000000\");\n        let payload = await this.tokenInstance.populateTransaction.approve(\n            reimbursementAddress,\n            highApproval\n        );\n        this.sendTransaction(\n            payload.data,\n            0,\n            \"250000\",\n            tokenAddress,\n            txCb,\n            receiptCb\n        );\n    }\n\n    // async approveJNTRTokenForSwapFactory(txCb,receiptCb){\n    //     let highApproval = web3Js.utils.toWei(\"10000000000000\");\n    //     let payload = await this.JNTRTokenInstance.populateTransaction.approve(\"0x001667842cc59cadb0a335bf7c7f77b3c75f41c2\",highApproval);\n    //     this.sendTransaction(payload.data,0,\"150000\",txCb,receiptCb);\n    // }\n\n    // async approveJNTRETokenForSwapFactory(txCb,receiptCb){\n    //     let highApproval = web3Js.utils.toWei(\"10000000000000\");\n    //     let payload = await this.JNTRETokenInstance.populateTransaction.approve(\"0xeaf41806fcc2a3893a662dbba7a111630f9f6704\",highApproval);\n    //     this.sendTransaction(payload.data,0,\"150000\",txCb,receiptCb);\n    // }\n\n    // async approveJNTRBTokenForSwapFactory(txCb,receiptCb){\n    //     let highApproval = web3Js.utils.toWei(\"10000000000000\");\n    //     let payload = await this.JNTRBTokenInstance.populateTransaction.approve(\"0x001667842cc59cadb0a335bf7c7f77b3c75f41c2\",highApproval);\n    //     this.sendTransaction(payload.data,0,\"150000\",txCb,receiptCb);\n    // }\n\n    handleActions(action) {\n        switch (action.type) {\n        }\n    }\n}\n\nexport default ReimbursementContract;\n","/var/www/html/SmartSwap_frontend/src/components/WalletPopup.js",["286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327"],"import React, { PureComponent } from \"react\";\nimport web3Config from \"../config/web3Config\";\n\nexport default class WalletPopup extends PureComponent {\n    constructor(props){\n        super();\n        this.state = {\n            web3: props.web3,\n            web3Config: props.web3Config\n        }\n    }\n\n    componentWillReceiveProps(newProps){\n        this.setState({\n            web3: newProps.web3,\n            web3Config: newProps.web3Config\n        })\n    }\n\n    render() {\n\n        return (\n            <div className=\"main-Popup wallet-Popup\" id=\"wallet-Popup\">\n                <div className=\"container-Grid\">\n                    <div className=\"wallet-popupBlock\">\n                        <div className=\"search-Mbx\">\n\n                            <div className=\"search-Bx\"> <a href=\"javascript:void(0);\">\n                                <span className=\"icon-Box\"><i className=\"fas fa-search\"></i></span></a>\n                                <input type=\"text\" placeholder=\"Search wallet by Name\" />\n                            </div>\n                        </div>\n                        <div className=\"wallet-boxWrap\">\n                            <div className=\"wallet-Bx ani-1\">\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon03.png\" alt=\"\" className=\"img-fluid\" />\n                                    <div className=\"title-Name\">Guarda</div>\n                                </div>\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\n                            </div>\n                            <div className=\"wallet-Bx ani-1\">\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon02.png\" alt=\"\" className=\"img-fluid\" />\n                                    <div className=\"title-Name\">MyEtherWaCllet</div>\n                                </div>\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\n                            </div>\n                            <div className=\"wallet-Bx ani-1\">\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon01.png\" alt=\"\" className=\"img-fluid\" />\n                                    <div className=\"title-Name\">MetaMask</div>\n                                </div>\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\n                            </div>\n                            <div className=\"wallet-Bx ani-1\">\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon04.png\" alt=\"\" className=\"img-fluid\" />\n                                    <div className=\"title-Name\">Mist</div>\n                                </div>\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\n                            </div>\n                            <div className=\"wallet-Bx ani-1\">\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon05.png\" alt=\"\" className=\"img-fluid\" />\n                                    <div className=\"title-Name\">Exodus</div>\n                                </div>\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\n                            </div>\n                            <div className=\"wallet-Bx ani-1\">\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon06.png\" alt=\"\" className=\"img-fluid\" />\n                                    <div className=\"title-Name\">Atomic</div>\n                                </div>\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\n                            </div>\n                            <div className=\"wallet-Bx ani-1\">\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon07.png\" alt=\"\" className=\"img-fluid\" />\n                                    <div className=\"title-Name\">Jaxx</div>\n                                </div>\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\n                            </div>\n                            <div className=\"wallet-Bx ani-1\">\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon08.png\" alt=\"\" className=\"img-fluid\" />\n                                    <div className=\"title-Name\">Ethaddress</div>\n                                </div>\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\n                            </div>\n                            <div className=\"wallet-Bx ani-1\">\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon09.png\" alt=\"\" className=\"img-fluid\" />\n                                    <div className=\"title-Name\">TrustWallet</div>\n                                </div>\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\n                            </div>\n                            <div className=\"wallet-Bx ani-1\">\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon10.png\" alt=\"\" className=\"img-fluid\" />\n                                    <div className=\"title-Name\">Coinomi</div>\n                                </div>\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\n                            </div>\n                            <div className=\"wallet-Bx ani-1\">\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon11.png\" alt=\"\" className=\"img-fluid\" />\n                                    <div className=\"title-Name\">Bread Wallet</div>\n                                </div>\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\n                            </div>\n                            <div className=\"wallet-Bx ani-1\">\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon12.png\" alt=\"\" className=\"img-fluid\" />\n                                    <div className=\"title-Name\">imToken Wallet</div>\n                                </div>\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <a href=\"javascript:void(0);\" className=\"close-Icon\"></a>\n            </div>\n        )\n\n    }\n\n}","/var/www/html/SmartSwap_frontend/src/components/RightSideMenu.js",["328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371"],"import React, { PureComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport web3Config from \"../config/web3Config\";\n\nconst $ = window.$;\nexport default class RightSideMenu extends PureComponent {\n  constructor(props) {\n    super();\n    this.showWithId = this.showWithId.bind(this);\n    this.state = {\n      web3: props.web3,\n      web3Config: props.web3Config,\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      web3: newProps.web3,\n      web3Config: newProps.web3Config,\n    });\n    // remove this line when stop testing on swap provider\n    //this.props.openPopup(\"LiquidityProvider\")\n  }\n\n  showWithId(popup, id) {\n    this.props.openPopup(popup);\n    $(\"[data-id=\" + this.state.currentTab + \"]\").removeClass(\"active\");\n    $(\".tab-Link\").removeClass(\"active\");\n    $(\"[data-id=\" + id + \"]\").addClass(\"active\");\n    $(\".tab-Content\").hide();\n    $(\"#\" + id).fadeIn(\"slow\");\n    this.setState({\n      currentTab: id,\n    });\n  }\n\n  render() {\n    const { cloneData } = this.props;\n    const showSideBar =\n      cloneData.sideBar === \"true\"\n        ? true\n        : cloneData.sideBar === undefined\n          ? true\n          : false;\n    return (\n      <>\n        {showSideBar && (\n          <div\n            className={\n              cloneData.logoImage ? \"menuSideBar subdomain\" : \"menuSideBar\"\n            }\n            style={\n              cloneData.fontStyle && cloneData.fontStyle !== \"Default\"\n                ? {\n                  right: \"-100%\",\n                  opacity: \"0\",\n                  fontFamily: cloneData.fontStyle,\n                }\n                : { right: \"-100%\", opacity: \"0\" }\n            }\n          >\n            <div className=\"menuSideBarContainer\">\n              <div className=\"msb-Waddress\">\n                <span className=\"waltFix01\">\n                  {web3Config.getAddress() !== null\n                    ? web3Config.getAddress().slice(0, 45)\n                    : null}\n                </span>\n                <a\n                  href=\"javascript:void(0);\"\n                  className=\"rmDotLink active MenuClose\"\n                >\n                  <i className=\"fas fa-circle\"></i>\n                </a>\n              </div>\n              <div className=\"msb-Linkbox01\">\n                <Link to=\"/ownLicence\">Launch Branded SmartSwap</Link>\n                <a\n                  href=\"#\"\n                  onClick={() => {\n                    this.props.openPopup(\"LiquidityProvider\");\n                  }}\n                >\n                  Become an Swap Provider (SP){\" \"}\n                </a>\n                <a href=\"#\">Buy SMART</a>\n              </div>\n              <div className=\"msb-Linkbox02\">\n                <a\n                  href=\"javascript:void(0);\"\n                  className=\"active\"\n                  data-toggle=\"n-collapse\"\n                  data-target=\"#msbSL-01\"\n                  aria-expanded=\"false\"\n                  aria-controls=\"msbSL-01\"\n                >\n                  Learn <i className=\"fas fa-caret-down\"></i>\n                </a>\n                <div className=\"msbLinkSubBox n-collapse in\" id=\"msbSL-01\">\n                  <a\n                    href=\"javascript:void(0);\"\n                    onClick={(ev) => {\n                      ev.preventDefault();\n                      this.showWithId(\"HowItWorks\", \"tab-4\");\n                    }}\n                  >\n                    How it Works{\" \"}\n                  </a>\n                  <a\n                    href=\"javascript:void(0);\"\n                    onClick={(ev) => {\n                      ev.preventDefault();\n                      this.showWithId(\"HowItWorks\", \"tab-5\");\n                    }}\n                  >\n                    SmartSwap vs Atomic Swap\n                  </a>\n                  <a\n                    href=\"javascript:void(0);\"\n                    onClick={(ev) => {\n                      ev.preventDefault();\n                      this.showWithId(\"CefiToDefi\", \"tab-7\");\n                    }}\n                  >\n                    Decentralize CEX: CeFi {\"<>\"} DeFi\n                  </a>\n                  <a\n                    href=\"javascript:void(0);\"\n                    onClick={(ev) => {\n                      ev.preventDefault();\n                      this.showWithId(\"CefiToDefi\", \"tab-8\");\n                    }}\n                  >\n                    What is a Swap Provider\n                  </a>\n                  <a\n                    href=\"javascript:void(0);\"\n                    onClick={() => {\n                      this.props.openPopup(\"LiquidityFountainSP\");\n                    }}\n                  >\n                    Liquidity Fountain for SPs\n                  </a>\n                  <a\n                    href=\"javascript:void(0);\"\n                    onClick={(ev) => {\n                      ev.preventDefault();\n                      this.showWithId(\"CefiToDefi\", \"tab-9\");\n                    }}\n                  >\n                    SmartSwap Liquidity Process\n                  </a>\n                  <a href=\"javascript:void(0);\">Ledger</a>\n                </div>\n              </div>\n              <div className=\"msb-Linkbox02\">\n                <a\n                  href=\"javascript:void(0);\"\n                  className=\"active\"\n                  data-toggle=\"n-collapse\"\n                  data-target=\"#msbSL-02\"\n                  aria-expanded=\"false\"\n                  aria-controls=\"msbSL-02\"\n                >\n                  Library <i className=\"fas fa-caret-down\"></i>\n                </a>\n                <div className=\"msbLinkSubBox n-collapse in\" id=\"msbSL-02\">\n                  {/* <a href=\"javascript:void(0);\">GitHub</a> */}\n                  <a\n                    href=\"https://docsend.com/view/24h32qhisbiunjqk\"\n                    target=\"_blank\"\n                  >\n                    Whitepaper\n                  </a>\n                  {/* <a href=\"javascript:void(0);\">Light Paper</a> */}\n                  {/* <a href=\"javascript:void(0);\">Technical Documentation</a> */}\n                  {/* <a href=\"javascript:void(0);\">Pitch Deck</a> */}\n                  <a\n                    href=\"https://docsend.com/view/24h32qhisbiunjqk\"\n                    target=\"_blank\"\n                  >\n                    One Page\n                  </a>\n                </div>\n              </div>\n              {/* <div className=\"msb-Linkbox02\">\n                        <a href=\"javascript:void(0);\" className=\"active\" data-toggle=\"n-collapse\" data-target=\"#msbSL-03\"\n                            aria-expanded=\"false\" aria-controls=\"msbSL-03\">Library <i className=\"fas fa-caret-down\"></i></a>\n                        <div className=\"msbLinkSubBox n-collapse in\" id=\"msbSL-03\">\n                            <a href=\"javascript:void(0);\">SmartSwap</a>\n                            <a href=\"javascript:void(0);\">Branded Social Currency</a>\n                        </div>\n                    </div> */}\n              {/* <div className=\"msb-Linkbox02\">\n                        <a href=\"javascript:void(0);\" className=\"active\" data-toggle=\"n-collapse\" data-target=\"#msbSL-04\"\n                            aria-expanded=\"false\" aria-controls=\"msbSL-04\">Apply for License <i\n                                className=\"fas fa-caret-down\"></i></a>\n                        <div className=\"msbLinkSubBox n-collapse in\" id=\"msbSL-04\">\n                            <a href=\"javascript:void(0);\">SmartSwap</a>\n                            <a href=\"javascript:void(0);\">Branded Social Currency</a>\n                        </div>\n                    </div> */}\n              <div className=\"msb-Linkbox02\">\n                <a\n                  href=\"javascript:void(0);\"\n                  className=\"active\"\n                  data-toggle=\"n-collapse\"\n                  data-target=\"#msbSL-05\"\n                  aria-expanded=\"false\"\n                  aria-controls=\"msbSL-05\"\n                >\n                  Community <i className=\"fas fa-caret-down\"></i>\n                </a>\n                <div className=\"msbLinkSubBox n-collapse in\" id=\"msbSL-05\">\n                  {/*   */}\n                  <a href=\"https://twitter.com/SmartSwapEx\" target=\"_blank\">\n                    <i className=\"fab fa-twitter\"></i>Twitter\n                  </a>\n                  <a href=\"https://t.me/smartswap_exchange\" target=\"_blank\">\n                    <i class=\"fab fa-telegram\"></i>Telegram\n                  </a>\n                </div>\n              </div>\n              <div className=\"msb-Linkbox02\">\n                <a\n                  href=\"javascript:void(0);\"\n                  className=\"active\"\n                  data-toggle=\"n-collapse\"\n                  data-target=\"#msbSL-06\"\n                  aria-expanded=\"false\"\n                  aria-controls=\"msbSL-06\"\n                >\n                  About <i className=\"fas fa-caret-down\"></i>\n                </a>\n                <div className=\"msbLinkSubBox n-collapse in\" id=\"msbSL-06\">\n                  <a\n                    href=\"javascript:void(0);\"\n                    onClick={() => {\n                      this.props.openPopup(\"About\");\n                    }}\n                  >\n                    About Us\n                  </a>\n                  <a href=\"javascript:void(0);\">Privacy Policy</a>\n                  <a href=\"javascript:void(0);\">Terms of Use</a>\n                  <a href=\"javascript:void(0);\">Cookie Policy</a>\n                  <div className=\"footerV2-LanBoxM\">\n                    <a\n                      href=\"javascript:void();\"\n                      className=\"footerV2-LanBoxLink n-collapsed\"\n                      data-toggle=\"n-collapse\"\n                      data-target=\"#langBox\"\n                      aria-expanded=\"false\"\n                      aria-controls=\"langBox\"\n                    >\n                      <i>\n                        {\" \"}\n                        <img src=\"images/l-Icon01.png\" alt=\"\" />{\" \"}\n                      </i>\n                      English\n                    </a>\n                  </div>\n                </div>\n              </div>\n              <div className=\"auditLogo\">\n                <a href=\"javascript:void(0);\">\n                  <img src=\"images/callistoLogo.png\" alt=\"\" />\n                </a>\n              </div>\n              {/* <div className=\"msb-Linkbox02\">\n                        <a href=\"javascript:void(0);\" className=\"active\" data-toggle=\"n-collapse\" data-target=\"#msbSL-07\"\n                            aria-expanded=\"false\" aria-controls=\"msbSL-07\">Help <i className=\"fas fa-caret-down\"></i></a>\n                        <div className=\"msbLinkSubBox n-collapse in\" id=\"msbSL-07\">\n                            <a href=\"javascript:void(0);\">Start Tutorial</a>\n                            <a href=\"javascript:void(0);\">Report an Issue</a>\n                            <a href=\"javascript:void(0);\">Contact Request</a>\n                            <a href=\"javascript:void(0);\">Help Center</a>\n                            \n                        </div>\n                    </div> */}\n              <div className=\"footer-Bottom\">\n                <div className=\"footer-Logo\">\n                  <a href=\"javascript:void(0);\">\n                    <img src=\"images/logo.png\" alt=\"\" />\n                  </a>\n                </div>\n                <p>© 2021 SmartSwap Exchange All rights reserved</p>\n                <div className=\"footer-Text\">\n                  <p>\n                    <img src=\"images/atomFoundation-logo.png\" alt=\"\" />{\" \"}\n                  </p>\n                  <p>\n                    Atom Foundation is a Decentralized Financial (DeFi) liquidity ecosystem powered by proprietary protocols which underlines zero volatility platforms, a NFT (Non-fungible token) and altcoin marketplace with downside protection, post dex offerings (PDO), a dynamic AMM with multiple swap exchanges, cross network aggregation, as well as a CBDC alternative and price support game theoretic model.{\" \"}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n","/var/www/html/SmartSwap_frontend/src/components/CoinPopup.js",["372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413"],"import React, { PureComponent } from \"react\";\nimport data, { tokenDetails } from \"../config/constantConfig\";\nimport web3Config from \"../config/web3Config\";\nimport { PrePath } from \"../constants\";\n\nexport default class CoinPopup extends PureComponent {\n    constructor(props){\n        super();\n        this.state = {\n            web3: props.web3,\n            web3Config: props.web3Config,\n            coinList: tokenDetails\n        }\n    }\n\n    componentWillReceiveProps(newProps){\n        this.setState({\n            web3: newProps.web3,\n            web3Config: newProps.web3Config\n        })\n    }\n\n    componentDidMount(){\n        // console.log(this.state.coinList)\n    }\n\n    render() {\n\n        return (\n            <div className=\"main-Popup wallet-Popup\" id={this.props.popId}>\n                <div className=\"container-Grid\">\n                    {/* <div className=\"tab-Nav\">\n                        <a href=\"javascript:void(0)\" className={\"tab-Link ani-1 active\" + this.props.popId} data-id=\"tab-01\">Tokens</a>\n                        <a href=\"javascript:void(0)\" className={\"tab-Link ani-1 hideMobile\" + this.props.popId} data-id=\"tab-02\">LP Tokens</a>\n                    </div> */}\n                    <div className={\"tab-Content\" + this.props.popId} id=\"tab-01\">\n                        <div className=\"wallet-popupBlock\">\n                            {/* <div className=\"search-Mbx\">\n                                <div className=\"popupViewFMbox\">\n                                    <a href=\"#\"><i className=\"fas fa-square\"></i></a>\n                                    <a href=\"#\" className=\"active\"><i className=\"fas fa-th-list\"></i></a>\n                                </div>\n\n                                <div className=\"search-Bx\"> <a href=\"javascript:void(0);\"><span className=\"icon-Box\"><i\n                                                className=\"fas fa-search\"></i></span></a>\n                                    <input type=\"text\" placeholder=\"Search by symbol or coin name\" />\n                                </div>\n                            </div> */}\n                            <div className=\"wallet-boxWrap\">\n                                {\n                                    Object.keys(this.state.coinList).map((key) => {\n                                        // [Number(key), obj[key]]\n                                        if(key === this.props.opositeSelectedCurrrency || this.state.coinList[key].networkId === this.state.coinList[this.props.opositeSelectedCurrrency].networkId){\n                                            return null\n                                        } else {\n                                            return (\n                                                <div className=\"wallet-Bx ani-1\">\n                                                    <div className=\"img-Box\">\n                                                        <span className=\"round-Bg\">\n                                                            <span className=\"icon-Box icon16\">\n                                                                <img src={PrePath+\"/images/currencies/\"+ this.state.coinList[key].iconName +\".png\"}/>\n                                                            </span>\n                                                        </span>\n                                                        <div className=\"title-Name\">{key}</div>\n                                                    </div>\n                                                    <a href=\"javascript:void(0);\" className=\"faux-Link\" onClick={()=>this.props.setCurrency(key)}></a>\n                                                </div>\n                                            )\n                                        }\n                                    })   \n                                }\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\n                                                className=\"icon-Box icon16\"></span></span>\n                                        <div className=\"title-Name\">SMART</div>\n                                    </div>\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\n                                </div>\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\n                                                className=\"icon-Box icon01\"></span></span>\n                                        <div className=\"title-Name\">ZERO/1</div>\n                                    </div>\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\n                                </div>\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\n                                                className=\"icon-Box icon02\"></span></span>\n                                        <div className=\"title-Name\">Secured Tether USD</div>\n                                    </div>\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\n                                </div>\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\n                                                className=\"icon-Box icon05\"></span></span>\n                                        <div className=\"title-Name\">Paxos Standard</div>\n                                    </div>\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\n                                </div>\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\n                                                className=\"icon-Box icon06\"></span></span>\n                                        <div className=\"title-Name\">StatusNetwork</div>\n                                    </div>\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\n                                </div>\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\n                                                className=\"icon-Box icon07\"></span></span>\n                                        <div className=\"title-Name\">HuobiToken</div>\n                                    </div>\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\n                                </div>\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\n                                                className=\"icon-Box icon08\"></span></span>\n                                        <div className=\"title-Name\">ChainLink Token</div>\n                                    </div>\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\n                                </div>\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\n                                                className=\"icon-Box icon09\"></span></span>\n                                        <div className=\"title-Name\">OmiseGO</div>\n                                    </div>\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\n                                </div>\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\n                                                className=\"icon-Box icon10\"></span></span>\n                                        <div className=\"title-Name\">BAT</div>\n                                    </div>\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\n                                </div>\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\n                                                className=\"icon-Box icon11\"></span></span>\n                                        <div className=\"title-Name\">IOSToken</div>\n                                    </div>\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\n                                </div>\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\n                                                className=\"icon-Box icon12\"></span></span>\n                                        <div className=\"title-Name\">Dai Stablecoin v1.0</div>\n                                    </div>\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\n                                </div>\n                            </div>\n                        </div>\n                    </div> \n                     \n                </div>\n                <a href=\"javascript:void(0);\" className=\"close-Icon\"></a>\n            </div>\n        )\n\n    }\n\n}","/var/www/html/SmartSwap_frontend/src/components/Header.js",["414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448"],"import React, { PureComponent } from \"react\";\nimport web3Config from \"../config/web3Config\";\nimport { Link } from \"react-router-dom\";\nexport default class Header extends PureComponent {\n  constructor(props) {\n    super();\n    this.state = {\n      web3: props.web3,\n      web3Config: props.web3Config,\n      address: null\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      web3: newProps.web3,\n      web3Config: newProps.web3Config,\n      address: newProps.web3Config.getAddress()\n    }, () => {\n      if (newProps.web3Config.getAddress() !== null) {\n        this.updateAcc()\n      }\n    });\n  }\n  componentDidMount() {\n    const { isSubdomain, cloneData } = this.props;\n\n    if ((cloneData && cloneData.isPreview) || isSubdomain) {\n      setTimeout(() => {\n        window\n          .$(window)\n          .resize(function () {\n            if (window.$(this).width() > 768) {\n              window\n                .$(\n                  \".wallet-Popup, .side-Popup, #security-DigitalPopup, .menuSideBarContainer\"\n                )\n                .mCustomScrollbar(); //apply scrollbar with your options\n            } else {\n              window\n                .$(\n                  \".wallet-Popup, .side-Popup, #security-DigitalPopup, .menuSideBarContainer\"\n                )\n                .mCustomScrollbar(\"destroy\"); //destroy scrollbar\n            }\n          })\n          .trigger(\"resize\");\n\n        // var menuOpen = false;\n        // window.$(\"#DotMenu\").click(function (event) {  \n        //   window.$(\".menuSideBar\").animate({ right: \"0\", opacity: \"1\" }, 500); \n        //   menuOpen = true;\n        //   event.stopPropagation();\n        // });\n\n\n        // window.$(\".main, .MenuClose\").click(function (e) {\n        //   if (menuOpen) {\n        //     if (!window.$(e.target).is(\".menuSideBar *, .menuSideBar\")) {\n        //       window\n        //         .$(\".menuSideBar\")\n        //         .animate({ right: \"-100%\", opacity: \"0\" }, 500);\n        //     }\n        //   }\n        // });\n        // window.$(\".MenuClose, .footerV2-LanBoxLink\").click(function (e) {\n        //   if (menuOpen) {\n        //     window\n        //       .$(\".menuSideBar\")\n        //       .animate({ right: \"-100%\", opacity: \"0\" }, 500);\n        //   }\n        // });\n      }, 100);\n    }\n  }\n\n  async updateAcc() {\n    setInterval(async () => {\n      await web3Config.checkAccount()\n      this.setState({\n        address: web3Config.getAddress()\n      })\n    }, 10000)\n  }\n\n  render() {\n    const { cloneData, clearPreview } = this.props;\n    // console.log({ cloneData, clearPreview });\n    const urlData = cloneData.logoUrl;\n    const logoPath = cloneData.logoImage\n      ? cloneData.logoImage\n      : \"images/logo.png\";\n    return (\n      <header className=\"header wow fadeInDown\">\n        <div className=\"logo\">\n          <a className=\"urlData\" href={urlData ? urlData : \"/\"} target=\"_blank\">\n            <img className=\"logoimage\" src={logoPath} alt=\"\" />\n          </a>\n        </div>\n        <div className=\"rightMenu\">\n          {cloneData && cloneData.isPreview && (\n            <>\n              <Link\n                className=\"ssBtn03 clone-button\"\n                to={{\n                  pathname: \"/ownLicence\",\n                  state: {\n                    cloneData: cloneData,\n                  },\n                }}\n              >\n                Continue\n              </Link>\n              <button className=\"ssBtn03 clone-button\" onClick={clearPreview}>\n                Cancel Preview\n              </button>\n            </>\n          )}\n          {/* <a style={{color:\"orange\",marginRight:\"20px\"}} target=\"_blank\" href=\"https://docs.google.com/forms/d/e/1FAIpQLSf9vPdd87ai-O_ZMIY5Wr88DF6KTLMheTL1nzvm9fXEgJTXJg/viewform\">Smartswap PreSale </a> */}\n          <div className=\"rmUserWallet\">\n            {this.state.web3 !== null\n              ? this.state.address.slice(0, 6) +\n              \"...\" +\n              this.state.address.slice(38, 42)\n              : null}\n          </div>\n          <a\n            href=\"javascript:void(0);\"\n            className=\"rmDotLink  \"\n            id=\"DotMenu\"\n            style={{ color: this.state.web3 !== null ? \"#91dc27\" : \"white\" }}\n          >\n            {/* <i className=\"fas fa-ellipsis-h\"></i> */}\n            <i className=\"fas fa-circle\"></i>\n          </a>\n        </div>\n        <div id=\"langBox\" className=\"autoClose n-collapse\">\n          <div\n            className={\n              cloneData.logoImage\n                ? \"langBoxContainer subdomain clearfix\"\n                : \"langBoxContainer clearfix\"\n            }\n          >\n            <div className=\"lanbox01\">\n              {\" \"}\n              <a href=\"javascript:void(0)\" className=\"active\">\n                <div className=\"lanIconbox\">\n                  <i className=\"lanicon01\"></i>\n                </div>\n                English\n              </a>{\" \"}\n            </div>\n            <div className=\"lanbox01 disableBTN\">\n              {\" \"}\n              <a href=\"javascript:void(0)\">\n                <div className=\"lanIconbox\">\n                  <i className=\"lanicon02\"></i>\n                </div>\n                中文繁體\n              </a>{\" \"}\n            </div>\n            <div className=\"lanbox01 disableBTN\">\n              {\" \"}\n              <a href=\"javascript:void(0)\">\n                <div className=\"lanIconbox\">\n                  <i className=\"lanicon03\"></i>\n                </div>\n                Tiếng Việt\n              </a>{\" \"}\n            </div>\n            <div className=\"lanbox01 disableBTN\">\n              {\" \"}\n              <a href=\"javascript:void(0)\">\n                <div className=\"lanIconbox\">\n                  <i className=\"lanicon04\"></i>\n                </div>\n                العربية\n              </a>{\" \"}\n            </div>\n            <div className=\"lanbox01 disableBTN\">\n              {\" \"}\n              <a href=\"javascript:void(0)\">\n                <div className=\"lanIconbox\">\n                  <i className=\"lanicon05\"></i>\n                </div>\n                Deutsch\n              </a>{\" \"}\n            </div>\n            <div className=\"lanbox01 disableBTN\">\n              {\" \"}\n              <a href=\"javascript:void(0)\">\n                <div className=\"lanIconbox\">\n                  <i className=\"lanicon06\"></i>\n                </div>\n                Pусский\n              </a>{\" \"}\n            </div>\n            <div className=\"lanbox01 disableBTN\">\n              {\" \"}\n              <a href=\"javascript:void(0)\">\n                <div className=\"lanIconbox\">\n                  <i className=\"lanicon07\"></i>\n                </div>\n                Español\n              </a>{\" \"}\n            </div>\n            <div className=\"lanbox01 disableBTN\">\n              {\" \"}\n              <a href=\"javascript:void(0)\">\n                <div className=\"lanIconbox\">\n                  <i className=\"lanicon08\"></i>\n                </div>\n                <span style={{ unicodeBidi: \"bidi-override\" }}>תירבע</span>\n              </a>{\" \"}\n            </div>\n            <div className=\"lanbox01 disableBTN\">\n              {\" \"}\n              <a href=\"javascript:void(0)\">\n                <div className=\"lanIconbox\">\n                  <i className=\"lanicon09\"></i>\n                </div>\n                BAHASA INDONESIA\n              </a>{\" \"}\n            </div>\n            <div className=\"lanbox01 disableBTN\">\n              {\" \"}\n              <a href=\"javascript:void(0)\">\n                <div className=\"lanIconbox\">\n                  <i className=\"lanicon010\"></i>\n                </div>\n                Türkçe\n              </a>{\" \"}\n            </div>\n            <div className=\"lanbox01 disableBTN\">\n              {\" \"}\n              <a href=\"javascript:void(0)\">\n                <div className=\"lanIconbox\">\n                  <i className=\"lanicon011\"></i>\n                </div>\n                Português\n              </a>{\" \"}\n            </div>\n            <div className=\"lanbox01 disableBTN\">\n              {\" \"}\n              <a href=\"javascript:void(0)\">\n                <div className=\"lanIconbox\">\n                  <i className=\"lanicon012\"></i>\n                </div>\n                हिन्दी\n              </a>{\" \"}\n            </div>\n            <div className=\"lanbox01 disableBTN\">\n              {\" \"}\n              <a href=\"javascript:void(0)\">\n                <div className=\"lanIconbox\">\n                  <i className=\"lanicon013\"></i>\n                </div>\n                Français\n              </a>{\" \"}\n            </div>\n            <div className=\"lanbox01 disableBTN\">\n              {\" \"}\n              <a href=\"javascript:void(0)\">\n                <div className=\"lanIconbox\">\n                  <i className=\"lanicon014\"></i>\n                </div>\n                한국어\n              </a>{\" \"}\n            </div>\n            <div className=\"lanbox01 disableBTN\">\n              {\" \"}\n              <a href=\"javascript:void(0)\">\n                <div className=\"lanIconbox\">\n                  <i className=\"lanicon015\"></i>\n                </div>\n                日本語\n              </a>{\" \"}\n            </div>\n            <div className=\"lanbox01 ani-1\">\n              {\" \"}\n              <a href=\"javascript:void(0)\">\n                <div className=\"lanIconbox\">\n                  <i className=\"lanicon015 translateLanguage\"></i>\n                </div>\n                <div id=\"google_translate_element\"></div>\n              </a>{\" \"}\n            </div>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n","/var/www/html/SmartSwap_frontend/src/components/SidePopup.js",["449","450","451"],"import React, { PureComponent } from \"react\";\nimport web3Config from \"../config/web3Config\";\n\nexport default class SidePopup extends PureComponent {\n    constructor(props){\n        super();\n        this.state = {\n            web3: props.web3,\n            web3Config: props.web3Config\n        }\n    }\n\n    componentWillReceiveProps(newProps){\n        this.setState({\n            web3: newProps.web3,\n            web3Config: newProps.web3Config\n        })\n    }\n\n    render() {\n\n        return (\n            <div className={`side-Popup ${this.props.sideBar && 'active'}` }>\n                <div className=\"popup-Box\">\n\n                    <div className=\"sidePopup-tablink\">\n                        <span className=\"spTitle01\">Swap limit </span>\n                        {/* <a href=\"#\" className=\"active\">Swap Limit</a> */}\n                    </div> \n\n                    {/* <!-- Gas limit Content  -->  */}\n\n\n                      <div>\n                        <div className=\"text-Wrap\">\n                            <div className=\"text-Title\">Expedite swap via SP :<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></div>\n                            <div className=\"amt-Text\">\n                            <div className=\"apollo-element apollo-element-active apollo-field-switcher\"> \n                                            <div className=\"apollo-fieldset\">\n                                                <label> <input type=\"checkbox\"  name=\"shortcode[active]\" value=\"1\" data-depend-id=\"active\" data-atts=\"active\" />\n                                                    <em data-on=\"on\" data-off=\"off\"></em><span></span>\n                                                </label> \n                                            </div> \n                                        </div>\n                                        </div>\n                        </div> \n                         \n                        <div className=\"text-Wrap slDisable\">\n                            <div className=\"text-Title\">Send:</div>\n                            <div className=\"amt-Text \">\n                                <span className=\"amtCurrecy \">$</span>\n                                <input type=\"text\" defaultValue=\"100\" />\n                            </div>\n                        </div>\n\n                        <div className=\"text-Wrap slDisable\">\n                            <div className=\"text-Title\" style={{marginTop: '16px', marginBottom: 'auto'}}>Receive 1:1 same face value :</div>\n                            <div className=\"cheMBX inline\"> \n                                <div className=\"md-radio\">\n                                    <input type=\"radio\"  id=\"rr05\" name=\"stepin48\" /> \n                                        <label htmlFor=\"rr05\">As Market<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i> </label>\n                                </div> \n                                <div className=\"md-radio\">\n                                    <input type=\"radio\" defaultChecked id=\"rr06\" name=\"stepin48\" /> \n                                        <label htmlFor=\"rr06\">As sent<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i> </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"text-Wrap slDisable\">\n                            <div className=\"text-Title\">Minimum amount to swap with :</div>\n                            <div className=\"amt-Text \">\n                                <span className=\"amtCurrecy \">$</span>\n                                <input type=\"text\" defaultValue=\"100\" />\n                            </div>\n                        </div> \n                        <div className=\"text-Wrap slDisable\">\n                            <div className=\"text-Title\">Max users to swap with :</div>\n                            <div className=\"amt-Text\">10</div>\n                        </div>\n                        <div className=\"text-Wrap\">\n                            <div className=\"text-Title\">Ethereum gas :</div>\n                            <div className=\"amt-Text\">0.000253 ETH</div>\n                        </div>\n                        <div className=\"text-Wrap\">\n                            <div className=\"text-Title\">Bitcoin transfer commission :</div>\n                            <div className=\"amt-Text\">0.000235 BTC</div>\n                        </div>\n                        <div className=\"text-Wrap\">\n                            <div className=\"text-Title\">3<sup>rd</sup> party on-chain validation :</div>\n                            <div className=\"amt-Text\">0.000135 ETH</div>\n                        </div>\n                        <div className=\"text-Wrap\">\n                            <div className=\"text-Title\">SmartSwap transaction fee : <i className=\"help-circle\"><i className=\"fas fa-question-circle protip\"\n                                    data-pt-position=\"top\" data-pt-title=\"80% of fees goes to support liquidity for SMART token and 20% goes to Atom Foundation to support development \"\n                                    aria-hidden=\"true\"></i></i></div>\n                            <div className=\"amt-Text\">$0 / 0%</div>\n                        </div>\n                        <div className=\"text-Wrap\">\n                            <div className=\"text-Title\">Slippage :</div>\n                            <div className=\"amt-Text\">$0 / 0%</div>\n                        </div> \n                        <div className=\"text-Wrap\">\n                            <div className=\"text-Title\">Max estimate cost :</div>\n                            <div className=\"amt-Text red-Color\">-$5.7556 (0.01235 ETH | 0.0002 BTC)</div>\n                        </div>\n                        <div className=\"text-Wrap\">\n                            <div className=\"text-Title\">1:1 SMART/2 rebate  :</div>\n                            <div className=\"amt-Text green-Color\">+$5.7556 (5.7556 ZERO/1)</div>\n                        </div>\n                        <div className=\"text-Wrap\">\n                            <div className=\"text-Title\">Final cost to use SmartSwap :</div>\n                            <div className=\"amt-Text\">$0 / 0%</div>\n                        </div>\n                        <ul className=\"text-Box\">\n                            <li><span className=\"icon-Box\"><i className=\"fas fa-exclamation-circle\"></i></span><span>SmartSwap reimburses all swap fees and does not allow any loss of value due to spread or volatility. The estimated fees cost covers the swap fees and the direct cost of blockchain gas. If the user is swapping BTC, there is an additional cost for 3rd party providers to validate on-chain the exact deposit amount of BTC.</span></li>\n                            <li><span>A user sending BTC will deposit the maximum estimated gas cost to a temporary wallet generated by SmartSwap and 100% owned by the user. If the total gas cost at the end of the swap is less than the estimated amount, the temporary wallet returns the balance to the user’s wallet.</span></li>\n                            <li><span>Once the final cost of gas and fees is known at the end of the swap, SmartSwap reimburses users with SMART at 100%.</span></li>\n                        </ul>\n                    </div>  \n\n                    {/* <!-- swap limit Content  --> */}\n                    {/* <div>\n                        <div className=\"text-Wrap\">\n                            <div className=\"text-Title\">Send :</div>\n                            <div className=\"amt-Text\">\n                                <span className=\"amtCurrecy\">$</span>\n                                <input type=\"text\" value=\"\" />\n                            </div>\n                        </div>\n                        <div className=\"sidepTitle01\">Receive 1:1</div>\n                        <div className=\"radioWrap\">\n                            <div className=\"md-radio\">\n                                <input type=\"radio\" id=\"radio145\" name=\"stepin50\" value=\"option145\" checked=\"\" />\n                                <label htmlFor=\"radio145\">Same face value as market <i className=\"help-circle\"><i className=\"fas fa-question-circle protip\"\n                                    data-pt-position=\"top\" data-pt-title=\"Help Text Here\"\n                                    aria-hidden=\"true\"></i></i></label>\n                            </div>\n                            <div className=\"md-radio\">\n                                <input type=\"radio\" id=\"radio146\" name=\"stepin50\" value=\"option146\" />\n                                <label htmlFor=\"radio146\">Same face value as sends</label>\n                            </div>\n                            \n                        </div> \n                        <ul className=\"text-Box\">\n                            <li><span className=\"icon-Box\"><i className=\"fas fa-exclamation-circle\"></i></span><span>SmartSwap reimburses all swap fees and does not allow any loss of value due to spread or volatility. The estimated fees cost covers the swap fees and the direct cost of blockchain gas. If the user is swapping BTC, there is an additional cost for 3rd party providers to validate on-chain the exact deposit amount of BTC.</span></li>\n                            <li><span>A user sending BTC will deposit the maximum estimated gas cost to a temporary wallet generated by SmartSwap and 100% owned by the user. If the total gas cost at the end of the swap is less than the estimated amount, the temporary wallet returns the balance to the userâ€™s wallet.</span></li>\n                            <li><span>Once the final cost of gas and fees is known at the end of the swap, SmartSwap reimburses users with SMART at 100%.</span></li>\n                        </ul>\n                    </div> */}\n\n\n\n\n\n                    <a href=\"javascript:void\" className=\"close-Icon\" onClick={this.props.closePopup }><img src=\"images/close-btn.png\" alt=\"\"/></a>\n\n                </div>\n            </div>       \n        )\n\n    }\n\n}","/var/www/html/SmartSwap_frontend/src/components/withdraw_token.js",["452","453","454","455"],"import React, { PureComponent } from \"react\";\nimport data, { tokenDetails } from \"../config/constantConfig\";\n\nexport default class WithDrawToken extends PureComponent {\n    constructor(props) {\n        super();\n        this.state = {\n            value: 45000,\n            web3: props.web3,\n            web3Config: props.web3Config,\n            coinList: tokenDetails,\n            isOpen1: false,\n            isOpen2: false\n        }\n    }\n\n    componentWillReceiveProps(newProps) {\n        this.setState({\n            web3: newProps.web3,\n            web3Config: newProps.web3Config\n        })\n    }\n\n    componentDidMount() {\n        // console.log(this.state.coinList)\n    }\n\n    toggle = index => {\n        let collapse = \"isOpen\" + index;\n        this.setState(prevState => ({ [collapse]: !prevState[collapse] }));\n    };\n\n    render() {\n\n        return (\n            <div className=\"main-Popup wallet-Popup\" id=\"WithdrawToken\">\n\n                <div className=\"container-Grid\">\n \n                        \n                        <div className=\"wtMBX\">\n                        <div class=\"peerTitle01\">Withdraw Token</div>\n                            <div class=\"gwFormSbox01\">\n                                <div class=\"gwFormTitle01\">Tokens name</div>\n                                    <select name=\"fontStyle\" id=\"fontStyle\" class=\"subdomain\" style={{padding: '20px 15px',  width: '100%',  backgroundColor: 'rgb(39, 30, 58)', color: 'rgb(255, 255, 255)', border: '0px'}} >\n                                        <option value=\"a\">Token Name A</option>\n                                        <option value=\"b\">Token Name B</option> \n                                    </select>\n                            </div>\n                            <div class=\"gwFormSbox01\">\n                                <div class=\"gwFormTitle01\">Tokens to withdraw</div>\n                                    <input name=\"fontStyle\" id=\"fontStyle\" class=\"subdomain\" style={{padding: '20px 15px',  width: '100%',  backgroundColor: 'rgb(39, 30, 58)', color: 'rgb(255, 255, 255)', border: '0px'}} > \n                                    </input>\n                                    <div class=\"smlInfotxt01\" style={{textAlign: 'left'}}>Max 7,589.653 SMART</div>\n                            </div>\n                            <div class=\"gwFormSFormbox03\"><button class=\"gwFormBTN01 blackBack\">WITHDRAW</button></div>\n\n\n\n\n                        </div>\n \n\n                </div>\n\n                <a href=\"javascript:void(0);\" onClick={() => { this.props.closePopup(\"WithdrawToken\") }} className=\"close-Icon\"></a>\n            </div>\n        )\n\n    }\n\n}","/var/www/html/SmartSwap_frontend/src/components/LiquidityProvider.js",["456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486"],"import React, { PureComponent } from \"react\";\nimport { tokenDetails } from \"../config/constantConfig\";\nimport Web3 from 'web3';\nimport web3Config from \"../config/web3Config\";\nimport Collapse from \"@kunukn/react-collapse\";\nimport InputRange from 'react-input-range';\nimport CONSTANT from '../constants';\nimport swapFactoryAbi from '../abis/swapFactory.json';\nimport constantConfig from '../config/constantConfig';\nimport notificationConfig from '../config/notificationConfig';\nimport AxiosRequest from \"../helper/axiosRequest\";\nimport SwapFactoryContract from '../helper/swapFactoryContract';\nimport SPContract from '../helper/spContract';\nimport { LoopCircleLoading } from 'react-loadingg';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DateFormat from \"dateformat\";\n\nvar _ = require('lodash');\n\nexport default class LiquidityProvider extends PureComponent {\n    constructor(props) {\n        super();\n        this.state = {\n            web3: null,\n            web3Config: null,\n            coinList: tokenDetails,\n            isOpen1: false,\n            isOpen2: false,\n            btnClick: false,\n            selectedTokenA: 'ETH',\n            selectedTokenB: 'BNB',\n            // input fields\n            spAccount: null,\n            networkId: null,\n            tokenA: null,\n            tokenB: null,\n            amountA: null,\n            walletAddressToSend: null,\n            walletAddressToReceive: null,\n            gasAndFeeAmount: 0,\n            minGasAndFeeAmount: 0,\n            maxGasAndFeeAmount: 0,\n            minStepForGasAndFeeAmount: 0,\n            swapSpeedMode: 'UPFRONT',\n            spreadAmount: 100,\n            spProfitPercent: 0.3,\n            accumulateFundsLimit: 0.3,\n            stopRepeatsMode: 3,\n            stopRepeatsOnDate: new Date(),\n            stopRepeatsAfterCalls: 200,\n            withdrawMode: 3,\n            withdrawOnDate: new Date(),\n            withdrawAfterCalls: 250,\n            cexApiKey: null,\n            cexApiSecret: null,\n            txid: null,\n            smartSwapContractAddress: 'Deploy contract to get this address.',\n            confirmed: false,\n            deployed: false,\n            updating: false,\n            reAuthrizeing: false,\n            deployButtonText: \"DEPLOY SMART CONTRACT\",\n            updateButtonText: \"UPDATE SMART CONTRACT\",\n            loadingIcon: false,\n            errorMessage: null,\n            serverError: null,\n            isActiveContractExist: false,\n            spData: null,\n            contractCreatedAt: '',\n            baseState: null\n        }\n    }\n\n    componentWillReceiveProps(newProps) {\n        // this.setState({\n        //     web3: newProps.web3,\n        //     web3Config: newProps.web3Config\n        // })\n\n        // detect Network account change\n        window.ethereum.on('networkChanged', networkId => {\n            console.log('networkChanged', networkId);\n            this.setState({\n                web3: null,\n                confirmed: false,\n                isActiveContractExist: false,\n                spData: null,\n                smartSwapContractAddress: null,\n                spAccount: null\n            });\n            this.resetForm();\n        });\n\n        // detect Network account change\n        window.ethereum.on('chainChanged', networkId => {\n            //networkChanged will emit the network ID as a decimal string\n            //chainChanged will emit the chain ID as a hexadecimal string\n        });\n\n        window.ethereum.on('accountsChanged', accounts => {\n            console.log('account Changed');\n            this.setState({\n                web3: null,\n                confirmed: false,\n                isActiveContractExist: false,\n                spData: null,\n                smartSwapContractAddress: null,\n                spAccount: null\n            });\n            // on account change currently disconnecting wallet so we can again check active contract on wallet connect \n\n            this.resetForm();\n        });\n        \n\n    }\n\n    componentDidMount() {\n\n        // preserve the initial state in a new object\n        this.setState({\n            baseState: this.state\n        });\n\n        console.log(this.state.coinList)\n        this.setState({\n            web3Ethereum: new Web3(\n                new Web3.providers.WebsocketProvider(CONSTANT.RPC_PROVIDER_ETHEREUM)\n            ),\n            web3Binance: new Web3(\n                new Web3.providers.HttpProvider(CONSTANT.RPC_PROVIDER_BINANCE)\n            ),\n        });\n\n        this.setState({\n            loading: true,\n            tokenA: this.state.coinList[this.state.selectedTokenA]['address'],\n            tokenB: this.state.coinList[this.state.selectedTokenB]['address']\n        }, async() => {\n            await this.initInstance();\n        });\n\n    }\n\n    resetForm(){\n        this.setState(this.baseState);\n        this.dispatchEventHandler(this.amountA, '');\n        this.dispatchEventHandler(this.walletAddressToSend, '');\n        this.dispatchEventHandler(this.walletAddressToReceive, '');\n        this.dispatchEventHandler(this.amountA, '');\n        this.dispatchEventHandler(this.cexApiKey, '');\n        this.dispatchEventHandler(this.cexApiSecret, '');\n        this.dispatchEventHandler(this.withdrawMode3, 3, 'checked', 'click');\n        this.dispatchEventHandler(this.stopRepeatsMode3, 3, 'checked', 'click');\n        this.dispatchEventHandler(this.spProfitPercent, '');\n        this.dispatchEventHandler(this.accumulateFundsLimit, '');\n        //this.dispatchEventHandler(this.gasAndFeeAmount, 0);\n        this.dispatchEventHandler(this.swapSpeedMode1, 'UPFRONT', 'checked', 'click');\n    }\n\n    toggle = index => {\n        let collapse = \"isOpen\" + index;\n        this.setState(prevState => ({\n            [collapse]: !prevState[collapse] }));\n        this.toggleActiveContractSection();\n    };\n\n    changeTokenA(token) {\n        this.setState({\n            selectedTokenB: this.state.selectedTokenA,\n            tokenB: this.state.coinList[this.state.selectedTokenA]['address'],\n            selectedTokenA: token,\n            tokenA: this.state.coinList[token]['address'],\n            networkId: web3Config.getNetworkId(),\n            spAccount: web3Config.getAddress()\n        });\n        //this.toggleActiveContractSection();\n    };\n\n    changeTokenB(token) {\n        this.setState({\n            selectedTokenA: this.state.selectedTokenB,\n            tokenA: this.state.coinList[this.state.selectedTokenB]['address'],\n            selectedTokenB: token,\n            tokenB: this.state.coinList[token]['address'],\n            networkId: web3Config.getNetworkId(),\n            spAccount: web3Config.getAddress()\n        });\n        //this.toggleActiveContractSection();\n    };\n\n    toggleActiveContractSection(){\n        if(this.state.spData !== null){\n            const activeContractAddress = this.state.spData.find(obj => {\n                return obj.networkId === this.state.networkId;\n            }).smartContractAddress;\n            \n            if(activeContractAddress){\n                //notificationConfig.success('Active contract found.');   \n                this.setState({\n                    confirmed: true,\n                    isActiveContractExist: true,\n                    smartSwapContractAddress: activeContractAddress,\n                    deployed: true\n                });\n            } else {\n                this.setState({\n                    confirmed: false,\n                    isActiveContractExist: false,\n                    smartSwapContractAddress: null,\n                    deployed: false\n                });\n            }\n        }\n    }\n\n    async connectWallet() {\n        this.setState({ btnClick: true });\n        await web3Config.connectWallet(0);\n        let networkId = web3Config.getNetworkId();\n\n\n\n        if (!constantConfig.allowedNetwork.includes(networkId)) {\n            notificationConfig.error('Please Select Ethereum or BSC Network');\n            this.setState({ btnClick: false });\n            return;\n        }\n        if (\n            constantConfig.tokenDetails[this.state.selectedTokenA].networkId !==\n            networkId &&\n            (networkId === 97 || networkId === 56)\n        ) {\n            notificationConfig.warning('Change metamask network to Ethereum Or Change token A BNB !');\n            return;\n        } else if (\n            constantConfig.tokenDetails[this.state.selectedTokenA].networkId !==\n            networkId &&\n            (networkId === 42 || networkId === 1)\n        ) {\n            notificationConfig.warning('Change metamask network to Binance! Or Change token A ETH !');\n            return;\n        }\n        this.setState({\n            web3: web3Config.getWeb3(),\n            btnClick: false,\n            networkId: networkId,\n            spAccount: web3Config.getAddress()\n        });\n        \n        this.setGasFeeAndAmountMinMaxRanges(networkId);\n        \n        await this.getActiveContracts();\n\n    }\n\n    setGasFeeAndAmountMinMaxRanges(networkID){\n        if(networkID == Number(process.env.REACT_APP_BSC_CHAIN_ID)){\n            this.setState({\n                minGasAndFeeAmount: 0.5,\n                gasAndFeeAmount: 0.5,\n                maxGasAndFeeAmount: 500,\n                minStepForGasAndFeeAmount: 0.5,\n                selectedTokenA: 'BNB',\n                selectedTokenB: 'ETH',\n            })\n        }\n        if(networkID == Number(process.env.REACT_APP_ETH_CHAIN_ID)){\n            this.setState({\n                minGasAndFeeAmount: 0.05,\n                gasAndFeeAmount: 0.05,\n                maxGasAndFeeAmount: 50,\n                minStepForGasAndFeeAmount: 0.05,\n                selectedTokenA: 'ETH',\n                selectedTokenB: 'BNB',                \n            })\n        }        \n    }\n\n    async initInstance() {\n        let { web3Binance, web3Ethereum } = this.state;\n        let instanceSwapFactoryBinance = null;\n        let instanceSwapFactoryEthereum = null;\n        instanceSwapFactoryBinance = new web3Binance.eth.Contract(\n            swapFactoryAbi,\n            constantConfig[CONSTANT.NETWORK_ID.BINANCE].swapFactoryContract\n        );\n        instanceSwapFactoryEthereum = new web3Ethereum.eth.Contract(\n            swapFactoryAbi,\n            constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].swapFactoryContract\n        );\n\n        this.setState({\n            instanceSwapFactoryBinance,\n            instanceSwapFactoryEthereum\n        });\n    }\n\n    async deployContract(event){\n        \n        // set this to disable deploy button\n        this.setState({\n            deployed: true,\n            loadingIcon: true,\n            deployButtonText: \"Deploying...\",\n            errorMessage: null\n        });\n\n        console.log(`deploying contact on network - ${web3Config.getNetworkId()}`)\n\n        let args = {};\n        if(Number(this.state.stopRepeatsMode) == 1){\n            console.log('Stop mode 1');\n            Object.assign(args, {\n                stopRepeatsOnDate: this.state.stopRepeatsOnDate,\n                stopRepeatsAfterCalls: null\n            });\n        }\n\n        if(Number(this.state.stopRepeatsMode) == 2){\n            console.log('Stop mode 2');\n            Object.assign(args, {\n                stopRepeatsOnDate: null,\n                stopRepeatsAfterCalls: this.state.stopRepeatsAfterCalls\n            });            \n        }\n\n        if(Number(this.state.stopRepeatsMode) == 3){\n            console.log('Stop mode 3');\n            Object.assign(args, {\n                stopRepeatsOnDate: null,\n                stopRepeatsAfterCalls: null\n            }); \n        }\n\n        if(Number(this.state.withdrawMode) == 1){\n            console.log('Stop mode 1');\n            Object.assign(args, {\n                withdrawOnDate: this.state.withdrawOnDate,\n                withdrawAfterCalls: null\n            });\n        }\n\n        if(Number(this.state.withdrawMode) == 2){\n            console.log('Stop mode 2');\n            Object.assign(args, {\n                withdrawOnDate: null,\n                withdrawAfterCalls: this.state.withdrawAfterCalls\n            });            \n        }\n\n        if(Number(this.state.withdrawMode) == 3){\n            console.log('Stop mode 3');\n            Object.assign(args, {\n                withdrawOnDate: null,\n                withdrawAfterCalls: null\n            }); \n        }\n        \n\n        let finalArgs = {\n            data: Object.assign(args, {\n                spAccount: this.state.spAccount,\n                networkId: this.state.networkId,\n                tokenA: this.state.tokenA,\n                tokenB: this.state.tokenB,\n                amountA: this.state.amountA === null ? ('').toString() : this.state.amountA,\n                walletAddressToSend: this.state.walletAddressToSend === null ? ('').toString() : this.state.walletAddressToSend,\n                walletAddressToReceive: this.state.walletAddressToReceive === null ? ('').toString() : this.state.walletAddressToReceive,\n                gasAndFeeAmount: this.state.gasAndFeeAmount,\n                swapSpeedMode: this.state.swapSpeedMode,\n                spProfitPercent: this.state.spProfitPercent,\n                accumulateFundsLimit: this.state.accumulateFundsLimit,\n                stopRepeatsMode: this.state.stopRepeatsMode,\n                withdrawMode: this.state.withdrawMode,\n                cexApiKey: this.state.cexApiKey === null ? ('').toString() : this.state.cexApiKey,\n                cexApiSecret: this.state.cexApiSecret === null ? ('').toString() : this.state.cexApiSecret\n            }),\n            // data: {\n            //     spAccount: '0x22a6a4Dd1eB834f62c43F8A4f58B7F6c1ED5A2F8',\n            //     networkId: 42,\n            //     tokenA: '0x0000000000000000000000000000000000000002',\n            //     tokenB: '0x0000000000000000000000000000000000000001',\n            //     amountA: 100,\n            //     walletAddressToSend: '0x22a6a4Dd1eB834f62c43F8A4f58B7F6c1ED5A2F8',\n            //     walletAddressToReceive: '0x22a6a4Dd1eB834f62c43F8A4f58B7F6c1ED5A2F8',\n            //     gasAndFeeAmount: 10,\n            //     spProfitPercent: 0.3,\n            //     accumulateFundsLimit: 0.5,\n            //     stopRepeatsMode: 3,\n            //     stopRepeatsOnDate: 'April 2,2021',\n            //     stopRepeatsAfterCalls: 0,\n            //     withdrawMode: 3,\n            //     withdrawOnDate: 'April 2,2021',\n            //     withdrawAfterCalls: 0,\n            //     cexApiKey: '00000000ab',\n            //     cexApiSecret: '00000000yz'\n            // },            \n            path: 'become-swap-provider',\n            method: 'POST'\n        };\n\n        console.log(finalArgs)\n\n        try{\n            let response = await AxiosRequest.request(finalArgs);\n            console.log(response);\n            if(response.status === 201){\n                console.log('record created!');\n                let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), this.state.networkId);\n                swapFactory.addSwapProvider(\n                    response.data.tokenA.address,\n                    response.data.tokenB.address,\n                    response.data.walletAddresses.toSend,\n                    response.data.walletAddresses.toReceive,\n                    response.data.gasAndFeeAmount.$numberDecimal,\n                    async(hash) => {\n                        this.setState({\n                            txid: response.data._id,\n                        });\n                    },\n                    async(response) => {\n                    \n                        console.log({\n                            \"Contract response:\": response\n                        });\n    \n                        if(response.status === 1){\n                            // update tx hash to db\n                            let args = {\n                                data: {\n                                    docId: this.state.txid,\n                                    txid: response.transactionHash,\n                                    blockNumber: response.blockNumber,\n                                    networkId: this.state.networkId\n                                },\n                                path: 'update-tx-hash',\n                                method: 'POST'\n                            }\n                            response = await AxiosRequest.request(args);\n    \n                            if(response.status === 200){\n                                this.setState({\n                                    smartSwapContractAddress: response.data['smartContractAddress'],\n                                    confirmed: true,\n                                    deployButtonText: \"Contract Deployed\",\n                                    loadingIcon: false\n                                });\n                                notificationConfig.success('Swap provider Added');\n                            }\n    \n                            // this.setState({\n                            //     deployButtonText: \"Getting smart contract address...\"\n                            // });\n                            // await this.asyncInterval(10000);\n    \n                        }\n                        \n                    }\n                );\n            }\n    \n    \n    \n            if(response.status === 400){\n                this.setState({\n                    loadingIcon: false,\n                    deployButtonText: \"DEPLOY SMART CONTRACT\",\n                    deployed: false,\n                    errorMessage: response.data[0]\n                });\n                notificationConfig.error('Something went wrong!');\n            }\n    \n            if(response.status === 401){\n                this.setState({\n                    loadingIcon: false,\n                    deployButtonText: \"DEPLOY SMART CONTRACT\",\n                    deployed: false,\n                    serverError: response.data.errorMessage.error\n                });\n                notificationConfig.error('Something went wrong!');\n            }\n        } catch(err){\n            console.log(err);\n            notificationConfig.error('Server Error!');\n            this.setState({\n                loadingIcon: false,\n                deployButtonText: \"DEPLOY SMART CONTRACT\",\n                deployed: false\n            });\n        }\n        \n\n    }\n\n\n    dispatchEventHandler(inputRef, value, type='value', eventType='input'){\n        const valueSetter = Object.getOwnPropertyDescriptor(inputRef, type).set;\n        const prototype = Object.getPrototypeOf(inputRef);\n        const prototypeValueSetter = Object.getOwnPropertyDescriptor(prototype, type).set;\n        if (valueSetter && valueSetter !== prototypeValueSetter) {\n            prototypeValueSetter.call(inputRef, value);\n        } else {\n            valueSetter.call(inputRef, value);\n        }\n\n        if(eventType == 'mousemove'){\n            inputRef.dispatchEvent(new MouseEvent(eventType, { bubbles: true }));\n        } else {\n            inputRef.dispatchEvent(new Event(eventType, { bubbles: true }));\n        }\n        \n    }\n\n    async getActiveContracts(){\n\n        this.setState({\n            deployed: true,\n            deployButtonText: 'Getting active contract'\n        });\n\n        let args = {\n            data: {\n                spAccount: this.state.spAccount\n            },\n            path: 'active-contracts',\n            method: 'POST'\n        }\n\n        try{\n            let response = await AxiosRequest.request(args);\n            if(response.status === 200){\n                const isactiveContractExist = response.data.find(obj => {\n                    if((obj.networkId == this.state.networkId) && (this.state.spAccount == obj.walletAddresses.spAccount)){\n                        this.setState({\n                            isActiveContractExist: true\n                        });\n\n                        this.dispatchEventHandler(this.amountA, obj.tokenA.recievedAmount.$numberDecimal);\n                        this.dispatchEventHandler(this.walletAddressToReceive, obj.walletAddresses.toReceive);\n                        this.dispatchEventHandler(this.walletAddressToSend, obj.walletAddresses.toSend);\n                        this.dispatchEventHandler(this.spProfitPercent, obj.spProfitPercent);\n                        this.dispatchEventHandler(this.accumulateFundsLimit, obj.accumulateFundsLimit);\n                        this.dispatchEventHandler(this.cexApiKey, obj.cexData.key);\n                        this.dispatchEventHandler(this.cexApiSecret, obj.cexData.secret);\n                        \n                        if(obj.stopRepeats.mode == 3){\n                            this.dispatchEventHandler(this.stopRepeatsMode3, obj.stopRepeats.mode, 'checked', 'click');\n                        }\n\n                        if(obj.stopRepeats.mode == 2){\n                            this.dispatchEventHandler(this.stopRepeatsMode2, obj.stopRepeats.mode, 'checked', 'click');\n                            this.dispatchEventHandler(this.stopRepeatsAfterCalls, obj.stopRepeats.afterCalls);\n                        }\n                        \n                        if(obj.stopRepeats.mode == 1){\n                            this.dispatchEventHandler(this.stopRepeatsMode1, obj.stopRepeats.mode, 'checked', 'click');\n                            //this.dispatchEventHandler(this.stopRepeatsOnDate, obj.stopRepeats.onDate);\n                        }\n\n\n                        if(obj.withdraw.mode == 3){\n                            this.dispatchEventHandler(this.withdrawMode3, obj.withdraw.mode, 'checked', 'click');\n                        }\n                        \n                        if(obj.withdraw.mode == 2){\n                            this.dispatchEventHandler(this.withdrawMode2, obj.withdraw.mode, 'checked', 'click');\n                            this.dispatchEventHandler(this.withdrawAfterCalls, obj.withdraw.afterCalls);\n                            this.setState({\n                                withdrawOnDate: null\n                            });\n                        }\n                        \n                        if(obj.withdraw.mode == 1){\n                            this.dispatchEventHandler(this.withdrawMode1, obj.withdraw.mode, 'checked', 'click');\n                            //this.dispatchEventHandler(this.withdrawOnDate, obj.withdraw.onDate);\n                            this.setState({\n                                afterCalls: null\n                            });\n                        }\n                        \n                        if(obj.swapSpeedMode == 'UPFRONT'){\n                            this.dispatchEventHandler(this.swapSpeedMode1, obj.swapSpeedMode, 'checked', 'click');                            \n                            //this.dispatchEventHandler(this.swapSpeedMode3, obj.swapSpeedMode, 'checked', 'click');                            \n                        }\n\n                        if(obj.swapSpeedMode == 'REALTIME'){\n                            this.dispatchEventHandler(this.swapSpeedMode2, obj.swapSpeedMode, 'checked', 'click');\n                            //this.dispatchEventHandler(this.swapSpeedMode4, obj.swapSpeedMode, 'checked', 'click');\n                        }\n\n\n                        this.setState({\n                            contractCreatedAt: obj.createdAt\n                        });\n\n                        //this.dispatchEventHandler(this.gasAndFeeAmount, obj.gasAndFeeAmount.$numberDecimal, 'value', 'mousemove');\n\n                        \n\n                        return true;\n                    } else {\n                        return false;\n                    }\n                })\n\n                if(isactiveContractExist){\n                    notificationConfig.success('Active contract found.');   \n                    this.setState({\n                        spData: response.data,\n                        confirmed: true,\n                        isActiveContractExist: true,\n                        smartSwapContractAddress: isactiveContractExist.smartContractAddress,\n                        deployed: true\n                    });\n                } else {\n                    this.setState({\n                        deployed: false,\n                        deployButtonText: 'DEPLOY SMART CONTRACT'\n                    });\n                    notificationConfig.error('No active contract for the selected network.');                    \n                }\n            } else if(response.status === 404){\n                this.setState({\n                    deployed: false,\n                    deployButtonText: 'DEPLOY SMART CONTRACT'\n                });                \n                notificationConfig.error('No active contract.');\n            } else {\n                console.log(response);\n            }\n\n        } catch(err){\n            console.log(err);\n        }\n    }\n\n    asyncInterval = async(ms, triesLeft = 10) => {\n        return new Promise((resolve, reject) => {\n            const interval = setInterval(async() => {\n                let args = {\n                    path: `get-contract-address?docId=${this.state.txid}`,\n                    method: 'GET'\n                }\n                let response = await this.getContractAddress(args);\n                if ( response !== null) {\n                    resolve();\n                    clearInterval(interval);\n                    this.setState({\n                        smartSwapContractAddress: response\n                    });\n                } else if (triesLeft <= 1) {\n                    reject();\n                    clearInterval(interval);\n                }\n                triesLeft--;\n            }, ms);\n        });\n    }\n\n    getContractAddress = async(args) => {\n        let response = await AxiosRequest.request(args);\n        console.log({\n            getContractAddress: response\n        });\n        return response.data.smartContractAddress;\n    }\n\n    reAuthrizeFeeAndGasLimit = async() => {\n        if(this.state.deployed){\n            this.setState({\n                reAuthrizeing: true                \n            });\n            let newLimit = this.state.gasAndFeeAmount\n            let spContract = new SPContract(web3Config.getWeb3(), this.state.networkId, this.state.smartSwapContractAddress);\n            spContract.setFeeAmountLimit(\n                newLimit, \n                async(hash) => {},\n                async(response) => {\n                    console.log({\n                        \"SP Contract response:\": response\n                    });\n            \n                    if(response.status === 1){\n                        this.setState({\n                            gasAndFeeAmount: newLimit\n                        });\n    \n                        //spContract.getFeeAmountLimit();\n                        await AxiosRequest.request({\n                            data: {\n                                smartContractAddress: this.state.smartSwapContractAddress,\n                                gasAndFeeAmount: newLimit\n                            },\n                            path: \"update\",\n                            method: \"POST\"\n                        });\n\n                        notificationConfig.success('NEW GAS AND FEES LIMIT SET');\n\n                        this.setState({\n                            reAuthrizeing: false                \n                        });\n\n                    }\n            });\n        }\n    }\n\n    updateContract = async() => {\n        this.setState({\n            updating: true,\n            loadingIcon: true\n        });\n\n        let args = {};\n        if(Number(this.state.stopRepeatsMode) == 1){\n            console.log('Stop mode 1');\n            Object.assign(args, {\n                stopRepeatsOnDate: this.state.stopRepeatsOnDate,\n                stopRepeatsAfterCalls: null\n            });\n        }\n\n        if(Number(this.state.stopRepeatsMode) == 2){\n            console.log('Stop mode 2');\n            Object.assign(args, {\n                stopRepeatsOnDate: null,\n                stopRepeatsAfterCalls: this.state.stopRepeatsAfterCalls\n            });            \n        }\n\n        if(Number(this.state.stopRepeatsMode) == 3){\n            console.log('Stop mode 3');\n            Object.assign(args, {\n                stopRepeatsOnDate: null,\n                stopRepeatsAfterCalls: null\n            }); \n        }\n\n        if(Number(this.state.withdrawMode) == 1){\n            console.log('Stop mode 1');\n            Object.assign(args, {\n                withdrawOnDate: this.state.withdrawOnDate,\n                withdrawAfterCalls: null\n            });\n        }\n\n        if(Number(this.state.withdrawMode) == 2){\n            console.log('Stop mode 2');\n            Object.assign(args, {\n                withdrawOnDate: null,\n                withdrawAfterCalls: this.state.withdrawAfterCalls\n            });            \n        }\n\n        if(Number(this.state.withdrawMode) == 3){\n            console.log('Stop mode 3');\n            Object.assign(args, {\n                withdrawOnDate: null,\n                withdrawAfterCalls: null\n            }); \n        }\n\n\n        let finalArgs = {\n            data: Object.assign(args, {\n                smartContractAddress: this.state.smartSwapContractAddress,\n                amountA: this.state.amountA === null ? ('').toString() : this.state.amountA,\n                walletAddressToSend: this.state.walletAddressToSend === null ? ('').toString() : this.state.walletAddressToSend,\n                walletAddressToReceive: this.state.walletAddressToReceive === null ? ('').toString() : this.state.walletAddressToReceive,\n                spProfitPercent: this.state.spProfitPercent,\n                accumulateFundsLimit: this.state.accumulateFundsLimit,\n                stopRepeatsMode: this.state.stopRepeatsMode,\n                withdrawMode: this.state.withdrawMode,\n                cexApiKey: this.state.cexApiKey === null ? ('').toString() : this.state.cexApiKey,\n                cexApiSecret: this.state.cexApiSecret === null ? ('').toString() : this.state.cexApiSecret,\n                swapSpeedMode: this.state.swapSpeedMode === null ? 'UPFRONT' : this.state.swapSpeedMode\n            }),\n            // data: {\n            //     spAccount: '0x22a6a4Dd1eB834f62c43F8A4f58B7F6c1ED5A2F8',\n            //     networkId: 42,\n            //     tokenA: '0x0000000000000000000000000000000000000002',\n            //     tokenB: '0x0000000000000000000000000000000000000001',\n            //     amountA: 100,\n            //     walletAddressToSend: '0x22a6a4Dd1eB834f62c43F8A4f58B7F6c1ED5A2F8',\n            //     walletAddressToReceive: '0x22a6a4Dd1eB834f62c43F8A4f58B7F6c1ED5A2F8',\n            //     gasAndFeeAmount: 10,\n            //     spProfitPercent: 0.3,\n            //     accumulateFundsLimit: 0.5,\n            //     stopRepeatsMode: 3,\n            //     stopRepeatsOnDate: 'April 2,2021',\n            //     stopRepeatsAfterCalls: 0,\n            //     withdrawMode: 3,\n            //     withdrawOnDate: 'April 2,2021',\n            //     withdrawAfterCalls: 0,\n            //     cexApiKey: '00000000ab',\n            //     cexApiSecret: '00000000yz'\n            // },            \n            path: 'update',\n            method: 'POST'\n        };\n\n        console.log(finalArgs);\n        try{\n            let response = await AxiosRequest.request(finalArgs);\n            if(response.status == 200){\n                setTimeout(async() => {\n                    console.log('Updated');\n                    notificationConfig.success('Contract updated successfully');\n                    this.setState({\n                        updating: false,\n                        loadingIcon: false\n                    });\n                }, 3000);\n            }\n        } catch(err){\n            notificationConfig.error('Something went wrong!');\n        }\n\n    }\n\n    reAuthrizeSpreadLimit = async() => {\n        if(this.state.deployed){\n            this.setState({\n                reAuthrizeing: true                \n            });\n            let newLimit = this.state.spreadAmount;\n            //spContract.getFeeAmountLimit();\n            await AxiosRequest.request({\n                data: {\n                    smartContractAddress: this.state.smartSwapContractAddress,\n                    spreadAmount: newLimit\n                },\n                path: \"update\",\n                method: \"POST\"\n            });\n            notificationConfig.success('NEW SPREAD LIMIT SET');    \n            this.setState({\n                reAuthrizeing: false                \n            });        \n        }\n    }\n\n    updateSwapSpeedMode = async(mode) => {\n        if(this.state.deployed){\n            this.setState({\n                updating: true,\n                reAuthrizeing: true\n            });\n            let swapSpeedMode = mode;\n            await AxiosRequest.request({\n                data: {\n                    smartContractAddress: this.state.smartSwapContractAddress,\n                    swapSpeedMode: swapSpeedMode\n                },\n                path: \"update\",\n                method: \"POST\"\n            });\n            notificationConfig.success('Swap speed mode updated.');    \n            this.setState({\n                updating: false,\n                reAuthrizeing: false              \n            });       \n        }   \n        this.setState({\n            swapSpeedMode: mode              \n        });\n    }\n\n\n\n    render() {\n\n        const smallError = {\n            fontSize: \"13px\",\n            lineHeight: \"20px\" \n        };\n\n        return (\n            <div className=\"main-Popup wallet-Popup\" id=\"LiquidityProvider\">\n                <div className=\"container-Grid\">\n                    <div className=\"LiProTitle01\">Become a Swap Provider</div>\n                    { this.state.serverError !== null && \n                        <div className=\"error-Msg\">\n                            <label>{this.state.serverError}</label>\n                        </div>\n                    }                       \n                    <div className=\"LiProFormMbox\">\n\n                        <div className=\"LiProfSbox01\">\n                            <div className=\"LiProTitle02\">SEND</div>\n                        </div>\n                        <div className=\"LiProfSbox02\">\n                            <div className=\"LiProTitle02\">RECEIVED</div>\n                        </div>\n                        <div className=\"LiProfSbox01 smFixer01\">\n                            <div className=\"LiProLable\">Choose the amount of token A to sell on Smartswap</div>\n                            <div className=\"bspMBX01 smFixer06\">\n                                <div className=\"bspSBX01\">\n                                    <div className=\"LiproInput01 withLable01\">\n                                        <span>$</span>\n                                        <input \n                                            type=\"text\" \n                                            defaultValue='' \n                                            placeholder=\"Amount\" \n                                            onChange={event => this.setState({amountA: event.target.value})}  \n                                            ref={(input)=> this.amountA = input}\n                                        />\n                                    </div>\n                                    <br></br>\n                                    { this.state.errorMessage !== null && this.state.errorMessage.includes(\"amountA\") && \n                                    <div className=\"error-Msg\" style={smallError}>\n                                        <label>{this.state.errorMessage}</label>\n                                    </div>\n                                    }                                    \n                                </div>\n                                <div className=\"bspSBX01\">\n                                    <div className=\"LiproDropdown\">\n                                        <button className='LiproDDbtn01' onClick={() => this.toggle(1)} >\n                                            <div className=\"ddIconBX\"> <span> <img src={this.state.coinList[this.state.selectedTokenA]['icon']} alt=\"\" /></span> {this.state.coinList[this.state.selectedTokenA]['symbol']}</div>\n                                            <i className=\"fas fa-caret-down\"></i>\n                                        </button>\n                                        <div className=\"ddContainer\">\n                                            <Collapse isOpen={this.state.isOpen1} className={\"collapse-css-transition\"} >\n                                                {\n                                                    Object.keys(this.state.coinList).map((coin)=>(\n                                                        this.state.selectedTokenA !== this.state.coinList[coin]['symbol'] && \n                                                        (this.state.coinList[coin]['approveRequire'] === false) &&\n                                                        <button \n                                                            onClick={() => {\n                                                                this.changeTokenA(this.state.coinList[coin]['symbol']);\n                                                            }}  \n                                                            key={this.state.coinList[coin]['symbol']} className='LiproDDbtn01'\n                                                        >\n                                                            <div className=\"ddIconBX\"> <span> <img src={this.state.coinList[coin]['icon']} alt=\"\" /></span> {this.state.coinList[coin]['symbol']}</div>\n                                                        </button>\n                                                    ))\n                                                }\n                                            </Collapse>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"FlyICO03\"> {\"<>\"} </div>\n                        </div>\n                        <div className=\"LiProfSbox02\">\n                            <div className=\"LiProLable\">Choose token B to receive from SmartSwap</div>\n                            <div className=\"LiproDropdown\">\n                                <button className='LiproDDbtn01' onClick={() => this.toggle(2)} >\n                                    <div className=\"ddIconBX\"> <span> <img src={this.state.coinList[this.state.selectedTokenB]['icon']} alt=\"\" /></span> {this.state.coinList[this.state.selectedTokenB]['symbol']}</div>\n                                    <i className=\"fas fa-caret-down\"></i>\n                                </button>\n                                <div className=\"ddContainer\">\n                                    <Collapse isOpen={this.state.isOpen2} className={\"collapse-css-transition\"} >\n                                    {\n                                        Object.keys(this.state.coinList).map((coin)=>(\n                                            (this.state.selectedTokenB !== this.state.coinList[coin]['symbol']) && \n                                            (this.state.coinList[coin]['approveRequire'] === false) &&\n                                            <button \n                                                onClick={() => {\n                                                    this.changeTokenB(this.state.coinList[coin]['symbol']);\n                                                }} \n                                                key={this.state.coinList[coin]['symbol']} className='LiproDDbtn01'\n                                            >\n                                                <div className=\"ddIconBX\"> <span> <img src={this.state.coinList[coin]['icon']} alt=\"\" /></span> {this.state.coinList[coin]['symbol']}</div>\n                                            </button>\n                                        ))\n                                    }\n                                    </Collapse>\n                                </div>\n                            </div>\n                        </div>                        \n                        <div className=\"LiProfSbox01\">\n                            <div className=\"LiProLable\">Wallet address that send token A<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Enter the wallet that will become a Swap Provider\" aria-hidden=\"true\"></i></i></div>\n                            <div className=\"LiproInput01\">\n                                <input \n                                    type=\"text\" \n                                    defaultValue='' \n                                    onChange={event => this.setState({walletAddressToSend: event.target.value})}  \n                                    ref={(input)=> this.walletAddressToSend = input}\n                                />\n                            </div>\n                            <br></br>\n                            { this.state.errorMessage !== null && this.state.errorMessage.includes(\"walletAddressToSend\") && \n                            <div className=\"error-Msg\" style={smallError}>\n                                <label>{this.state.errorMessage}</label>\n                            </div>\n                            }                                                               \n                        </div>\n                        <div className=\"LiProfSbox02\">\n                            <div className=\"LiProLable\">Wallet address that receive token B<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Enter the wallet that receives SP results and rewards, on same CEX such Binacne it may be the same wallet address as the one that send token A, but on some other CEX they may have two different wallets, one to send fund our and another to receive fund in.\" aria-hidden=\"true\"></i></i></div>\n                            <div className=\"LiproInput01\">\n                                <input \n                                    type=\"text\" \n                                    defaultValue='' \n                                    onChange={event => this.setState({walletAddressToReceive: event.target.value})}   \n                                    ref={(input)=> this.walletAddressToReceive = input}\n                                />\n                            </div>\n                            <br></br>\n                            { this.state.errorMessage !== null && this.state.errorMessage.includes(\"walletAddressToReceive\") && \n                            <div className=\"error-Msg\" style={smallError}>\n                                <label>{this.state.errorMessage}</label>\n                            </div>\n                            }                                   \n                        </div>\n\n                        <div className='spacerLine'></div>\n\n                        <div className=\"LiProfSbox01\">\t\n                            <div className=\"LiProTitle02\">CHOOSE YOUR SWAPPING SPEED<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text\" aria-hidden=\"true\"></i></i></div>\t\n                        </div>\t\n                        <div className=\"LiProfSbox02\">\t\n                            <div className=\"LiProTitle02\"> </div>\t\n                        </div>\t\n                        <div className=\"LiProfSbox01\">\t\n                                <div className='LipRadioFix01' >\t\n                                    <div className=\"md-radio md-radio-inline \">\t\n                                        <input \n                                            type=\"radio\" \n                                            id=\"spS01\" \n                                            name=\"s001\" \n                                            // defaultChecked\n                                            onChange = {() => { this.updateSwapSpeedMode('UPFRONT');} }\n                                            checked={this.state.swapSpeedMode === 'UPFRONT'}\n                                            ref={(input)=> this.swapSpeedMode1 = input}\n                                        />\t\n                                        <label htmlFor=\"spS01\"></label>\t\n                                    </div> \t\n                                    <div className=\"LiProFlexBX01 padFixer01\">\t\n                                       <div className=\"LipRTitle01\">Deposit token A to the smart contract upfront<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text\" aria-hidden=\"true\"></i></i></div>\t\n                                    </div>\t\n                                </div>                                                             \t\n                        </div>\t\n                        <div className=\"LiProfSbox02\">\t\n                         <div className='LipRadioFix01' >\t\n                                    <div className=\"md-radio md-radio-inline \">\t\n                                        <input \n                                            type=\"radio\" \n                                            id=\"spS02\" \n                                            name=\"s002\" \n                                            //defaultChecked\n                                            onChange = {() => { this.updateSwapSpeedMode('REALTIME');} }\n                                            checked={this.state.swapSpeedMode === 'REALTIME'}\n                                            ref={(input)=> this.swapSpeedMode2 = input}\n                                            />\t\n                                        <label htmlFor=\"spS02\"></label>\t\n                                    </div> \t\n                                    <div className=\"LiProFlexBX01 padFixer01\">\t\n                                       <div className=\"LipRTitle01\">Deposit token A to the smart contract in real time<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text\" aria-hidden=\"true\"></i></i></div>\t\n                                    </div>\t\n                                </div>                             \t\n                        </div>\t\n                        {\n                            this.state.errorMessage !== null && this.state.errorMessage.includes(\"swapSpeedMode\") && \n                            <div className=\"error-Msg\" style={smallError}>\n                                <label>{this.state.errorMessage}</label>\n                            </div>\n                        }\n\n                        <div className='spacerLine'></div>\n\n                        <div className=\"LiProfSbox03\">\n                            <div className=\"LiProTitle02\">GAS AND FEES</div>\n                            <div className=\"LiProLable mtFix01\">Set the maximum amount which the smart contract is authorized to withdraw from your CEX account to cover the gas and fees. Once the total is reached, the contract stops performing until reauthorized with a new limit</div>\n                            <div className=\"dragorInput v2\">\n                                <InputRange\n                                    step={this.state.minStepForGasAndFeeAmount}\n                                    maxValue={this.state.maxGasAndFeeAmount}\n                                    minValue={this.state.minGasAndFeeAmount}\n                                    value={this.state.gasAndFeeAmount}\n                                    formatLabel={value => this.state.selectedTokenA + ` ${value}`}\n                                    onChange={value => this.setState({ gasAndFeeAmount: value })} \n                                    ref={(input)=> this.gasAndFeeAmount = input}\n                                />\n                            </div>\n                            <br></br>\n                            { this.state.errorMessage !== null && this.state.errorMessage.includes(\"gasAndFeeAmount\") && \n                            <div className=\"error-Msg\" style={smallError}>\n                                <label>{this.state.errorMessage}</label>\n                            </div>\n                            }       \n                        </div>\n\n                        <div className='spacerLine'></div>\n                        <div className=\"LiProfSbox03\">\n                            <div className=\"LiProTitle02\">REPEAT</div>\n                        </div>\n\n                        <div className='LiProFlexBX01 smFixer07'>\n                            <div className=\"LiProfSbox01\">\n                                <div className=\"LiProLable\">Choose the minimum that you want to gain on each swap <i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Set a profit limit before funds are sent out to be swapped. </br></br>\n\nFor example, you can choose that you want your funds to swap only if it's gain 0.1% or 0.5% profits.  When you set the profit limit, take under consideration all the costs that you may pay to your CEX for such transaction\" aria-hidden=\"true\"></i></i></div>\n                            </div>\n                            <div className=\"LiProfSbox02\">\n                                <div className=\"LiproInput01 withLable01\">\n                                    <input \n                                        type=\"text\" \n                                        placeholder={this.state.spProfitPercent} \n                                        onChange={event => this.setState({spProfitPercent: event.target.value})} \n                                        ref={(input)=> this.spProfitPercent = input}\n                                    />\n                                    <span>%</span>\n                                </div>\n                                <div className=\"smlInfotxt01\">[0.161754 BNB/ETH]</div>\n                                <br></br>\n                                { this.state.errorMessage !== null && this.state.errorMessage.includes(\"spProfitPercent\") && \n                                <div className=\"error-Msg\" style={smallError}>\n                                    <label>{this.state.errorMessage}</label>\n                                </div>\n                                }                                \n                            </div>\n                        </div>\n\n\n                        <div className='LiProFlexBX01 smFixer07'>\n                            <div className=\"LiProfSbox01\">\n                                <div className=\"LiProLable\">Choose the minimum amount that you are willing to swap with<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"If you choose to accumulate 100% of the funds before withdrawing it from the smart contract to your CEX account, you will only pay gas once for one transaction. If you choose to trigger a withdraw from the smart contract to your CEX account every time there is accumulation of 10%, you should expect to pay 10x gas fees for 10 transactions \" aria-hidden=\"true\"></i></i></div>\n                            </div>\n                            <div className=\"LiProfSbox02\">\n                                <div className=\"LiproInput01 withLable01\">\n                                    <span>$</span>\n                                    <input \n                                        type=\"text\" \n                                        placeholder={this.state.accumulateFundsLimit} \n                                        onChange={event => this.setState({accumulateFundsLimit: event.target.value})} \n                                        ref={(input)=> this.accumulateFundsLimit = input}\n                                    />\n                                </div>\n                                <div className=\"smlInfotxt02\">Based on minimum 10% accumulation, expect to pay 10x gas cost  </div>\n                                <br></br>\n                                { this.state.errorMessage !== null && this.state.errorMessage.includes(\"accumulateFundsLimit\") && \n                                <div className=\"error-Msg\" style={smallError}>\n                                    <label>{this.state.errorMessage}</label>\n                                </div>\n                                }    \n                            </div>\n                        </div>\n\n                        {/* <div className='LiProFlexBX01 smFixer07'>\n                            <div className=\"LiProfSbox01\">\n                                <div className=\"LiProLable\">Sell token B for token A on CEX using</div>\n                            </div>\n                            <div className=\"LiProfSbox02\">\n                                <div className=\"gwFormSFormbox02\">\n                                    <div className=\"md-radio md-radio-inline\">\n                                        <input type=\"radio\" id=\"radio145\" name=\"stepin50\" value=\"option146\" /><label for=\"radio145\">\n                                            Market<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text Here\" aria-hidden=\"true\"></i></i>\n                                        </label>\n                                    </div>\n\n                                    <div className=\"md-radio md-radio-inline\">\n                                        <input type=\"radio\" id=\"radio146\" name=\"stepin50\" value=\"option145\" /><label for=\"radio146\">\n                                            Limit<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text Here\" aria-hidden=\"true\"></i></i>\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div> */}\n\n                        <div className='spacerLine'></div>\n                        <div className=\"LiProfSbox03\">\n                            <div className=\"LiProTitle02\">WITHDRAW</div>\n                        </div>\n\n                        <div className='LiProFlexBX01 tabFixer smFixer02' style={{alignItems: 'flex-start'}}>\n                            <div className=\"LiProfSbox01\" style={{paddingTop: '10px'}}>\n                                <div className=\"LiProLable\">Stop repeat on CEX <i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"This option denotes how many transactions you approve as a Swap Provider. Once the limit is reached, the API stops performing any repeats. Once the repeat stops, there is no way to change the process besides deploying a new Swap Provider contract with new rules.\" aria-hidden=\"true\"></i></i></div>\n                            </div>\n                            <div className=\"LiProfSbox02\">\n\n                                <div className='LipRadioFix01' >\n                                    <div className=\"md-radio md-radio-inline \">\n                                        <input \n                                            type=\"radio\" \n                                            id=\"s01\" \n                                            name=\"s11\" \n                                            value=\"s01\" \n                                            onChange={event => this.setState({stopRepeatsMode: 1})} \n                                            checked={this.state.stopRepeatsMode === 1}\n                                            ref={(input)=> this.stopRepeatsMode1 = input}\n                                        />\n                                        <label htmlFor=\"s01\"></label>\n                                    </div> \n                                    <div className='LiProFlexBX01 padFixer01'>\n                                        <div className=\"LiproInput01\">\n                                            <DatePicker\n                                                selected={this.state.stopRepeatsOnDate}\n                                                onChange={(date) => this.setState({stopRepeatsOnDate: date})}\n                                                peekNextMonth\n                                                showMonthDropdown\n                                                showYearDropdown\n                                                dropdownMode=\"select\"\n                                                dateFormat=\"dd/MM/yyyy\"\n                                                ref={(input)=> this.stopRepeatsOnDate = input}\n                                            />\n                                            <i class=\"fas fa-calendar-alt FlyICO\"></i>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className='LipRadioFix01' >\n                                    <div className=\"md-radio md-radio-inline \">\n                                        <input \n                                            type=\"radio\"  \n                                            id=\"s02\" \n                                            name=\"s11\" \n                                            value=\"s02\" \n                                            onChange={event => this.setState({stopRepeatsMode: 2})} \n                                            checked={this.state.stopRepeatsMode === 2}\n                                            ref={(input)=> this.stopRepeatsMode2 = input}\n                                        />\n                                        <label htmlFor=\"s02\"></label>\n                                    </div> \n                                    <div className=\"LiProFlexBX01 padFixer01\">\n                                        <div className=\"LiproInput01 withLable02\">\n                                            <input \n                                                type=\"text\" \n                                                placeholder={this.state.stopRepeatsAfterCalls} \n                                                onChange={event => this.setState({stopRepeatsAfterCalls: event.target.value})} \n                                                ref={(input)=> this.stopRepeatsAfterCalls = input}\n                                            />\n                                            {/* <div className=\"FlyICO02\">Days</div> */}\n                                            <span>Repeats</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className='LipRadioFix01' >\n                                    <div className=\"md-radio md-radio-inline \">\n                                        <input \n                                            type=\"radio\" \n                                            id=\"s03\" \n                                            name=\"s11\" \n                                            value=\"s03\" \n                                            onChange={event => this.setState({stopRepeatsMode: 3})} \n                                            checked={this.state.stopRepeatsMode === 3}\n                                            ref={(input)=> this.stopRepeatsMode3 = input}\n                                        />\n                                        <label htmlFor=\"s03\"></label>\n                                    </div> \n                                    <div className=\"LiProFlexBX01 padFixer01\">\n                                       <div className=\"LipRTitle01\">Never stop<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Run SP repeats non-stop as long as there is funds available in your CEX account \" aria-hidden=\"true\"></i></i></div>\n                                    </div>\n                                </div>\n \n                            </div>\n                        </div>\n\n\n                        <div className='LiProFlexBX01 tabFixer smFixer02'  style={{alignItems: 'flex-start'}}>\n                            <div className=\"LiProfSbox01\" style={{paddingTop: '10px'}}>\n                                <div className=\"LiProLable\">Withdraw from Smartswap<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"This option denotes how long you wish your funds to be used as a Swap Provider. Once the limit is reached, the API stops performing any repeats. Once the repeat stop, there is no way to change it besides to deploy a new swap provider contract with new rules.\" aria-hidden=\"true\"></i></i></div>\n                            </div>\n                            <div className=\"LiProfSbox02\"> \n                                <div className='LipRadioFix01' >\n                                    <div className=\"md-radio md-radio-inline \">\n                                        <input \n                                            type=\"radio\" \n                                            id=\"s04\" \n                                            name=\"s12\" \n                                            value=\"s04\" \n                                            onChange={event => this.setState({withdrawMode: 1})} \n                                            checked={this.state.withdrawMode === 1}\n                                            ref={(input)=> this.withdrawMode1 = input}\n                                        />\n                                        <label htmlFor=\"s04\"></label>\n                                    </div> \n                                    <div className='LiProFlexBX01 padFixer01'>\n                                        <div className=\"LiproInput01\">\n                                            <DatePicker\n                                                selected={this.state.withdrawOnDate}\n                                                onChange={(date) => this.setState({withdrawOnDate: date})}\n                                                peekNextMonth\n                                                showMonthDropdown\n                                                showYearDropdown\n                                                dropdownMode=\"select\"\n                                                dateFormat=\"dd/MM/yyyy\"\n                                                ref={(input)=> this.withdrawOnDate = input}\n                                            />\n                                            <i class=\"fas fa-calendar-alt FlyICO\"></i>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className='LipRadioFix01' >\n                                    <div className=\"md-radio md-radio-inline \">\n                                        <input \n                                            type=\"radio\" \n                                            id=\"s05\" \n                                            name=\"s12\" \n                                            value=\"s05\" \n                                            onChange={event => this.setState({withdrawMode: 2})} \n                                            checked={this.state.withdrawMode === 2}\n                                            ref={(input)=> this.withdrawMode2 = input}\n                                        />\n                                        <label htmlFor=\"s05\"></label>\n                                    </div> \n                                    <div className=\"LiProFlexBX01 padFixer01\">\n                                        <div className=\"LiproInput01 withLable02\">\n                                            <input \n                                                type=\"text\" \n                                                placeholder={this.state.withdrawAfterCalls} \n                                                onChange={event => this.setState({withdrawAfterCalls: event.target.value})}  \n                                                ref={(input)=> this.withdrawAfterCalls = input}\n                                            />\n                                            {/* <div className=\"FlyICO02\">Days</div> */}\n                                            <span>Repeats</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className='LipRadioFix01' >\n                                    <div className=\"md-radio md-radio-inline \">\n                                        <input \n                                            type=\"radio\" \n                                            id=\"s06\" \n                                            name=\"s12\" \n                                            value=\"s06\" \n                                            onChange={event => this.setState({withdrawMode: 3})} \n                                            checked={this.state.withdrawMode === 3}\n                                            ref={(input)=> this.withdrawMode3 = input}\n                                        />\n                                        <label htmlFor=\"s06\"></label>\n                                    </div> \n                                    <div className=\"LiProFlexBX01 padFixer01\">\n                                       <div className=\"LipRTitle01\">Never stop<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Run SP repeats non-stop as long as there is funds available in your CEX account \" aria-hidden=\"true\"></i></i></div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className='spacerLine'></div>\n                        {/* <div className=\"LiProfSbox03\">\n                            <div className=\"LiProTitle02\">WITHDRAW</div>\n                        </div> */}\n\n\n                        <div className='LiProFlexBX01 smFixer07'>\n                            <div className=\"LiProfSbox01\">\n                                <div className=\"LiProLable\">API Key<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Add your specific API key to the CEX of your choice\" aria-hidden=\"true\"></i></i></div>\n                            </div>\n                            <div className=\"LiProfSbox02\">\n                                <div className=\"LiproInput01\">\n                                    <input \n                                        type=\"text\" \n                                        defaultValue='' \n                                        onChange={event => this.setState({cexApiKey: event.target.value})} \n                                        ref={(input)=> this.cexApiKey = input}\n                                    />\n                                </div>\n                                <br></br>\n                                { this.state.errorMessage !== null && this.state.errorMessage.includes(\"cexApiKey\") && \n                                <div className=\"error-Msg\" style={smallError}>\n                                    <label>{this.state.errorMessage}</label>\n                                </div>\n                                }                                \n                            </div>\n                        </div>\n\n\n                        <div className='LiProFlexBX01 smFixer07'>\n                            <div className=\"LiProfSbox01\">\n                                <div className=\"LiProLable\">Security Key<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Add your specific Security Key to the CEX of your choice\" aria-hidden=\"true\"></i></i></div>\n                            </div>\n                            <div className=\"LiProfSbox02\">\n                                <div className=\"LiproInput01\">\n                                    <input \n                                        type=\"text\" \n                                        defaultValue='' \n                                        onChange={event => this.setState({cexApiSecret: event.target.value})} \n                                        ref={(input)=> this.cexApiSecret = input}\n                                    />\n                                </div>\n                                <br></br>\n                                { this.state.errorMessage !== null && this.state.errorMessage.includes(\"cexApiSecret\") && \n                                <div className=\"error-Msg\" style={smallError}>\n                                    <label>{this.state.errorMessage}</label>\n                                </div>\n                                }\n                            </div>\n                        </div>\n\n                        {( () => {\n                            if((this.state.web3 === null ||\n                                constantConfig.tokenDetails[\n                                    this.state.selectedTokenA\n                                ].networkId !== web3Config.getNetworkId())) {\n                                    return (<div className=\"LiProfSbox03\">\n                                        <div className='LiProformBTNbar'>\n                                            <button \n                                                onClick={this.connectWallet.bind(this)}\n                                            >CONNECT YOUR WALLET</button>\n                                        </div>\n                                    </div>) \n\n                                } else if (\n                                    (this.state.web3 !== null || constantConfig.tokenDetails[this.state.selectedTokenA].networkId === web3Config.getNetworkId()) \n                                    && this.state.isActiveContractExist === true) {\n                                        return (\n                                            <div className=\"LiProfSbox03\">\n                                                <div className='LiProformBTNbar'>\n                                                    <button onClick={this.updateContract.bind(this)} disabled={this.state.updating}>\n                                                        {this.state.updateButtonText}                                                         \n                                                        {this.state.loadingIcon === true &&\n                                                            <LoopCircleLoading\n                                                                height={'20px'}\n                                                                width={'20px'}\n                                                                color={'#ffffff'}\n                                                            />\n                                                        }\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        ) \n                                } else{\n                                    return (<div className=\"LiProfSbox03\">\n                                        <div className='LiProformBTNbar'>\n                                            <button \n                                                onClick={this.deployContract.bind(this)} disabled={this.state.deployed}\n                                            >\n                                                {this.state.deployButtonText} \n                                                {this.state.loadingIcon === true &&\n                                                    <LoopCircleLoading\n                                                        height={'20px'}\n                                                        width={'20px'}\n                                                        color={'#ffffff'}\n                                                    />\n                                                }\n                                            </button>\n                                        </div>\n                                    </div>)\n                                }\n                            }\n                        )()}\n                    </div>\n\n                    <div className='spacerLine'></div>\n                    {(this.state.confirmed === true) &&\n                    <div>\n                        <div className=\"LiProTitle03\">Below is your Swap Provider smart contract address\n                            <span>Whitelist this smart contract address on your account on your CEX<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Follow the instructions on your CEX to whitelist the SmartSwap address below\" aria-hidden=\"true\"></i></i></span>\n                        </div>\n\n                        <div className=\"spContrlMBX\">\n                            <div className='spCountrlTitle01'>SEND <span>{this.state.selectedTokenA}</span> {'<>'} RECEIVE <span>{this.state.selectedTokenB}</span></div>\n                            <div className='spContrlInputBX'>\n                                <i>></i>\n                                <input type=\"text\" value={this.state.smartSwapContractAddress} /> \n                                <a href=\"#\" class=\"LicCopyBTN v2\"><i class=\"fas fa-copy\"></i></a>\n                            </div>\n                            <div className='spContrlInfotxt'>\n                            Created at {DateFormat(this.state.contractCreatedAt, \"dddd, mmmm dS, yyyy, h:MM:ss TT\")} &nbsp;&nbsp;&nbsp;&nbsp; Balance:  425.563 {this.state.selectedTokenA} | $4,846 USDT\n                                <span>Withdraw all funds back to your CEX account</span>\n                            </div>\n                            <div className='spContrlInfotxt02'>AUTHORIZE NEW GAS AND FEES LIMIT<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Authorize more funds to gas and fees to keep your SP contract active.\" aria-hidden=\"true\"></i></i></div>\n                            <div className='spContrlSBX'>\n\n                                <div className='spContrlSSBX01'>\n                                <div className=\"dragorInput v2\">\n                                    <InputRange\n                                        step={this.state.minStepForGasAndFeeAmount}\n                                        maxValue={this.state.maxGasAndFeeAmount}\n                                        minValue={this.state.minGasAndFeeAmount}\n                                        value={this.state.gasAndFeeAmount}\n                                        formatLabel={value => this.state.selectedTokenA + ` ${value}`}\n                                        onChange={value => this.setState({ gasAndFeeAmount: value })} />\n                                </div>\n                                </div>\n                                <div className='spContrlSSBX02'>\n                                    <button \n                                        className='spContrlBTN01'\n                                        onClick={this.reAuthrizeFeeAndGasLimit.bind(this)}\n                                        disabled={this.state.reAuthrizeing}>\n                                        AUTHORIZE NEW LIMIT\n                                    </button>\n                                </div> \n                            </div> \n\n                            <div className='spContrlInfotxt02'>\n                                CHANGE THE MINIMUM SPREAD YOU WANT TO GAIN ON EACH SWAP\n                                <i className=\"help-circle\">\n                                    <i \n                                        className=\"fas fa-question-circle protip\" \n                                        data-pt-position=\"top\" \n                                        data-pt-title=\"Authorize more funds to gas and fees to keep your SP contract active.\" \n                                        aria-hidden=\"true\"></i>\n                                </i>\n                            </div>\t\n                            <div className='spContrlSBX'>\t\n                                <div className='spContrlSSBX01'>\t\n                                <div className=\"dragorInput v2\">\t\n                                    <InputRange\t\n                                        step={0.05}\n                                        maxValue={1}\n                                        minValue={0.2}\n                                        value={this.state.spreadAmount}\t\n                                        formatLabel={value => `${value.toFixed(2)}%`}\t\n                                        onChange={value => this.setState({ spreadAmount: value })} />\t\n                                </div>\n                                </div>\n                                <div className='spContrlSSBX02'>\n                                    <button \n                                        className='spContrlBTN01' \n                                        onClick={this.reAuthrizeSpreadLimit.bind(this)}\n                                        disabled={this.state.reAuthrizeing}>\n                                            AUTHORIZE NEW SPREAD\n                                    </button>\n                                </div>\n                            </div>\n                            <div className='spContrlInfotxt02'>CHANGE THE SWAP SPEED<i className=\"help-circle\">\n                                <i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text \" aria-hidden=\"true\"></i></i>\n                            </div>\n                            <div className='spscFix01'>\n                                <div className='LipRadioFix01'>  \t\n                                        <div className=\"md-radio md-radio-inline \">\t\n                                            <input \n                                                type=\"radio\" \n                                                id=\"spS03\" \n                                                name=\"s003\" \n                                                //defaultChecked\n                                                onChange = {() => { this.updateSwapSpeedMode('UPFRONT');} }\n                                                checked={this.state.swapSpeedMode === 'UPFRONT'}\n                                                ref={(input)=> this.swapSpeedMode3 = input}\n                                            />                                            \n                                            <label htmlFor=\"spS03\"></label>\t\n                                        </div> \t\n                                        <div className=\"LiProFlexBX01 padFixer01\">\t\n                                        <div className=\"LipRTitle01\">Deposit token A to the smart contract upfront<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text\" aria-hidden=\"true\"></i></i></div>\t\n                                        </div> \t\n                                </div>\t\n                                <div className='LipRadioFix01' >\t\n                                    <div className=\"md-radio md-radio-inline \">\t\n                                        <input \n                                            type=\"radio\" \n                                            id=\"spS04\" \n                                            name=\"s004\" \n                                            //defaultChecked\n                                            onChange = {() => { this.updateSwapSpeedMode('REALTIME');} }\n                                            checked={this.state.swapSpeedMode === 'REALTIME'}\n                                            ref={(input)=> this.swapSpeedMode4 = input}\n                                        />\n                                        <label htmlFor=\"spS04\"></label>\t\n                                    </div> \t\n                                    <div className=\"LiProFlexBX01 padFixer01\">\t\n                                        <div className=\"LipRTitle01\">\n                                            Deposit token A to the smart contract in real time<i className=\"help-circle\">\n                                                <i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text\" aria-hidden=\"true\"></i></i>\n                                        </div>\t\n                                    </div>\t\n                                </div> \t\n                            </div>         \t\n                        </div>\n                    </div>\n                    }\n                    {/* <div className=\"spContrlMBX\">\n                    <div className='spCountrlTitle01'>SEND <span>{this.state.selectedTokenA}</span> {'<>'} RECEIVE <span>{this.state.selectedTokenB}</span></div>\n                        <div className='spContrlInputBX'>\n                            <i>2</i>\n                            <input type=\"text\" value='0xF3B3f6F15d474C92cb4051c22697C371e6e117B1' />\n                            <a href=\"#\" class=\"LicCopyBTN v2\"><i class=\"fas fa-copy\"></i></a>\n                        </div>\n                        <div className='spContrlInfotxt'>\n                        Created at April 6,2021 05:21:36pm UTC &nbsp;&nbsp;&nbsp;&nbsp; Balance:  425.563 BNB | $4,846 USDT\n                            <span>Withdraw all funds back to your CEX account</span>\n                        </div>\n                        <div className='spContrlInfotxt02'>AUTHORIZE NEW GAS AND FEES LIMIT<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Authorize more funds to gas and fees to keep your SP contract active.\" aria-hidden=\"true\"></i></i></div>\n                        <div className='spContrlSBX'>\n\n                            <div className='spContrlSSBX01'>\n                            <div className=\"dragorInput v2\">  \n                                <InputRange\n                                    maxValue={100000}\n                                    minValue={100}\n                                    value={this.state.gasAndFeeAmount}\n                                    formatLabel={value => `$${value}`}\n                                    onChange={value => this.setState({ gasAndFeeAmount: value })} />\n                            </div>\n                            </div>\n                            <div className='spContrlSSBX02'>\n                                <button className='spContrlBTN01'>AUTHORIZE NEW LIMIT</button>\n                            </div> \n                        </div> \n                    </div> */}\n                </div>\n                <a href=\"javascript:void(0);\" onClick={() => { this.props.closePopup(\"LiquidityProvider\") }} className=\"close-Icon\"></a>\n            </div>\n        )\n\n    }\n\n}","/var/www/html/SmartSwap_frontend/src/components/liquidity_fountain_for_SPs.js",["487","488","489","490"],"import React, { PureComponent } from \"react\";\nimport data, { tokenDetails } from \"../config/constantConfig\"; \n\nexport default class LiquidityFountainSP extends PureComponent {\n    constructor(props) {\n        super();\n        this.state = {\n            value: 45000,\n            web3: props.web3,\n            web3Config: props.web3Config,\n            coinList: tokenDetails,\n            isOpen1: false,\n            isOpen2: false\n        }\n    }\n\n    componentWillReceiveProps(newProps) {\n        this.setState({\n            web3: newProps.web3,\n            web3Config: newProps.web3Config\n        })\n    }\n\n    componentDidMount() {\n        // console.log(this.state.coinList)\n    }\n\n    toggle = index => {\n        let collapse = \"isOpen\" + index;\n        this.setState(prevState => ({ [collapse]: !prevState[collapse] }));\n    };\n\n    render() {\n\n        return (\n            <div className=\"main-Popup wallet-Popup\" id=\"LiquidityFountainSP\">\n             \n                <div className=\"container-Grid\">\n\n                <div class=\"peerTitle01\">Liquidity Fountain for SPs</div>\n\t\t<div class=\"peerText01\">When users swap tokens on SmartSwap, the protocol takes the market price. SP’s are buying those tokens on the CEX through the API integrated on their account. The API is set to buy the tokens below the average market price to gain a spread. The structure creates a send, receive, repeat loop similar to a fountain that mines for SPs more of their favorite tokens without having to lock funds or wrap any tokens.</div>\n\n\n            <div className='lfforSPIMGBX'><img src=\"images/lfforSP-img.png\"   alt=\"\" /></div>\n\n                </div>\n\n                <a href=\"javascript:void(0);\" onClick={() => { this.props.closePopup(\"LiquidityFountainSP\") }} className=\"close-Icon\"></a>\n            </div>\n        )\n\n    }\n\n}","/var/www/html/SmartSwap_frontend/src/components/Deposit-withdraw.js",["491","492","493","494","495","496","497","498","499","500","501","502","503","504"],"import React, { PureComponent } from \"react\";\nimport data, { tokenDetails } from \"../config/constantConfig\";\nimport web3Config from \"../config/web3Config\";\nimport { PrePath } from \"../constants\";\nimport Collapse from \"@kunukn/react-collapse\";\nimport constantConfig from \"../config/constantConfig\";\nimport notificationConfig from \"../config/notificationConfig\";\nimport ReimbursementContract from \"../helper/reimbursementContract\";\nimport Loader from \"react-loader-spinner\";\n\nconst $ = window.$;\n\nexport default class DepositToken extends PureComponent {\n    constructor(props) {\n        super();\n        this.state = {\n            web3: props.web3,\n            web3Config: props.web3Config,\n            coinList: tokenDetails,\n            isOpen1: false,\n            isOpen2: false,\n            depositTokenAmt: 0,\n            withdrawTokenAmt: 0,\n            network: null,\n            vaultAddress: null,\n            depositLoading: false\n        }\n    }\n\n    componentWillReceiveProps(newProps) {\n        this.setState({\n            web3: newProps.web3,\n            web3Config: newProps.web3Config,\n            network: newProps.network,\n            vaultAddress: newProps.vaultAddress,\n            tokenAddress: newProps.tokenAddress\n        })\n    }\n\n    componentDidMount() {\n        $(\"#DepositToken .tab-Link\").hover(function () {\n            $(\".tab-Link\").removeClass(\"active\")\n            $(this).addClass(\"active\")\n            $(\".tab-Content\").hide();\n            $(\"#\" + $(this).attr(\"data-id\")).show();\n        });\n\n    }\n\n    async handleInputChange(event) {\n        const { name, value } = event.target;\n        if (Number(value) >= 0 && value.length <= 5) {\n            this.setState({\n                [name]: value\n            })\n        } else {\n            return\n        }\n\n    };\n\n    toggle = index => {\n        let collapse = \"isOpen\" + index;\n\n        this.setState(prevState => ({ [collapse]: !prevState[collapse] }));\n    };\n\n    async depositTokens() {\n        this.setState({ depositLoading: true })\n        let { network, vaultAddress, tokenAddress } = this.props;\n        let { depositTokenAmt } = this.state;\n        await web3Config.connectWallet(0);\n        let newNetworkId = web3Config.getNetworkId()\n\n        if (!constantConfig.allowedNetwork.includes(newNetworkId)) {\n            notificationConfig.error(\"Please Select Ethereum or BSC Main Network\");\n            this.setState({ depositLoading: false })\n            return;\n        }\n        if (\n            network === \"Ethereum\" &&\n            (newNetworkId === 97 || newNetworkId === 56)\n        ) {\n            notificationConfig.warning(\"Change metamask network to Ethereum!\");\n            this.setState({ depositLoading: false })\n            return;\n        } else if (\n            network === \"BSC\" &&\n            (newNetworkId === 42 || newNetworkId === 1)\n        ) {\n            notificationConfig.warning(\"Change metamask network to Binance!\");\n            this.setState({ depositLoading: false })\n            return;\n        }\n\n        let web3 = web3Config.getWeb3();\n        let networkId = web3Config.getNetworkId();\n        let address = web3Config.getAddress();\n\n        let reimbursementContract = new ReimbursementContract(web3, networkId);\n\n        let setDepositTokensData = {};\n\n        setDepositTokensData[\"to\"] = vaultAddress;\n        setDepositTokensData[\"amount\"] = depositTokenAmt;\n        setDepositTokensData[\"tokenAddress\"] = tokenAddress;\n\n        reimbursementContract.depositTokens(\n            setDepositTokensData,\n            (hash) => {\n                this.setState({\n                    // swapLoading: true,\n                    // txIdSent: hash,\n                    // txLinkSend: data[networkId].explorer + '/tx/' + hash,\n                });\n            },\n            async (receipt) => {\n                notificationConfig.success('Deposit Tokens Successfully!');\n                this.setState({ depositLoading: false })\n            },\n            async (error) => {\n                if (error.code === 4001) {\n                    notificationConfig.error(\"Transaction rejected!\")\n                }\n                this.setState({ depositLoading: false })\n            }\n        );\n\n    }\n\n    async withdrawTokens() {\n        this.setState({ withdrawLoading: true })\n        let { network, vaultAddress } = this.props;\n        let { withdrawTokenAmt } = this.state;\n        await web3Config.connectWallet(0);\n        let newNetworkId = web3Config.getNetworkId()\n\n        if (!constantConfig.allowedNetwork.includes(newNetworkId)) {\n            notificationConfig.error(\"Please Select Ethereum or BSC Main Network\");\n            this.setState({ withdrawLoading: false })\n            return;\n        }\n        if (\n            network === \"Ethereum\" &&\n            (newNetworkId === 97 || newNetworkId === 56)\n        ) {\n            notificationConfig.warning(\"Change metamask network to Ethereum!\");\n            this.setState({ withdrawLoading: false })\n            return;\n        } else if (\n            network === \"BSC\" &&\n            (newNetworkId === 42 || newNetworkId === 1)\n        ) {\n            notificationConfig.warning(\"Change metamask network to Binance!\");\n            this.setState({ withdrawLoading: false })\n            return;\n        }\n\n        let web3 = web3Config.getWeb3();\n        let networkId = web3Config.getNetworkId();\n        let address = web3Config.getAddress();\n\n        let reimbursementContract = new ReimbursementContract(web3, networkId);\n\n        let setWithdrawTokensData = {};\n\n        setWithdrawTokensData[\"vault\"] = vaultAddress;\n        setWithdrawTokensData[\"amount\"] = withdrawTokenAmt;\n        setWithdrawTokensData[\"reimbursementAddress\"] = constantConfig[networkId].reimbursementContract\n        // setWithdrawTokensData[\"tokenAddress\"] = tokenAddress;\n\n        reimbursementContract.withdrawTokens(\n            setWithdrawTokensData,\n            (hash) => {\n                this.setState({\n                    // swapLoading: true,\n                    // txIdSent: hash,\n                    // txLinkSend: data[networkId].explorer + '/tx/' + hash,\n                });\n            },\n            async (receipt) => {\n                notificationConfig.success('Withdraw Tokens Successfully!');\n                this.setState({ withdrawLoading: false })\n            },\n            async (error) => {\n                if (error.code === 4001) {\n                    notificationConfig.error(\"Transaction rejected!\")\n                }\n                this.setState({ withdrawLoading: false })\n            }\n        );\n\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"main-Popup wallet-Popup\" id=\"DepositToken\">\n                <div className=\"container-Grid\">\n                    <div className=\"MainTabBox\" style={{ paddingTop: '80px' }}>\n                        <div className=\"tab-Nav\">\n                            <a href=\"javascript:void(0)\" className=\"tab-Link\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-A1\">Deposit</a>\n                            <a href=\"javascript:void(0)\" className=\"tab-Link hideMobile\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-A2\">Withdrawal</a>\n                        </div>\n\n\n                        <div className={\"tab-Content \" + this.props.popId} id=\"tab-A1\">\n\n                            <div className=\"wtMBX\" style={{ marginTop: '130px' }}>\n                                <div class=\"gwFormSbox01\">\n                                    <div class=\"gwFormTitle01\">Amount</div>\n                                    <input name=\"depositTokenAmt\" id=\"fontStyle\" class=\"subdomain\" style={{ padding: '20px 15px', width: '100%', backgroundColor: 'rgb(39, 30, 58)', color: 'rgb(255, 255, 255)', border: '0px' }} onChange={this.handleInputChange.bind(this)} >\n                                    </input>\n                                    <div class=\"smlInfotxt01\" style={{ textAlign: 'left' }}>Max available to deposit 1,000,000 [TOKEN]</div>\n                                </div>\n                                <div class=\"gwFormSFormbox03\">\n                                    {this.state.depositLoading ?\n                                        <button class=\"gwFormBTN01 greenBack\">\n                                            <Loader type=\"ThreeDots\" color=\"#fff\" height={15} width={80} />\n                                        </button>\n                                        :\n                                        <button class=\"gwFormBTN01 greenBack\" onClick={() => { this.depositTokens() }}>\n                                            DEPOSIT\n                                        </button>\n                                    }\n                                </div>\n                            </div>\n\n                        </div>\n\n                        <div className=\"tab-Nav showMobile \" style={{ width: '100%' }}>\n                            <a href=\"javascript:void(0)\" className=\"tab-Link \" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-A2\">SmartSwap vs Atomic Swap & Other Swaps</a>\n                        </div>\n                        <div className={\"tab-Content \" + this.props.popId} id=\"tab-A2\">\n                            <div className=\"wtMBX\" style={{ marginTop: '130px' }}>\n                                <div class=\"gwFormSbox01\">\n                                    <div class=\"gwFormTitle01\">Amount</div>\n                                    <input name=\"withdrawTokenAmt\" id=\"fontStyle\" class=\"subdomain\" style={{ padding: '20px 15px', width: '100%', backgroundColor: 'rgb(39, 30, 58)', color: 'rgb(255, 255, 255)', border: '0px' }} onChange={this.handleInputChange.bind(this)} >\n                                    </input>\n                                    <div class=\"smlInfotxt01\" style={{ textAlign: 'left' }}>Max available to withdraw 1,000,000 [TOKEN]</div>\n                                </div>\n                                <div class=\"gwFormSFormbox03\">\n\n                                    {this.state.withdrawLoading ?\n                                        <button class=\"gwFormBTN01 blackBack\">\n                                            <Loader type=\"ThreeDots\" color=\"#fff\" height={15} width={80} />\n                                        </button>\n                                        :\n                                        <button class=\"gwFormBTN01 blackBack\" onClick={() => { this.withdrawTokens() }}>\n                                            WITHDRAW\n                                        </button>\n                                    }\n                                </div>\n                            </div>\n\n\n\n                        </div>\n                    </div>\n\n                </div>\n\n                <a href=\"javascript:void(0);\" onClick={() => { this.props.closePopup(\"DepositToken\") }} className=\"close-Icon\"></a>\n            </div>\n        )\n\n    }\n\n}","/var/www/html/SmartSwap_frontend/src/components/CreateLicense.js",["505","506","507","508","509"],"import _ from 'lodash';\nimport Loader from \"react-loader-spinner\";\nimport React, { PureComponent } from \"react\";\nimport web3 from 'web3';\nimport { isValidAddress } from 'ethereumjs-util';\n\nimport web3Config from \"../config/web3Config\";\n\nimport constantConfig, { bscAddress } from \"../config/constantConfig\"\nimport notificationConfig from \"../config/notificationConfig\";\nimport ReimbursementContract from '../helper/reimbursementContract';\nimport SwapPairAbi from '../abis/swapPairAbi.json';\nimport { ethers } from 'ethers';\n\nexport default class CreateLicense extends PureComponent {\n\n    constructor(props) {\n        super(props);\n        // this.web3Connected = this.web3Connected.bind(this)\n        this.state = {\n            address: null,\n            web3: null,\n            token: \"\",\n            swapPair: \"\",\n            period: 0,\n            reimbursementRatio: 0,\n            licenseeFees: 0,\n            creatingLicense: false,\n            crtLicSuccess: false\n        }\n    }\n\n    async handleLicense(network) {\n        await web3Config.connectWallet(0);\n        let newNetworkId = web3Config.getNetworkId()\n\n        if (!constantConfig.allowedNetwork.includes(newNetworkId)) {\n            notificationConfig.error(\"Please Select Ethereum or BSC Main Network\");\n            return;\n        }\n        if (\n            network === \"Ethereum\" &&\n            (newNetworkId === 97 || newNetworkId === 56)\n        ) {\n            notificationConfig.warning(\"Change metamask network to Ethereum!\");\n            return;\n        } else if (\n            network === \"BSC\" &&\n            (newNetworkId === 42 || newNetworkId === 1)\n        ) {\n            notificationConfig.warning(\"Change metamask network to Binance!\");\n            return;\n        }\n\n        const {\n            token,\n            swapPair,\n            period,\n            reimbursementRatio,\n            licenseeFees\n        } = this.state;\n        // event.preventDefault();\n\n        if (token === \"0x\" || token === \"\") {\n            notificationConfig.info(\"Please Enter Proper Token Address\");\n            return 0;\n        }\n        if (swapPair === \"0x\" || swapPair === \"\") {\n            notificationConfig.info(\"Please Enter Proper Pool Address\");\n            return 0;\n        }\n        // if (period === 0) {\n        //     notificationConfig.info(\"Enter Staking Period\");\n        //     return 0;\n        // }\n\n        if (licenseeFees === 0) {\n            notificationConfig.info(\"Enter Fees\");\n            return 0;\n        }\n\n        if (reimbursementRatio === 0) {\n            notificationConfig.info(\"Please Enter Reimbursement Ratio\");\n            return 0;\n        }\n\n        this.setState({ creatingLicense: true })\n\n        let web3 = web3Config.getWeb3();\n        let networkId = web3Config.getNetworkId();\n        let address = web3Config.getAddress();\n\n        let reimbursementContract = new ReimbursementContract(web3, networkId);\n\n        let newVaultData = {};\n\n\n        newVaultData[\"reimbursementAddress\"] = this.props.reimbursementAddress;\n        newVaultData[\"token\"] = token;\n        newVaultData[\"isMintable\"] = false;\n        newVaultData[\"period\"] = Number(period) * 86400;\n        newVaultData[\"reimbursementRatio\"] = Number(reimbursementRatio) * 100;\n        newVaultData[\"swapPair\"] = swapPair;\n        newVaultData[\"licenseeFee\"] = [Number(licenseeFees) * 100];\n        newVaultData[\"projectContract\"] = [constantConfig[networkId].swapFactoryContract];\n\n        reimbursementContract.newVault(\n            newVaultData,\n            (hash) => {\n                this.setState({\n                    // swapLoading: true,\n                    // txIdSent: hash,\n                    // txLinkSend: data[networkId].explorer + '/tx/' + hash,\n                });\n            },\n            async (receipt) => {\n                this.setState({ crtLicSuccess: true, creatingLicense: false })\n                this.props.updateLicenseAddress(this.props.network, await reimbursementContract.getVaultAddress(receipt), licenseeFees)\n                notificationConfig.success('License Created Successfully!');\n            },\n            async (error) => {\n                this.setState({ creatingLicense: false })\n                if (error.code === 4001) {\n                    notificationConfig.error(\"Transaction rejected!\")\n                }\n            }\n        );\n\n    }\n\n    floatOnly(event) {\n        if (event.shiftKey === true) event.preventDefault();\n\n        var code = event.keyCode;\n\n        if (\n            (code >= 48 && code <= 57) ||\n            (code >= 96 && code <= 105) ||\n            code === 8 ||\n            code === 9 ||\n            code === 37 ||\n            code === 39 ||\n            code === 46 ||\n            code === 190 ||\n            code === 110\n        ) {\n            // allowed characters\n        } else event.preventDefault();\n\n        if (\n            event.target.value.indexOf(\".\") !== -1 &&\n            (code === 190 || code === 110)\n        )\n            event.preventDefault();\n    }\n\n    async checkSwapPairTokens() {\n        if (this.state.token === \"\" || this.state.token === \"0x\") {\n            notificationConfig.error(\"Please enter valid token address!\")\n            return;\n        }\n        if (this.state.swapPair === \"\" || this.state.swapPair === \"0x\") {\n            notificationConfig.error(\"Please enter valid pair address!\")\n            return;\n        }\n        let web3 = null;\n        if (this.props.network === \"BSC\") {\n            web3 = this.props.web3Binance;\n        } else if (this.props.network === \"Ethereum\") {\n            web3 = this.props.web3Ethereum;\n        }\n\n        if (await web3.eth.getCode(this.state.swapPair) !== \"0x\") {\n\n            let swapPairInstance = await new web3.eth.Contract(\n                SwapPairAbi,\n                this.state.swapPair\n            );\n\n            let isAddressSwapPair = false;\n\n            try {\n                let token0 = (await swapPairInstance.methods.token0().call()).toLowerCase();\n                let token1 = (await swapPairInstance.methods.token1().call()).toLowerCase();\n                console.log(\"------------------------------------swappair-details---------------------------------\")\n                console.log(\"token0 - \", token0)\n                console.log(\"token1 - \", token1)\n                console.log(\"------------------------------------swappair-details---------------------------------\")\n                if (this.props.network === \"BSC\") {\n                    if ((token0 === (this.state.token).toLowerCase() && token1 === constantConfig.tokenDetails.WBNB.address) || (token1 === (this.state.token).toLowerCase() && token0 === constantConfig.tokenDetails.WBNB.address)) {\n                        isAddressSwapPair = true;\n                    } else\n                        isAddressSwapPair = false;\n                } else if (this.props.network === \"Ethereum\") {\n                    if ((token0 === (this.state.token).toLowerCase() && token1 === constantConfig.tokenDetails.WETH.address) || (token1 === (this.state.token).toLowerCase() && token0 === constantConfig.tokenDetails.WETH.address)) {\n                        isAddressSwapPair = true;\n                    } else\n                        isAddressSwapPair = false;\n                }\n                if (!isAddressSwapPair) {\n                    notificationConfig.error(\"Invalid token pair address!\");\n                    this.setState({\n                        swapPair: \"\",\n                        token: \"\"\n                    })\n                } else {\n                    notificationConfig.success(\"Token pair verified!\");\n                }\n                console.log(\"isAddressSwapPair\", isAddressSwapPair)\n                // decimal = web3.utils.hexToNumber(decimal._hex);\n                // this.setState({ tokenName: name, symbol: symbol, decimalCheck: decimalConfig[decimal.toString()] });\n                // isAddressToken = true;\n            } catch (e) {\n                console.log(e)\n            }\n\n        }\n    }\n\n    async checkAddress(event) {\n        let address = event.target.name;\n        let tokenAddress = event.target.value;\n        let isAddressValid = false;\n        try {\n            isAddressValid = isValidAddress(tokenAddress);\n        } catch (e) { }\n        if (!isAddressValid) {\n            notificationConfig.info(\"Please Enter Proper Address\");\n            this.setState({ [address]: \"\" });\n            return 0;\n        }\n\n        // let tokenInstance = new ethers.Contract(\n        //     tokenAddress,\n        //     tokenAbi,\n        //     web3Config.getWeb3().getSigner(0)\n        //   );\n\n\n\n        this.setState({ [address]: tokenAddress });\n    }\n\n    async handleInputChange(event) {\n        const { name, value } = event.target;\n        if (name === \"licenseeFees\" || name === \"reimbursementRatio\") {\n            if (Number(value) <= 100 && Number(value) >= 0 && value.length <= 5) {\n                this.setState({\n                    [name]: value\n                })\n            } else {\n                return\n            }\n        } else {\n            this.setState({\n                [name]: value\n            })\n        }\n    };\n\n    async intOnly(event) {\n        if (event.shiftKey === true)\n            event.preventDefault();\n\n        var code = event.keyCode;\n\n        if ((code >= 48 && code <= 57) || (code >= 96 && code <= 105) || code === 8 || code === 9 || code === 37 || code === 39 || code === 46) {\n            // allowed characters\n        } else\n            event.preventDefault();\n    }\n\n    render() {\n        return (\n            <div className='gwFormBRBox01'>\n                <div className='gwFormBRTitle01'><span>{this.props.network}</span></div>\n                <div className=\"gwFormSbox01\">\n                    <div className=\"gwFormTitle01\" >Choose the fees that you want to charge your users <i className=\"help-circle\"> <i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text\" aria-hidden=\"true\"></i> </i>\n                        <span className=\"redTxt01\">Fees will be automatedly deposit to your wallet<i className=\"help-circle\"> <i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text\" aria-hidden=\"true\"></i> </i></span>\n\n                    </div>\n                    <div className=\"gwFormSFormbox01\">\n                        <input type=\"text\" value={this.state.licenseeFees} name=\"licenseeFees\" onChange={this.handleInputChange.bind(this)} onKeyDown={this.floatOnly.bind(this)} /> <span>%</span>\n                    </div>\n                </div>\n                <div className=\"gwFormSbox01\">\n                    <div className=\"gwFormTitle01\" >Add your native token smart contract on {this.props.network}</div>\n                    <div className=\"gwFormSFormbox01\">\n                        <input type=\"text\" name=\"token\" onChange={this.checkAddress.bind(this)} onBlur={() => this.checkSwapPairTokens()} value={this.state.token} /> <span>TOKEN</span>\n                    </div>\n                </div>\n                <div className=\"gwFormSbox01\">\n                    <div className=\"gwFormTitle01\" >Add a pool contract between your TOKEN to {this.props.currency}<i className=\"help-circle\"> <i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text\" aria-hidden=\"true\"></i> </i></div>\n                    <div className=\"gwFormSFormbox01\">\n                        <input type=\"text\" name=\"swapPair\" onChange={this.checkAddress.bind(this)} onBlur={() => this.checkSwapPairTokens()} value={this.state.swapPair} /> <span>PAIR</span>\n                    </div>\n                </div>\n\n                <div className=\"gwFormSbox01\">\n                    <div className=\"gwFormTitle01\" >How many days users need to stake to get 100% reimbursement?<i className=\"help-circle\"> <i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text\" aria-hidden=\"true\"></i> </i></div>\n                    <div className=\"gwFormSFormbox01\">\n                        <input type=\"text\" value={this.state.period} name=\"period\" onChange={this.handleInputChange.bind(this)} onKeyDown={this.intOnly.bind(this)} /> <span>DAYS</span>\n                    </div>\n                </div>\n\n                <div className=\"gwFormSbox01\">\n                    <div className=\"gwFormTitle01\" >Choose the token ratio users will need to stake<i className=\"help-circle\"> <i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text\" aria-hidden=\"true\"></i> </i></div>\n                    <div className=\"gwFormSFormbox01\">\n                        <input type=\"text\" value={this.state.reimbursementRatio} name=\"reimbursementRatio\" onChange={this.handleInputChange.bind(this)} onKeyDown={this.floatOnly.bind(this)} /> <span>: 1</span>\n                    </div>\n                </div>\n\n                {this.props.web3 !== null ?\n                    this.state.creatingLicense ?\n                        <button className=\"gwFormBTN02\">\n                            Creating License<Loader type=\"ThreeDots\" color=\"#fff\" height={15} width={80} />\n                        </button>\n                        :\n                        this.state.crtLicSuccess ?\n                            <button className=\"gwFormBTN02 greenC\"><i className=\"fas fa-check\"></i> {this.props.network} license been created successfully</button>\n                            :\n                            <button className=\"gwFormBTN02\" onClick={() => { this.handleLicense(this.props.network) }}>Create license on {this.props.network} </button>\n                    :\n                    <button className=\"gwFormBTN02\" onClick={() => { this.props.connectWallet() }}>Connect your {this.props.network} wallet to create a license on {this.props.network} </button>\n                }\n\n            </div>\n        );\n    }\n}","/var/www/html/SmartSwap_frontend/src/components/NoDomain.js",[],"/var/www/html/SmartSwap_frontend/src/components/HowItWorks.js",["510","511","512","513","514","515","516","517","518","519","520","521","522"],"import React, { PureComponent } from \"react\";\nimport data, { tokenDetails } from \"../config/constantConfig\";\nimport web3Config from \"../config/web3Config\";\nimport { PrePath } from \"../constants\";\nimport Collapse from \"@kunukn/react-collapse\";\n\nconst $ = window.$;\n\nexport default class HowItWorks extends PureComponent {\n    constructor(props) {\n        super();\n        this.state = {\n            web3: props.web3,\n            web3Config: props.web3Config,\n            coinList: tokenDetails,\n            isOpen1: false,\n            isOpen2: false\n        }\n    }\n\n    componentWillReceiveProps(newProps) {\n        this.setState({\n            web3: newProps.web3,\n            web3Config: newProps.web3Config\n        })\n    }\n\n    componentDidMount() {\n        $(\"#HowItWorks .tab-Link\").hover(function () {\n            $(\".tab-Link\").removeClass(\"active\")\n            $(this).addClass(\"active\")\n            $(\".tab-Content\").hide();\n            $(\"#\" + $(this).attr(\"data-id\")).show();\n        });\n\n    }\n\n    toggle = index => {\n        let collapse = \"isOpen\" + index;\n\n        this.setState(prevState => ({ [collapse]: !prevState[collapse] }));\n    };\n\n\n    render() {\n\n        return (\n            <div className=\"main-Popup wallet-Popup\" id=\"HowItWorks\">\n                <div className=\"container-Grid\">\n                    <div className=\"MainTabBox\" style={{ paddingTop: '80px' }}>\n                        <div className=\"tab-Nav\">\n                            <a href=\"javascript:void(0)\" className=\"tab-Link\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-4\">How it Works</a>\n                            <a href=\"javascript:void(0)\" className=\"tab-Link hideMobile\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-5\">SmartSwap vs Atomic Swap & Other Swaps</a>\n                        </div>\n\n\n                        <div className={\"tab-Content \" + this.props.popId} id=\"tab-4\">\n                            <div className=\"peerTitle01\">How it Works</div>\n                            <div className=\"peerText01\">\n                                <p>Smartswap’s contract utilizes a zero volatility patent pending method which prevents slippage and wholly reimburses users fees and gas costs. The swap works by letting users choose a token they want to swap (Token A) and then select a receiving token (Token B). Unlike a Decentralized Exchange (DEX) or Automated Market Maker (AMM), SmartSwap asks users the USD face value of the tokens they want to swap, rather than the token amount they want to receive.</p>\n\n                                <p>Subsequently, with SmartSwap, users do not choose the value of Token A or how many tokens of Token B they want to receive. Instead, SmartSwap prices Token A and Token B based on the current average market price between multiple reliable exchanges.</p>\n\n                                <p>Furthermore, when the user sends $1000 face value of Token A to receive Token B there is no possibility for them to receive $999 or $1001. SmartSwap executes the order with the exact same face value. In the case of an unmatched swap (due to counterparty different order amount or market volatility) the SmartSwap alters the order to receive less of Token B in order to match the face value, or alternatively return any excess to the user of which it belongs.</p>\n\n                                <p>Unlike AMM such uniswap, smartswap doesn't have any liquidity pools or liquidity providers (LP) structure. instead the smartswap work as a decentralized P2P with unique swap providers (SP) solution like a fountain driving liquidity from centralized exchanges </p>\n\n                            </div>\n                        </div>\n\n                        <div className=\"tab-Nav showMobile \" style={{ width: '100%' }}>\n                            <a href=\"javascript:void(0)\" className=\"tab-Link \" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-5\">SmartSwap vs Atomic Swap & Other Swaps</a>\n                        </div>\n                        <div className={\"tab-Content \" + this.props.popId} id=\"tab-5\">\n                            <div className=\"peerTitle01\">SmartSwap vs Atomic Swap</div>\n                            <div className=\"peerText01\"> SmartSwap utilizes technology that allows cross-chain swaps between two assets without validator risk, wrapping, or side-chain utilization. The cross-chain swap is a true one-click swap between blockchain networks. The cross-chain swap has the ability to act like a bridge between blockchain networks based smart contracts such as Ethereum<br /><br />\n\n                                At the moment, SmartSwap supports swaps between BNB {'<>'} ETH and ERC20{'<>'}BEP20. SmartSwap capabilities present the first one-click swap that is not considered an atomic swap or reliant on time-locked swaps.\n\n                            </div>\n                            <div className='smrtvsatoTable01'>\n\n                                <table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"10\">\n                                    <tbody>\n                                        <tr>\n                                            <th scope=\"col\">&nbsp;</th>\n                                            <th align=\"center\" valign=\"middle\" scope=\"col\">DEXs <br />\n                                               <span>(Uniswap, Pancake, etc)</span></th>\n                                            <th align=\"center\" valign=\"middle\" scope=\"col\">Binance Bridge</th>\n                                            <th align=\"center\" valign=\"middle\" scope=\"col\">\n                                            <img src=\"images/logo.png\" alt=\"\"/>\n                                            </th>\n                                        </tr>\n                                        <tr>\n                                            <td>Decentralized cross-chain</td>\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-check\"></i></td>\n                                        </tr>\n                                        <tr>\n                                            <td>One click cross-chain</td>\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-check\"></i></td>\n                                        </tr>\n                                        <tr>\n                                            <td>Unlimited liquidity</td>\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-check\"></i></td>\n                                        </tr>\n                                        <tr>\n                                            <td>Slippage free</td>\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-check\"></i></td>\n                                        </tr>\n                                        <tr>\n                                            <td>Fee reimbursement</td>\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-check\"></i></td>\n                                        </tr>\n                                        <tr>\n                                            <td>Gas reimbursement</td>\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-check\"></i></td>\n                                        </tr>\n                                        <tr>\n                                            <td>Token price correlated to platform usage</td>\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-check\"></i></td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n\n                            </div>\n\n\n\n\n\n                        </div>\n                    </div>\n\n                </div>\n\n\n\n\n\n\n\n\n\n\n\n                <a href=\"javascript:void(0);\" onClick={() => { this.props.closePopup(\"HowItWorks\") }} className=\"close-Icon\"></a>\n            </div>\n        )\n\n    }\n\n}","/var/www/html/SmartSwap_frontend/src/components/CefiToDefi.js",["523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539"],"import React, { PureComponent } from \"react\";\nimport data, { tokenDetails } from \"../config/constantConfig\";\nimport web3Config from \"../config/web3Config\";\nimport { PrePath } from \"../constants\";\nimport Collapse from \"@kunukn/react-collapse\";\n\nconst $ = window.$;\n\nexport default class CefiToDefi extends PureComponent {\n    constructor(props) {\n        super();\n        this.state = {\n            web3: props.web3,\n            web3Config: props.web3Config,\n            coinList: tokenDetails,\n            isOpen1: false,\n            isOpen2: false\n        }\n    }\n\n    componentWillReceiveProps(newProps) {\n        this.setState({\n            web3: newProps.web3,\n            web3Config: newProps.web3Config\n        })\n    }\n\n    componentDidMount() {\n        $(\"#CefiToDefi .tab-Link\").hover(function () {\n            $(\".tab-Link\").removeClass(\"active\")\n            $(this).addClass(\"active\")\n            $(\".tab-Content\").hide();\n            $(\"#\" + $(this).attr(\"data-id\")).show();\n        });\n\n    }\n\n    toggle = index => {\n        let collapse = \"isOpen\" + index;\n\n        this.setState(prevState => ({ [collapse]: !prevState[collapse] }));\n    };\n\n\n    render() {\n\n        return (\n            <div className=\"main-Popup wallet-Popup\" id=\"CefiToDefi\">\n                <div className=\"container-Grid\">\n                    <div className=\"MainTabBox\">\n                        <div className=\"tab-Nav\">\n                            <a href=\"javascript:void(0)\" className=\"tab-Link\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-7\">\n                                CeFi to DeFi</a>\n                            <a href=\"javascript:void(0)\" className=\"tab-Link hideMobile\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-8\">What is a Swap Provider</a>\n                            <a href=\"javascript:void(0)\" className=\"tab-Link hideMobile\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-9\">SmartSwap Liquidity Process</a>\n                        </div>\n\n                        <div className={\"tab-Content \" + this.props.popId} id=\"tab-7\">\n                            <div className=\"peerTitle01\">DECENTRALIZED CeFi {'<>'} DeFi BRIDGE</div>\n                            <div className=\"peerText01\">Now, without signing up to a CEX, doing time-consuming KYC on multiple platforms, or dealing with order book volatility, users can still benefit from CEX liquidity through SmartSwap. SmartSwap provides a true bridge between CeFi and DeFi with one simple click access to liquidity, even while keeping self custody of the assets.</div>\n                        </div>\n\n                        <div className=\"tab-Nav showMobile \" style={{ width: '100%' }} >\n                            <a href=\"javascript:void(0)\" className=\"tab-Link\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-8\">\n                                What is a Swap Provider</a>\n                        </div>\n\n\n                        <div className={\"tab-Content \" + this.props.popId} id=\"tab-8\">\n\n                            <div className=\"peerTitle01\">What is a Swap Provider?</div>\n                            <div className=\"peerText01\">SmartSwap allows anyone with a Centralized Exchange account, like Binance, to utilize a simple decentralized API and become an Swap Provider (SP). The SP’s drive liquidity into SmartSwap allows the SP to earn automatic spread on their favorite tokens.<br />\n\n                            </div>\n\n                            <div className=\"lpBTNBar01\">\n                                <button className=\"ssBtn02\" onClick={() => { this.props.closePopup(\"CefiToDefi\"); this.props.openPopup(\"LiquidityProvider\") }}>BECOME AN SP</button> </div>\n                        </div>\n\n                        <div className=\"tab-Nav showMobile \" style={{ width: '100%' }} >\n                            <a href=\"javascript:void(0)\" className=\"tab-Link\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-9\">SmartSwap Liquidity Process</a>\n                        </div>\n                        <div className={\"tab-Content \" + this.props.popId} id=\"tab-9\">\n                            <div className=\"peerTitle01\">SmartSwap Liquidity Process</div>\n                            <div className=\"peerText01-v2\"><i>1</i> User initiates a swap order </div>\n                            <div className=\"peerText01-v2\"><i>2</i> SmartSwap searches for a counterparty (Peer-to-Peer) </div>\n                            <div className=\"peerText01-v2\"><i>3</i> If there is not enough liquidity, the swap order automatically triggers the liquidity from Swap Providers  </div>\n                            <div className=\"peerText01-v2\"><i>4</i> If a counterparty is not found and there is not enough liquidity from Swap Providers, the swap will remain pending until the Swap Providers recycle their liquidity like a fountain.</div>\n                            <div className=\"peerText01-v2\"><i>5</i> If pending orders execute at a later time, users receive in return the exact same face value at the time of execution. </div>\n                        </div>\n                    </div>\n\n                </div>\n                <a href=\"javascript:void(0);\" onClick={() => { this.props.closePopup(\"CefiToDefi\") }} className=\"close-Icon\"></a>\n            </div>\n        )\n\n    }\n\n}","/var/www/html/SmartSwap_frontend/src/components/LedgerHistory.js",["540","541","542","543","544","545"],"import React, { PureComponent } from \"react\";\n\nexport default function LedgerHistory(props) {\n\n    return (\n\n        <div className=\"transaction-histroryWrap\">\n            <div className=\"transaction-histroryBox\">\n                <div className=\"Title02 orange-Color\">Send</div>\n                <div className=\"trasaction-Amt\"> {props.sentAmount} {props.sentCurrency} <span>({(Number(props.sentAmount) * Number(props.filledAprice)).toFixed(2)})</span> </div>\n                <div className=\"trasaction-Date\">{props.sentTxTime}</div>\n                <div className=\"trasaction-Box\">\n                    <div className=\"trasaction-Status\"><span className=\"icon-Box\"><i className=\"fas fa-check-circle\"></i></span>Transaction Submitted</div>\n                    <div className=\"trans-Id\">{props.sentTx}</div>\n                    <a href={props.sentTxLink} className=\"view-Trans ani-1\" target=\"_blank\">View transaction</a>\n                </div>\n            </div>\n            <div className=\"arrow-Box\"></div>\n            <div className=\"transaction-histroryBox\">\n                {props.oracleTx !== undefined ? (\n                    <div>\n                        <div className=\"Title02 green-Color\">Received <span></span></div>\n                        <div className=\"trasaction-Amt\"> {props.recivedAmount} {props.recivedCurrency} <span>({(Number(props.recivedAmount) * Number(props.filledBprice)).toFixed(2)})</span> </div>\n                        <div className=\"trasaction-Date\">{props.recivedTxTime}</div>\n                        <div className=\"trasaction-Box\">\n                            <div className=\"trasaction-Status\"><span className=\"icon-Box\"><i className=\"fas fa-check-circle\"></i></span>Funds wired to your wallet </div>\n                            <div className=\"trans-Id\">{props.oracleTx}</div>\n                            <div className=\"tsb-LinkBox\">\n                                <a href={props.recivedTxLink} className=\"view-Trans ani-1\" target=\"_blank\">View transaction</a>\n                                {/* <a href=\"javascript:void(0);\" className=\"view-Trans02 ani-1 active\" data-toggle=\"n-collapse\" data-target=\"#trsBox01\" aria-expanded=\"true\" aria-controls=\"trsBox01\">Break down fees <i className=\"fas fa-sort-down\"></i></a> */}\n                            </div>\n                        </div>\n                    </div>) : (\n                    <div>\n                        <div className=\"Title02 pending\">\n                            Pending <span></span>\n                        </div>\n                        <div className=\"trasaction-Amt\">\n                            ... {props.recivedCurrency}{' '}\n                        </div>\n                        <div className=\"trasaction-Box pendingColor\">\n                            <div className=\"trasaction-Status pending-Text\">\n                                Pending{' '}\n                                <span className=\"pending-loader\">\n                                    <img src=\"images/loader2.gif\" />\n                                </span>\n                            </div>\n                        </div>\n                        <p>\n                            {/* <span>\n                        <a href=\"javascript:void(0);\"><i className=\"fas fa-cog\"></i></a>\n                    </span> */}\n                            <a\n                                href=\"javascript:void(0);\"\n                                className=\"ani-1\"\n                            >\n                                Wait until few blocks confirmation\n                            </a>\n                        </p>\n                    </div>\n                )}\n\n\n                {/* <div className=\"Title02 pending\">Pending <span>(73.69%)</span></div>\n                <div className=\"trasaction-Amt\">10 ETH  <span>($2,500)</span></div>\n                <div className=\"trasaction-Box pendingColor\">\n                    <div className=\"trasaction-Status pending-Text\">Pending <span className=\"pending-loader\"><img src=\"images/loader2.gif\" /></span></div>\n                </div>\n                <p><span><a href=\"javascript:void(0);\"><i className=\"fas fa-cog\"></i></a></span><a href=\"javascript:void(0);\" className=\"ani-1\">Wait until a match will be found or cancel and redeem the 10 ETH pending to your wallet</a></p> */}\n            </div>\n        </div>\n\n        // test\n\n        // <div className=\"transaction-histroryWrap\">\n        //     <div className=\"transaction-histroryBox\">\n        //         <div className=\"Title02 orange-Color\">Send</div>\n        //         <div className=\"trasaction-Amt\"> 50 ETH <span>($10,000)</span> </div>\n        //         <div className=\"trasaction-Date\">Feb 2. 2019, 9:21am PST</div>\n        //         <div className=\"trasaction-Box\">\n        //             <div className=\"trasaction-Status\"><span className=\"icon-Box\"><i className=\"fas fa-check-circle\"></i></span>Transaction Submitted</div>\n        //             <div className=\"trans-Id\">X0456c19d5A61AeA886E6D657EsEF8849565</div>\n        //             <a href=\"javascript:void(0);\" className=\"view-Trans ani-1\">View transaction</a>\n        //         </div>\n        //     </div>\n        //     <div className=\"arrow-Box\"></div>\n        //     <div className=\"transaction-histroryBox\">\n        //         <div className=\"Title02 green-Color\">Received <span>(73.69%)</span></div>\n        //         <div className=\"trasaction-Amt\"> 0.25 BTC <span>($2,500)</span> </div>\n        //         <div className=\"trasaction-Date\">Feb 2. 2019, 9:21am PST</div>\n        //         <div className=\"trasaction-Box\">\n        //             <div className=\"trasaction-Status\"><span className=\"icon-Box\"><i className=\"fas fa-check-circle\"></i></span>Funds wired to your wallet </div>\n        //             <div className=\"trans-Id\">X0456c19d5A61AeA886E6D657EsEF8849565</div>\n        //             <div className=\"tsb-LinkBox\">\n        //                 <a href=\"javascript:void(0);\" className=\"view-Trans ani-1\">View transaction</a>\n        //                 <a href=\"javascript:void(0);\" className=\"view-Trans02 ani-1 active\" data-toggle=\"n-collapse\" data-target=\"#trsBox01\" aria-expanded=\"true\" aria-controls=\"trsBox01\">Break down fees <i className=\"fas fa-sort-down\"></i></a>\n        //             </div>\n        //             <div className=\"clearfix n-collapse in\" id=\"trsBox01\" aria-expanded=\"true\" >\n        //                 <div className=\"tsb-transHistoryBox\">\n        //                     <span>Network gas:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n        //                     <span>0.00910955 Ether ($3.43)</span>\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\n        //                 </div>\n        //                 <div className=\"tsb-transHistoryBox\">\n        //                     <span>3rd part validators fees:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n        //                     <span>0.00910955 Ether ($3.43)</span>\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\n        //                 </div>\n        //                 <div className=\"tsb-transHistoryBox\">\n        //                     <span>Transfer tokens:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n        //                     <span>0.00910955 Ether ($3.43)</span>\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\n        //                 </div>\n        //                 <div className=\"tsb-transHistoryBox\">\n        //                     <span>SmartSwap fee:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n        //                     <span>0.00910955 Ether ($3.43)</span>\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\n        //                 </div>\n        //                 <div className=\"tsb-transHistoryBox\">\n        //                     <span>SMART/2 Rebate:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n        //                     <span>0.00910955 Ether ($3.43)</span>\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\n        //                 </div>\n        //             </div>\n        //         </div>\n        //         <div className=\"trasaction-Amt\"> 0.25 BTC <span>($2,500)</span> </div>\n        //         <div className=\"trasaction-Date\">Feb 2. 2019, 9:21am PST</div>\n        //         <div className=\"trasaction-Box\">\n        //             <div className=\"trasaction-Status\"><span className=\"icon-Box\"><i className=\"fas fa-check-circle\"></i></span>Funds wired to your wallet </div>\n        //             <div className=\"trans-Id\">X0456c19d5A61AeA886E6D657EsEF8849565</div>\n        //             <div className=\"tsb-LinkBox\">\n        //                 <a href=\"javascript:void(0);\" className=\"view-Trans ani-1\">View transaction</a>\n        //                 <a href=\"javascript:void(0);\" className=\"view-Trans02 ani-1\" data-toggle=\"n-collapse\" data-target=\"#trsBox02\" aria-expanded=\"false\" aria-controls=\"trsBox02\">Break down fees <i className=\"fas fa-sort-down\"></i></a>\n        //             </div>\n        //             <div className=\"n-collapse clearfix\" id=\"trsBox02\">\n        //                 <div className=\"tsb-transHistoryBox\">\n        //                     <span>Network gas:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n        //                     <span>0.00910955 Ether ($3.43)</span>\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\n        //                 </div>\n        //                 <div className=\"tsb-transHistoryBox\">\n        //                     <span>3rd part validators fees:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n        //                     <span>0.00910955 Ether ($3.43)</span>\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\n        //                 </div>\n        //                 <div className=\"tsb-transHistoryBox\">\n        //                     <span>Transfer tokens:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n        //                     <span>0.00910955 Ether ($3.43)</span>\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\n        //                 </div>\n        //                 <div className=\"tsb-transHistoryBox\">\n        //                     <span>SmartSwap fee:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n        //                     <span>0.00910955 Ether ($3.43)</span>\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\n        //                 </div>\n        //                 <div className=\"tsb-transHistoryBox\">\n        //                     <span>SMART/2 Rebate:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n        //                     <span>0.00910955 Ether ($3.43)</span>\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\n        //                 </div>\n        //             </div>\n        //         </div>\n        //         <div className=\"trasaction-Amt\"> 0.25 BTC <span>($2,500)</span> </div>\n        //         <div className=\"trasaction-Date\">Feb 2. 2019, 9:21am PST</div>\n        //         <div className=\"trasaction-Box\">\n        //             <div className=\"trasaction-Status\"><span className=\"icon-Box\"><i className=\"fas fa-check-circle\"></i></span>Funds wired to your wallet </div>\n        //             <div className=\"trans-Id\">X0456c19d5A61AeA886E6D657EsEF8849565</div>\n        //             <div className=\"tsb-LinkBox\">\n        //                 <a href=\"javascript:void(0);\" className=\"view-Trans ani-1\">View transaction</a>\n        //                 <a href=\"javascript:void(0);\" className=\"view-Trans02 ani-1\" data-toggle=\"n-collapse\" data-target=\"#trsBox03\" aria-expanded=\"false\" aria-controls=\"trsBox03\">Break down fees <i className=\"fas fa-sort-down\"></i></a>\n        //             </div>\n        //             <div className=\"n-collapse clearfix\" id=\"trsBox03\">\n        //                 <div className=\"tsb-transHistoryBox\">\n        //                     <span>Network gas:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n        //                     <span>0.00910955 Ether ($3.43)</span>\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\n        //                 </div>\n        //                 <div className=\"tsb-transHistoryBox\">\n        //                     <span>3rd part validators fees:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n        //                     <span>0.00910955 Ether ($3.43)</span>\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\n        //                 </div>\n        //                 <div className=\"tsb-transHistoryBox\">\n        //                     <span>Transfer tokens:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n        //                     <span>0.00910955 Ether ($3.43)</span>\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\n        //                 </div>\n        //                 <div className=\"tsb-transHistoryBox\">\n        //                     <span>SmartSwap fee:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n        //                     <span>0.00910955 Ether ($3.43)</span>\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\n        //                 </div>\n        //                 <div className=\"tsb-transHistoryBox\">\n        //                     <span>SMART/2 Rebate:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\n        //                     <span>0.00910955 Ether ($3.43)</span>\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\n        //                 </div>\n        //             </div>\n        //         </div>\n        //         <div className=\"Title02 pending\">Pending <span>(73.69%)</span></div>\n        //         <div className=\"trasaction-Amt\">10 ETH  <span>($2,500)</span></div>\n        //         <div className=\"trasaction-Box pendingColor\">\n        //             <div className=\"trasaction-Status pending-Text\">Pending <span className=\"pending-loader\"><img src=\"images/loader2.gif\" /></span></div>\n        //         </div>\n        //         <p><span><a href=\"javascript:void(0);\"><i className=\"fas fa-cog\"></i></a></span><a href=\"javascript:void(0);\" className=\"ani-1\">Wait until a match will be found or cancel and redeem the 10 ETH pending to your wallet</a></p>\n        //     </div>\n        // </div>\n    )\n}","/var/www/html/SmartSwap_frontend/src/components/PeerPopup.js",["546","547","548","549","550","551","552","553","554","555","556","557","558"],"import React, { PureComponent } from \"react\";\nimport data, { tokenDetails } from \"../config/constantConfig\";\nimport web3Config from \"../config/web3Config\";\nimport { PrePath } from \"../constants\";\nimport Collapse from \"@kunukn/react-collapse\";\n\nconst $ = window.$;\n\nexport default class PeerPopup extends PureComponent {\n    constructor(props) {\n        super();\n        this.state = {\n            web3: props.web3,\n            web3Config: props.web3Config,\n            coinList: tokenDetails,\n            isOpen1: false,\n            isOpen2: false\n        }\n    }\n\n    componentWillReceiveProps(newProps) {\n        this.setState({\n            web3: newProps.web3,\n            web3Config: newProps.web3Config\n        })\n    }\n\n    componentDidMount() {\n        $(\"#PeerPopup .tab-Link\").hover(function () {\n            $(\".tab-Link\").removeClass(\"active\")\n            $(this).addClass(\"active\")\n            $(\".tab-Content\").hide();\n            $(\"#\" + $(this).attr(\"data-id\")).show();\n        });\n\n    }\n\n    toggle = index => {\n        let collapse = \"isOpen\" + index;\n\n        this.setState(prevState => ({ [collapse]: !prevState[collapse] }));\n    };\n \n\n    render() {\n\n        return (\n            <div className=\"main-Popup wallet-Popup\" id=\"PeerPopup\">\n                <div className=\"container-Grid\"> \n                <div className=\"MainTabBox\">\n                    <div className=\"tab-Nav\">\n                        <a href=\"javascript:void(0)\" className=\"tab-Link\"  onClick={ev=>{ev.preventDefault();}} data-id=\"tab-1\">Peer to Contract</a>\n                        <a href=\"javascript:void(0)\" className=\"tab-Link\"  onClick={ev=>{ev.preventDefault();}} data-id=\"tab-2\">Peer to Peer</a>\n                        <a href=\"javascript:void(0)\" className=\"tab-Link\"  onClick={ev=>{ev.preventDefault();}} data-id=\"tab-3\">Peer to Contract and Group</a>\n                    </div> \n\n\n                    <div className={\"tab-Content \" + this.props.popId} id=\"tab-1\">\n                         <div className=\"peerTitle01\">Peer to Contract</div>\n                         <div className=\"peerText01\">SmartSwap holds liquidity pools with locked LP funds, executing P2C (Peer-to-Contract) swaps. The liquidity pools execute swap orders when there is no counter party. Users that provide liquidity receive spread + SMART rewards in both native tokens and major cryptocurrencies like BNB or ETH.</div>\n\n                    </div> \n                    <div className={\"tab-Content \" + this.props.popId} id=\"tab-2\">\n                         <div className=\"peerTitle01\">Peer to Peer</div>\n                         <div className=\"peerText01\">P2P has two distinct processes. First, SmartSwap defaults to the P2P swap to check if there is someone that wants to swap against the order placed. Second, SmartSwap P2P allows users to generate a transaction ID that can be sent directly to a specific person they want to swap with. The transaction ID is created and the users send their digital assets to that transaction ID. Once the swap takes place, SmartSwap swaps for the same face value. If there is any delta it will be returned to the appropriate party.</div>\n\n                    </div> \n                    <div className={\"tab-Content \" + this.props.popId} id=\"tab-3\">\n                         <div className=\"peerTitle01\">Peer to Contract and Group</div>\n                         <div className=\"peerText01\">If the liquidity contract does not have enough liquidity, the swap turns into a P2P&C swap, which means the swap partially executes and the rest remains pending until the contract rebalances itself through counterparties or liquidity providers (CEX or OTC) using a CeFi gateway that acts as a decentralized FLASH Swap. SmartSwap utilizes the Peer-to-Contract and Group (P2P&C) to search for as many counterparties as needed to cover the full face value of the transaction.</div>\n\n                    </div> \n\n                    </div> \n\n                </div>\n               \n               \n               \n               \n               \n               \n               \n               \n               \n               \n               \n                <a href=\"javascript:void(0);\"  onClick={() => { this.props.closePopup(\"PeerPopup\") }} className=\"close-Icon\"></a>\n            </div>\n        )\n\n    }\n\n}","/var/www/html/SmartSwap_frontend/src/components/About.js",["559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608"],"import React, { PureComponent } from \"react\";\nimport data, { tokenDetails } from \"../config/constantConfig\";\nimport web3Config from \"../config/web3Config\";\nimport { PrePath } from \"../constants\";\nimport Collapse from \"@kunukn/react-collapse\";\nimport \"../assets/AboutPopup.css\"\n\nexport default class About extends PureComponent {\n    constructor(props) {\n        super();\n        this.state = {\n            web3: props.web3,\n            web3Config: props.web3Config,\n            coinList: tokenDetails,\n            isOpen1: false,\n            isOpen2: false\n        }\n    }\n\n    componentWillReceiveProps(newProps) {\n        this.setState({\n            web3: newProps.web3,\n            web3Config: newProps.web3Config\n        })\n    }\n\n    componentDidMount() {\n        // console.log(this.state.coinList)\n    }\n\n    toggle = index => {\n        let collapse = \"isOpen\" + index;\n\n        this.setState(prevState => ({ [collapse]: !prevState[collapse] }));\n    };\n\n    render() {\n\n        return (\n            <div className=\"main-Popup wallet-Popup\" id=\"About\">\n                <div className=\"container-Grid\">\n                    <div className=\"LiProTitle01\">About Us</div>\n                    <div className=\"ppAboutText01\"> Smart.exchange is a decentralized organization managed by a DAO community and created by Atom Foundation early 2017. The first published patent was in 2018 when there was no DeFi awareness. At this time, investors did not even know what slippage was so the solution pre-dated the problem. Now, with the emergence of AMMs, SmartSwap solves a known need in the industry.</div>\n\n\n                    <section id=\"team-Block\">\n                        <div class=\"advisor-team-Box\">\n                            <div class=\"wrapper\">\n                                <div class=\"s20TeamContainer clearfix\" id=\"our_advisor\">\n                                    <div class=\"s20Teambox01 clearfix\" >\n                                        <div class=\"s20ttextbox02\">Our Advisors</div>\n                                    </div>\n                                    <div class=\"s20Teambox01 clearfix\" >\n                                        <div class=\"s20tImgbox ani-5\">\n                                            <div class=\"s20RotaterBox\"><a href=\"mailto:dee@jointer.io\" target=\"_blank\" class=\"teamLinkIcon\"></a>\n                                                <div class=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-01.png\" /></div>\n                                            </div>\n                                            <div class=\"afterLogo\"><img data-src=\"https://www.elementzero.network/api/private/mainSite/teamMember/4/t2-ss_nNs3qoe.png\" src=\"https://www.elementzero.network/api/private/mainSite/teamMember/4/t2-ss_nNs3qoe.png\" /> </div>\n                                        </div>\n                                        <div class=\"s20ttextbox\"> <span>Dee Hock</span>Founder and former CEO of Visa Credit Card Association</div>\n                                    </div>\n                                    <div class=\"s20Teambox01 clearfix\">\n                                        <div class=\"s20tImgbox ani-5\">\n                                            <div class=\"s20RotaterBox\"><a href=\"mailto:david@jointer.io\" target=\"_blank\" class=\"teamLinkIcon\"></a>\n                                                <div class=\"teamImgNPbox\"><img  alt=\"\" src=\"images/team/teamImg-02.png\" /></div>\n                                            </div>\n                                            <div class=\"afterLogo\"><img data-src=\"https://www.elementzero.network/api/private/mainSite/teamMember/5/t3-ss_X2yzDCr.png\" src=\"https://www.elementzero.network/api/private/mainSite/teamMember/5/t3-ss_X2yzDCr.png\" /> </div>\n                                        </div>\n                                        <div class=\"s20ttextbox\"> <span>David Weild IV</span>V. Chairman at NASDAQ and the “father” of the JOBS Act</div>\n                                    </div>\n                                    <div class=\"s20Teambox01 clearfix\" >\n                                        <div class=\"s20tImgbox ani-5\">\n                                            <div class=\"s20RotaterBox\"><a href=\"mailto:mike@jointer.io\" target=\"_blank\" class=\"teamLinkIcon\"></a>\n                                                <div class=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-03.png\" /></div>\n                                            </div>\n                                            <div class=\"afterLogo\"><img data-src=\"https://www.elementzero.network/api/private/mainSite/teamMember/6/t4-ss_cODnYZo.png\" src=\"https://www.elementzero.network/api/private/mainSite/teamMember/6/t4-ss_cODnYZo.png\" /> </div>\n                                        </div>\n                                        <div class=\"s20ttextbox\"> <span> Mike Lorrey</span>CTO Advisor<br />\n\t\t\t\t\t\t\t\t\t\t\t\tThe co-creator of the prototype of Bitcoin</div>\n                                    </div>\n                                    <div class=\"s20Teambox01 clearfix\" >\n                                        <div class=\"s20tImgbox ani-5\">\n                                            <div class=\"s20RotaterBox\"><a href=\"mailto:ken@jointer.io\" target=\"_blank\" class=\"teamLinkIcon\"></a>\n                                                <div class=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-04.png\" /></div>\n                                            </div>\n                                            <div class=\"afterLogo\"><img data-src=\"https://www.elementzero.network/api/private/mainSite/teamMember/8/t6-ss_PqgnxCI.png\" src=\"https://www.elementzero.network/api/private/mainSite/teamMember/8/t6-ss_PqgnxCI.png\" /> </div>\n                                        </div>\n                                        <div class=\"s20ttextbox\"> <span>Ken Goldman</span>Former Chief Financial Officer of Yahoo! </div>\n                                    </div>\n                                    <div class=\"s20Teambox01 clearfix\" >\n                                        <div class=\"s20tImgbox ani-5\">\n                                            <div class=\"s20RotaterBox\"><a href=\"https://www.linkedin.com/in/bourgi87/\" target=\"_blank\" class=\"teamLinkIcon\"></a>\n                                                <div class=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-05.png\" /></div>\n                                            </div>\n                                            <div class=\"afterLogo\"><img data-src=\"https://www.elementzero.network/api/private/mainSite/teamMember/10/sam_burgin_icon_HVcCc9e.png\" src=\"https://www.elementzero.network/api/private/mainSite/teamMember/10/sam_burgin_icon_HVcCc9e.png\" /> </div>\n                                        </div>\n                                        <div class=\"s20ttextbox\"> <span> Sam Bourgi</span> Chief Editor Hacked.com</div>\n                                    </div>\n                                    <div class=\"s20Teambox01 clearfix\" data-105500-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-106500-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\n                                        <div class=\"s20tImgbox ani-5\">\n                                            <div class=\"s20RotaterBox\"><a href=\"https://www.linkedin.com/in/koen-maris-3791811/\" target=\"_blank\" class=\"teamLinkIcon\"></a>\n                                                <div class=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-06.png\" /></div>\n                                            </div>\n                                            <div class=\"afterLogo\"><img data-src=\"https://www.elementzero.network/api/private/mainSite/teamMember/33/01_cT0OyEA_6fmgSuE.png\" src=\"https://www.elementzero.network/api/private/mainSite/teamMember/33/01_cT0OyEA_6fmgSuE.png\" /> </div>\n                                        </div>\n                                        <div class=\"s20ttextbox\"> <span>Koen Maris</span>IOTA Advisor Cybersecurity</div>\n                                    </div>\n                                    <div class=\"s20Teambox01 clearfix\" data-106000-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-107000-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\n                                        <div class=\"s20tImgbox ani-5\">\n                                            <div class=\"s20RotaterBox\"><a href=\"https://www.linkedin.com/in/alongoren/\" target=\"_blank\" class=\"teamLinkIcon\"></a>\n                                                <div class=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-07.png\" /></div>\n                                            </div>\n                                        </div>\n                                        <div class=\"s20ttextbox\"> <span>Alon Goren</span>Founding Partner at Goren Holm Ventures</div>\n                                    </div>\n                                    <div class=\"s20Teambox01 clearfix\" data-106500-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-107500-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\n                                        <div class=\"s20tImgbox ani-5\">\n                                            <div class=\"s20RotaterBox\"><a href=\"https://www.linkedin.com/in/robertneivert/\" target=\"_blank\" class=\"teamLinkIcon\"></a>\n                                                <div class=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-08.png\" /></div>\n                                            </div>\n                                            <div class=\"afterLogo\"><img data-src=\"https://www.elementzero.network/api/private/mainSite/teamMember/36/500-logo.png\" src=\"https://www.elementzero.network/api/private/mainSite/teamMember/36/500-logo.png\" /> </div>\n                                        </div>\n                                        <div class=\"s20ttextbox\"> <span>Robert Neivert</span>Venture Partner at 500 Startups Head of blockchain program</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"previous-advisor-team-Box\">\n                            <div class=\"wrapper\">\n                                <div class=\"s20TeamContainer clearfix\" id=\"previous_advisor\">\n                                    <div class=\"s20Teambox01 clearfix\" data-102500-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-103500-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\n                                        <div class=\"s20ttextbox02\">PREVIOUS Advisors</div>\n                                    </div>\n                                    <div class=\"s20Teambox01 clearfix\" data-103000-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-104000-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\n                                        <div class=\"s20tImgbox ani-5\">\n                                            <div class=\"s20RotaterBox\"><a href=\"# \" target=\"_blank\" rel=\"noopener noreferrer\" class=\"teamLinkIcon\"> </a>\n                                                <div class=\"teamImgNPbox\"><img class=\"  mCS_img_loaded\" alt=\"\" src=\"images/team/teamImg-09.png\" /></div>\n                                            </div>\n                                            <div class=\"afterLogo\"><img class=\"lozad mCS_img_loaded\" data-src=\"https://www.jointer.io/images/jntr_about/advisors001_logo.png\" alt=\" \" src=\"https://www.jointer.io/images/jntr_about/advisors001_logo.png\" /> </div>\n                                        </div>\n                                        <div class=\"s20ttextbox\"> <span>Professor Eric S. Maskin</span>Harvard University Nobel Memorial Prize in Economics Mechanism Design Expert </div>\n                                    </div>\n                                    <div class=\"s20Teambox01 clearfix\" data-103500-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-104500-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\n                                        <div class=\"s20tImgbox ani-5\">\n                                            <div class=\"s20RotaterBox\"><a href=\"# \" target=\"_blank\" class=\"teamLinkIcon\" rel=\"noopener noreferrer\"> </a>\n                                                <div class=\"teamImgNPbox\"><img class=\" mCS_img_loaded\"   alt=\"\" src=\"images/team/teamImg-010.png\" /></div>\n                                            </div>\n                                            <div class=\"afterLogo\"><img class=\"lozad mCS_img_loaded\" data-src=\"https://www.jointer.io/images/jntr_about/advisors001_logo.png\" alt=\"\" src=\"https://www.jointer.io/images/jntr_about/advisors001_logo.png\" /> </div>\n                                        </div>\n                                        <div class=\"s20ttextbox\"> <span>Professor Alvin E. Roth</span>Stanford University Nobel Memorial Prize in Economics Market Design expert</div>\n                                    </div>\n                                    <div class=\"s20Teambox01 clearfix\" data-104500-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-105500-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\n                                        <div class=\"s20tImgbox ani-5\">\n                                            <div class=\"s20RotaterBox\"><a href=\"https://www.linkedin.com\" target=\"_blank\" class=\"teamLinkIcon\" rel=\"noopener noreferrer\"> </a>\n                                                <div class=\"teamImgNPbox\"><img class=\"lozad mCS_img_loaded\" alt=\"\" src=\"images/team/teamImg-011.png\" /></div>\n                                            </div>\n                                            <div class=\"afterLogo\"><img class=\"lozad mCS_img_loaded\" data-src=\"https://www.jointer.io/images/jntr_about/t5-ss-V2.png\" alt=\"\" src=\"https://www.jointer.io/images/jntr_about/t5-ss-V2.png\" /> </div>\n                                        </div>\n                                        <div class=\"s20ttextbox\"> <span>Chris Cox</span>Former Chairman of the U.S. Securities and Exchange Comission [SEC] former U.S. Congress Member </div>\n                                    </div>\n                                    <div class=\"s20Teambox01 clearfix\">\n                                        <div class=\"s20tImgbox ani-5\">\n                                            <div class=\"s20RotaterBox\"><a href=\"https://www.linkedin.com/in/daniel-p-ahn-7283967/\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"teamLinkIcon\"> </a>\n                                                <div class=\"teamImgNPbox\"><img class=\"lozad mCS_img_loaded\" alt=\"\" src=\"images/team/teamImg-012.png\" /></div>\n                                            </div>\n                                            <div class=\"afterLogo\"><img class=\"lozad mCS_img_loaded\" data-src=\"https://www.elementzero.network/api/private/mainSite/teamMember/7/t5-ss.png\" alt=\"\" src=\"https://www.elementzero.network/api/private/mainSite/teamMember/7/t5-ss.png\" /> </div>\n                                        </div>\n                                        <div class=\"s20ttextbox\"> <span>Daniel P. Ahn PhD</span>Chief Economist<br />\n\t\t\t\t\t\t\t\t\t\t\t\tU.S. Department of State </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"management-team-Box\">\n                            <div class=\"wrapper\">\n                                <div class=\"s20TeamContainer clearfix npSMfix01\" id=\"managment\">\n                                    <div class=\"s20Teambox01 clearfix\">\n                                        <div class=\"s20ttextbox02\">Management</div>\n                                    </div>\n                                    <div class=\"s20Teambox01 clearfix\" data-123000-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-124000-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\n                                        <div class=\"s20tImgbox ani-5\">\n                                            <div class=\"s20RotaterBox\"><a href=\"https://www.linkedin.com/in/jude-g-regev-09110214/\" target=\"_blank\" class=\"teamLinkIcon\"></a>\n                                                <div class=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-013.png\" /></div>\n                                            </div>\n                                        </div>\n                                        <div class=\"s20ttextbox\"> <span>Yoda G Regev<br />\nCEO & CTO</span>Serial Entrepreneur with 5 Startups and 3 exits</div>\n                                    </div>\n                                    <div class=\"s20Teambox01 clearfix\" data-122500-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-123500-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\n                                        <div class=\"s20tImgbox ani-5\">\n                                            <div class=\"s20RotaterBox\"><a href=\"https://www.linkedin.com/in/kylewhitepr/\" target=\"_blank\" class=\"teamLinkIcon\"></a>\n                                                <div class=\"teamImgNPbox\"><img   alt=\"\" src=\"images/team/teamImg-014.png\" /></div>\n                                            </div>\n                                        </div>\n                                        <div class=\"s20ttextbox\"> <span>Kyle White<br />\n\t\t\t\t\t\t\t\t\t\t\t\tCMO</span>Venture Marketing Advisor totaling $16B market cap</div>\n                                    </div>\n\n                                    <div class=\"s20Teambox01 clearfix\" data-121500-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-122500-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\n                                        <div class=\"s20tImgbox ani-5\">\n                                            <div class=\"s20RotaterBox\"><a href=\"https://www.linkedin.com/in/debbierosenblum\" target=\"_blank\" class=\"teamLinkIcon\"></a>\n                                                <div class=\"teamImgNPbox\"><img  alt=\"\" src=\"images/team/teamImg-015.png\" /></div>\n                                            </div>\n                                        </div>\n                                        <div class=\"s20ttextbox\"> <span>Debbie Rosenblum<br />\n\t\t\t\t\t\t\t\t\t\t\t\tCPO</span>People Architect, Strategic Leader + Decisive Doer</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"operation-team-Box\">\n                            <div class=\"wrapper\">\n                                <div class=\"s20TeamContainer clearfix \" id=\"operations\">\n                                    <div class=\"s20Teambox01 clearfix\">\n                                        <div class=\"s20ttextbox02\">Operations</div>\n                                    </div>\n\n                                    <div class=\"s20Teambox01 clearfix\" >\n                                        <div class=\"s20tImgbox ani-5\">\n                                            <div class=\"s20RotaterBox\"><a href=\"#\" target=\"_blank\" class=\"teamLinkIcon\"></a>\n                                                <div class=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-016.png\" /></div>\n                                            </div>\n                                        </div>\n                                        <div class=\"s20ttextbox\"> <span>Amber Urquhart</span>Investment LP</div>\n                                    </div>\n\n\n                                    <div class=\"s20Teambox01 clearfix\" >\n                                        <div class=\"s20tImgbox ani-5\">\n                                            <div class=\"s20RotaterBox\"><a href=\"#\" target=\"_blank\" class=\"teamLinkIcon\"></a>\n                                                <div class=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-017.png\" /></div>\n                                            </div>\n                                        </div>\n                                        <div class=\"s20ttextbox\"> <span>Dan Mahoney</span>Fundraising Manager</div>\n                                    </div>\n\n                                    <div class=\"s20Teambox01 clearfix\" >\n                                        <div class=\"s20tImgbox ani-5\">\n                                            <div class=\"s20RotaterBox\"><a href=\"#\" target=\"_blank\" class=\"teamLinkIcon\"></a>\n                                                <div class=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/blankUser.jpg\" /></div>\n                                            </div>\n                                        </div>\n                                        <div class=\"s20ttextbox\"> <span>Max Dier</span>PDO DAO Manager</div>\n                                    </div>\n\n                                    <div class=\"s20Teambox01 clearfix\" >\n                                        <div class=\"s20tImgbox ani-5\">\n                                            <div class=\"s20RotaterBox\"><a href=\"#\" target=\"_blank\" class=\"teamLinkIcon\"></a>\n                                                <div class=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/ahmad-bancin.jpg\" /></div>\n                                            </div>\n                                        </div>\n                                        <div class=\"s20ttextbox\"> <span>Ahmad Bancin</span>Community Admin</div>\n                                    </div>\n\n                                    {/* <div class=\"s20Teambox01 clearfix\" >\n                                        <div class=\"s20tImgbox ani-5\">\n                                            <div class=\"s20RotaterBox\"><a href=\"#\" target=\"_blank\" class=\"teamLinkIcon\"></a>\n                                                <div class=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-020.png\" /></div>\n                                            </div>\n                                        </div>\n                                        <div class=\"s20ttextbox\"> <span>Verlin Auliane</span>Graphic Designer</div>\n                                    </div> */}\n\n                                    <div class=\"s20Teambox01 clearfix\" >\n                                        <div class=\"s20tImgbox ani-5\">\n                                            <div class=\"s20RotaterBox\"><a href=\"#\" target=\"_blank\" class=\"teamLinkIcon\"></a>\n                                                <div class=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-021.png\" /></div>\n                                            </div>\n                                        </div>\n                                        <div class=\"s20ttextbox\"> <span>Joe Meinen</span>Social Specialist</div>\n                                    </div>\n\n                                    <div class=\"s20Teambox01 clearfix\" >\n                                        <div class=\"s20tImgbox ani-5\">\n                                            <div class=\"s20RotaterBox\"><a href=\"#\" target=\"_blank\" class=\"teamLinkIcon\"></a>\n                                                <div class=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-022.png\" /></div>\n                                            </div>\n                                        </div>\n                                        <div class=\"s20ttextbox\"> <span>Corlynne O’Sullivan</span>Crypto Marketing</div>\n                                    </div>\n\n                                    <div class=\"s20Teambox01 clearfix\" >\n                                        <div class=\"s20tImgbox ani-5\">\n                                            <div class=\"s20RotaterBox\"><a href=\"#\" target=\"_blank\" class=\"teamLinkIcon\"></a>\n                                                <div class=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-023.png\" /></div>\n                                            </div>\n                                        </div>\n                                        <div class=\"s20ttextbox\"> <span>Joyce Hanson</span>Writer</div>\n                                    </div>\n                                     \n \n                                </div>\n                            </div>\n                        </div>\n                    </section>\n\n\n                    <div className='VPMainBX'>\n                        <div className='VPSubBX01'>\n                            <div className=\"ventureBXTitle01\">Venture Partners </div>\n                        </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-01.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-02.png\" alt=\"\" />Hassan (Hatu) Sheikh </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-03.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-04.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-05.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-06.png\" alt=\"\" />  Andrea Castiglione</div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-07.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-08.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-09.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-010.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-011.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-012.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-013.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-014.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-015.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-016.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-017.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-018.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-019.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-020.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-021.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-022.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-023.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-024.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-025.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-026.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-027.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-028.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-029.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-030.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-031.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-032.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-033.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-034.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-035.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-036.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-037.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-038.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-039.png\" alt=\"\" /> </div>\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-040.png\" alt=\"\" /> </div>\n\n\n\n\n\n                    </div>\n\n\n\n\n\n                </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                <a href=\"javascript:void(0);\" onClick={() => { this.props.closePopup(\"About\") }} className=\"close-Icon\"></a>\n            </div>\n        )\n\n    }\n\n}","/var/www/html/SmartSwap_frontend/src/dispatcher.js",[],"/var/www/html/SmartSwap_frontend/src/helper/axiosRequest.js",[],"/var/www/html/SmartSwap_frontend/src/helper/spContract.js",[],{"ruleId":"609","replacedBy":"610"},{"ruleId":"611","replacedBy":"612"},{"ruleId":"613","severity":1,"message":"614","line":1,"column":32,"nodeType":"615","messageId":"616","endLine":1,"endColumn":36},{"ruleId":"613","severity":1,"message":"617","line":1,"column":38,"nodeType":"615","messageId":"616","endLine":1,"endColumn":46},{"ruleId":"613","severity":1,"message":"618","line":3,"column":5,"nodeType":"615","messageId":"616","endLine":3,"endColumn":13},{"ruleId":"613","severity":1,"message":"619","line":8,"column":8,"nodeType":"615","messageId":"616","endLine":8,"endColumn":18},{"ruleId":"613","severity":1,"message":"620","line":14,"column":10,"nodeType":"615","messageId":"616","endLine":14,"endColumn":27},{"ruleId":"613","severity":1,"message":"621","line":100,"column":51,"nodeType":"615","messageId":"616","endLine":100,"endColumn":55},{"ruleId":"613","severity":1,"message":"622","line":146,"column":13,"nodeType":"615","messageId":"616","endLine":146,"endColumn":20},{"ruleId":"613","severity":1,"message":"622","line":186,"column":13,"nodeType":"615","messageId":"616","endLine":186,"endColumn":20},{"ruleId":"613","severity":1,"message":"622","line":209,"column":13,"nodeType":"615","messageId":"616","endLine":209,"endColumn":20},{"ruleId":"613","severity":1,"message":"614","line":1,"column":32,"nodeType":"615","messageId":"616","endLine":1,"endColumn":36},{"ruleId":"613","severity":1,"message":"617","line":1,"column":38,"nodeType":"615","messageId":"616","endLine":1,"endColumn":46},{"ruleId":"613","severity":1,"message":"618","line":3,"column":5,"nodeType":"615","messageId":"616","endLine":3,"endColumn":13},{"ruleId":"613","severity":1,"message":"619","line":8,"column":8,"nodeType":"615","messageId":"616","endLine":8,"endColumn":18},{"ruleId":"613","severity":1,"message":"620","line":14,"column":10,"nodeType":"615","messageId":"616","endLine":14,"endColumn":27},{"ruleId":"613","severity":1,"message":"621","line":113,"column":51,"nodeType":"615","messageId":"616","endLine":113,"endColumn":55},{"ruleId":"613","severity":1,"message":"622","line":166,"column":13,"nodeType":"615","messageId":"616","endLine":166,"endColumn":20},{"ruleId":"613","severity":1,"message":"622","line":214,"column":13,"nodeType":"615","messageId":"616","endLine":214,"endColumn":20},{"ruleId":"613","severity":1,"message":"622","line":241,"column":13,"nodeType":"615","messageId":"616","endLine":241,"endColumn":20},{"ruleId":"623","severity":1,"message":"624","line":486,"column":45,"nodeType":"625","endLine":486,"endColumn":102},{"ruleId":"626","severity":1,"message":"627","line":486,"column":53,"nodeType":"628","messageId":"629","endLine":486,"endColumn":74},{"ruleId":"623","severity":1,"message":"624","line":510,"column":49,"nodeType":"625","endLine":510,"endColumn":103},{"ruleId":"626","severity":1,"message":"627","line":510,"column":57,"nodeType":"628","messageId":"629","endLine":510,"endColumn":78},{"ruleId":"613","severity":1,"message":"614","line":1,"column":32,"nodeType":"615","messageId":"616","endLine":1,"endColumn":36},{"ruleId":"613","severity":1,"message":"617","line":1,"column":38,"nodeType":"615","messageId":"616","endLine":1,"endColumn":46},{"ruleId":"613","severity":1,"message":"618","line":4,"column":10,"nodeType":"615","messageId":"616","endLine":4,"endColumn":18},{"ruleId":"613","severity":1,"message":"619","line":8,"column":8,"nodeType":"615","messageId":"616","endLine":8,"endColumn":18},{"ruleId":"613","severity":1,"message":"630","line":9,"column":8,"nodeType":"615","messageId":"616","endLine":9,"endColumn":22},{"ruleId":"613","severity":1,"message":"631","line":10,"column":8,"nodeType":"615","messageId":"616","endLine":10,"endColumn":16},{"ruleId":"613","severity":1,"message":"620","line":14,"column":10,"nodeType":"615","messageId":"616","endLine":14,"endColumn":27},{"ruleId":"613","severity":1,"message":"632","line":23,"column":8,"nodeType":"615","messageId":"616","endLine":23,"endColumn":16},{"ruleId":"613","severity":1,"message":"633","line":26,"column":8,"nodeType":"615","messageId":"616","endLine":26,"endColumn":17},{"ruleId":"613","severity":1,"message":"621","line":270,"column":45,"nodeType":"615","messageId":"616","endLine":270,"endColumn":49},{"ruleId":"613","severity":1,"message":"622","line":467,"column":9,"nodeType":"615","messageId":"616","endLine":467,"endColumn":16},{"ruleId":"613","severity":1,"message":"622","line":521,"column":9,"nodeType":"615","messageId":"616","endLine":521,"endColumn":16},{"ruleId":"613","severity":1,"message":"622","line":548,"column":9,"nodeType":"615","messageId":"616","endLine":548,"endColumn":16},{"ruleId":"613","severity":1,"message":"622","line":1284,"column":9,"nodeType":"615","messageId":"616","endLine":1284,"endColumn":16},{"ruleId":"613","severity":1,"message":"634","line":1335,"column":7,"nodeType":"615","messageId":"616","endLine":1335,"endColumn":16},{"ruleId":"613","severity":1,"message":"635","line":1336,"column":7,"nodeType":"615","messageId":"616","endLine":1336,"endColumn":19},{"ruleId":"613","severity":1,"message":"636","line":1340,"column":7,"nodeType":"615","messageId":"616","endLine":1340,"endColumn":14},{"ruleId":"613","severity":1,"message":"637","line":1341,"column":7,"nodeType":"615","messageId":"616","endLine":1341,"endColumn":10},{"ruleId":"613","severity":1,"message":"638","line":1342,"column":7,"nodeType":"615","messageId":"616","endLine":1342,"endColumn":15},{"ruleId":"623","severity":1,"message":"624","line":2502,"column":27,"nodeType":"625","endLine":2506,"endColumn":28},{"ruleId":"623","severity":1,"message":"624","line":2521,"column":31,"nodeType":"625","endLine":2525,"endColumn":32},{"ruleId":"623","severity":1,"message":"624","line":2532,"column":31,"nodeType":"625","endLine":2532,"endColumn":142},{"ruleId":"623","severity":1,"message":"624","line":2540,"column":31,"nodeType":"625","endLine":2540,"endColumn":142},{"ruleId":"623","severity":1,"message":"624","line":2577,"column":31,"nodeType":"625","endLine":2581,"endColumn":32},{"ruleId":"623","severity":1,"message":"624","line":2589,"column":31,"nodeType":"625","endLine":2589,"endColumn":137},{"ruleId":"623","severity":1,"message":"624","line":2598,"column":31,"nodeType":"625","endLine":2598,"endColumn":137},{"ruleId":"623","severity":1,"message":"624","line":2677,"column":80,"nodeType":"625","endLine":2677,"endColumn":118},{"ruleId":"639","severity":1,"message":"640","line":2679,"column":56,"nodeType":"628","messageId":"641","endLine":2680,"endColumn":89},{"ruleId":"639","severity":1,"message":"640","line":2680,"column":95,"nodeType":"628","messageId":"641","endLine":2681,"endColumn":39},{"ruleId":"623","severity":1,"message":"624","line":2706,"column":27,"nodeType":"625","endLine":2706,"endColumn":62},{"ruleId":"623","severity":1,"message":"624","line":2714,"column":27,"nodeType":"625","endLine":2714,"endColumn":62},{"ruleId":"613","severity":1,"message":"614","line":1,"column":32,"nodeType":"615","messageId":"616","endLine":1,"endColumn":36},{"ruleId":"613","severity":1,"message":"617","line":1,"column":38,"nodeType":"615","messageId":"616","endLine":1,"endColumn":46},{"ruleId":"613","severity":1,"message":"618","line":2,"column":16,"nodeType":"615","messageId":"616","endLine":2,"endColumn":24},{"ruleId":"613","severity":1,"message":"642","line":26,"column":8,"nodeType":"615","messageId":"616","endLine":26,"endColumn":20},{"ruleId":"613","severity":1,"message":"643","line":88,"column":13,"nodeType":"615","messageId":"616","endLine":88,"endColumn":18},{"ruleId":"613","severity":1,"message":"644","line":88,"column":30,"nodeType":"615","messageId":"616","endLine":88,"endColumn":37},{"ruleId":"645","severity":1,"message":"646","line":165,"column":28,"nodeType":"647","messageId":"648","endLine":165,"endColumn":30},{"ruleId":"649","severity":1,"message":"650","line":205,"column":5,"nodeType":"651","messageId":"652","endLine":208,"endColumn":6},{"ruleId":"613","severity":1,"message":"621","line":394,"column":45,"nodeType":"615","messageId":"616","endLine":394,"endColumn":49},{"ruleId":"613","severity":1,"message":"622","line":496,"column":9,"nodeType":"615","messageId":"616","endLine":496,"endColumn":16},{"ruleId":"613","severity":1,"message":"622","line":621,"column":9,"nodeType":"615","messageId":"616","endLine":621,"endColumn":16},{"ruleId":"613","severity":1,"message":"622","line":648,"column":9,"nodeType":"615","messageId":"616","endLine":648,"endColumn":16},{"ruleId":"613","severity":1,"message":"653","line":843,"column":9,"nodeType":"615","messageId":"616","endLine":843,"endColumn":15},{"ruleId":"613","severity":1,"message":"654","line":1048,"column":9,"nodeType":"615","messageId":"616","endLine":1048,"endColumn":18},{"ruleId":"613","severity":1,"message":"655","line":1049,"column":9,"nodeType":"615","messageId":"616","endLine":1049,"endColumn":23},{"ruleId":"613","severity":1,"message":"656","line":1051,"column":9,"nodeType":"615","messageId":"616","endLine":1051,"endColumn":15},{"ruleId":"613","severity":1,"message":"653","line":1052,"column":9,"nodeType":"615","messageId":"616","endLine":1052,"endColumn":15},{"ruleId":"613","severity":1,"message":"657","line":1054,"column":9,"nodeType":"615","messageId":"616","endLine":1054,"endColumn":18},{"ruleId":"613","severity":1,"message":"658","line":1056,"column":9,"nodeType":"615","messageId":"616","endLine":1056,"endColumn":21},{"ruleId":"659","severity":1,"message":"660","line":1957,"column":35,"nodeType":"625","endLine":1964,"endColumn":36},{"ruleId":"623","severity":1,"message":"624","line":1957,"column":35,"nodeType":"625","endLine":1964,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1958,"column":42,"nodeType":"628","messageId":"629","endLine":1958,"endColumn":63},{"ruleId":"623","severity":1,"message":"624","line":1967,"column":35,"nodeType":"625","endLine":1974,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":1968,"column":42,"nodeType":"628","messageId":"629","endLine":1968,"endColumn":63},{"ruleId":"659","severity":1,"message":"660","line":2040,"column":35,"nodeType":"625","endLine":2046,"endColumn":36},{"ruleId":"623","severity":1,"message":"624","line":2040,"column":35,"nodeType":"625","endLine":2046,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":2041,"column":42,"nodeType":"628","messageId":"629","endLine":2041,"endColumn":63},{"ruleId":"623","severity":1,"message":"624","line":2058,"column":35,"nodeType":"625","endLine":2062,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":2059,"column":42,"nodeType":"628","messageId":"629","endLine":2059,"endColumn":63},{"ruleId":"623","severity":1,"message":"624","line":2086,"column":37,"nodeType":"625","endLine":2090,"endColumn":38},{"ruleId":"626","severity":1,"message":"627","line":2087,"column":44,"nodeType":"628","messageId":"629","endLine":2087,"endColumn":65},{"ruleId":"623","severity":1,"message":"624","line":2100,"column":37,"nodeType":"625","endLine":2107,"endColumn":38},{"ruleId":"626","severity":1,"message":"627","line":2101,"column":44,"nodeType":"628","messageId":"629","endLine":2101,"endColumn":65},{"ruleId":"623","severity":1,"message":"624","line":2114,"column":35,"nodeType":"625","endLine":2118,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":2115,"column":42,"nodeType":"628","messageId":"629","endLine":2115,"endColumn":63},{"ruleId":"623","severity":1,"message":"624","line":2128,"column":35,"nodeType":"625","endLine":2135,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":2129,"column":42,"nodeType":"628","messageId":"629","endLine":2129,"endColumn":63},{"ruleId":"623","severity":1,"message":"624","line":2244,"column":35,"nodeType":"625","endLine":2247,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":2245,"column":42,"nodeType":"628","messageId":"629","endLine":2245,"endColumn":59},{"ruleId":"661","severity":1,"message":"662","line":2248,"column":37,"nodeType":"625","endLine":2248,"endColumn":70},{"ruleId":"623","severity":1,"message":"624","line":2256,"column":35,"nodeType":"625","endLine":2260,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":2259,"column":42,"nodeType":"628","messageId":"629","endLine":2259,"endColumn":63},{"ruleId":"623","severity":1,"message":"624","line":2268,"column":35,"nodeType":"625","endLine":2271,"endColumn":36},{"ruleId":"626","severity":1,"message":"627","line":2269,"column":42,"nodeType":"628","messageId":"629","endLine":2269,"endColumn":63},{"ruleId":"661","severity":1,"message":"662","line":2280,"column":46,"nodeType":"625","endLine":2280,"endColumn":77},{"ruleId":"661","severity":1,"message":"662","line":2325,"column":39,"nodeType":"625","endLine":2331,"endColumn":41},{"ruleId":"661","severity":1,"message":"662","line":2344,"column":39,"nodeType":"625","endLine":2350,"endColumn":41},{"ruleId":"623","severity":1,"message":"624","line":2372,"column":33,"nodeType":"625","endLine":2377,"endColumn":34},{"ruleId":"626","severity":1,"message":"627","line":2373,"column":40,"nodeType":"628","messageId":"629","endLine":2373,"endColumn":61},{"ruleId":"623","severity":1,"message":"624","line":2388,"column":33,"nodeType":"625","endLine":2392,"endColumn":34},{"ruleId":"626","severity":1,"message":"627","line":2389,"column":40,"nodeType":"628","messageId":"629","endLine":2389,"endColumn":61},{"ruleId":"623","severity":1,"message":"624","line":2410,"column":31,"nodeType":"625","endLine":2417,"endColumn":32},{"ruleId":"626","severity":1,"message":"627","line":2411,"column":38,"nodeType":"628","messageId":"629","endLine":2411,"endColumn":58},{"ruleId":"663","severity":1,"message":"664","line":2450,"column":37,"nodeType":"625","messageId":"665","endLine":2454,"endColumn":38,"fix":"666"},{"ruleId":"663","severity":1,"message":"664","line":2485,"column":43,"nodeType":"625","messageId":"665","endLine":2489,"endColumn":44,"fix":"667"},{"ruleId":"661","severity":1,"message":"662","line":2508,"column":45,"nodeType":"625","endLine":2508,"endColumn":77},{"ruleId":"623","severity":1,"message":"624","line":2516,"column":41,"nodeType":"625","endLine":2519,"endColumn":42},{"ruleId":"626","severity":1,"message":"627","line":2517,"column":48,"nodeType":"628","messageId":"629","endLine":2517,"endColumn":69},{"ruleId":"623","severity":1,"message":"624","line":2542,"column":31,"nodeType":"625","endLine":2546,"endColumn":32},{"ruleId":"626","severity":1,"message":"627","line":2543,"column":38,"nodeType":"628","messageId":"629","endLine":2543,"endColumn":58},{"ruleId":"623","severity":1,"message":"624","line":2552,"column":31,"nodeType":"625","endLine":2555,"endColumn":32},{"ruleId":"626","severity":1,"message":"627","line":2553,"column":38,"nodeType":"628","messageId":"629","endLine":2553,"endColumn":58},{"ruleId":"623","severity":1,"message":"624","line":2559,"column":31,"nodeType":"625","endLine":2562,"endColumn":32},{"ruleId":"626","severity":1,"message":"627","line":2560,"column":38,"nodeType":"628","messageId":"629","endLine":2560,"endColumn":58},{"ruleId":"623","severity":1,"message":"624","line":2566,"column":31,"nodeType":"625","endLine":2571,"endColumn":32},{"ruleId":"626","severity":1,"message":"627","line":2567,"column":38,"nodeType":"628","messageId":"629","endLine":2567,"endColumn":58},{"ruleId":"668","severity":1,"message":"669","line":10,"column":5,"nodeType":"670","messageId":"671","endLine":12,"endColumn":6},{"ruleId":"613","severity":1,"message":"672","line":11,"column":5,"nodeType":"615","messageId":"616","endLine":11,"endColumn":14},{"ruleId":"613","severity":1,"message":"673","line":120,"column":13,"nodeType":"615","messageId":"616","endLine":120,"endColumn":25},{"ruleId":"613","severity":1,"message":"674","line":121,"column":13,"nodeType":"615","messageId":"616","endLine":121,"endColumn":33},{"ruleId":"613","severity":1,"message":"675","line":122,"column":13,"nodeType":"615","messageId":"616","endLine":122,"endColumn":22},{"ruleId":"613","severity":1,"message":"676","line":7,"column":8,"nodeType":"615","messageId":"616","endLine":7,"endColumn":21},{"ruleId":"613","severity":1,"message":"677","line":8,"column":8,"nodeType":"615","messageId":"616","endLine":8,"endColumn":22},{"ruleId":"613","severity":1,"message":"672","line":10,"column":5,"nodeType":"615","messageId":"616","endLine":10,"endColumn":14},{"ruleId":"613","severity":1,"message":"678","line":2,"column":8,"nodeType":"615","messageId":"616","endLine":2,"endColumn":18},{"ruleId":"623","severity":1,"message":"624","line":28,"column":57,"nodeType":"625","endLine":28,"endColumn":87},{"ruleId":"626","severity":1,"message":"627","line":28,"column":65,"nodeType":"628","messageId":"629","endLine":28,"endColumn":86},{"ruleId":"659","severity":1,"message":"660","line":38,"column":33,"nodeType":"625","endLine":38,"endColumn":85},{"ruleId":"623","severity":1,"message":"624","line":38,"column":33,"nodeType":"625","endLine":38,"endColumn":85},{"ruleId":"626","severity":1,"message":"627","line":38,"column":41,"nodeType":"628","messageId":"629","endLine":38,"endColumn":62},{"ruleId":"659","severity":1,"message":"660","line":44,"column":33,"nodeType":"625","endLine":44,"endColumn":85},{"ruleId":"623","severity":1,"message":"624","line":44,"column":33,"nodeType":"625","endLine":44,"endColumn":85},{"ruleId":"626","severity":1,"message":"627","line":44,"column":41,"nodeType":"628","messageId":"629","endLine":44,"endColumn":62},{"ruleId":"659","severity":1,"message":"660","line":50,"column":33,"nodeType":"625","endLine":50,"endColumn":85},{"ruleId":"623","severity":1,"message":"624","line":50,"column":33,"nodeType":"625","endLine":50,"endColumn":85},{"ruleId":"626","severity":1,"message":"627","line":50,"column":41,"nodeType":"628","messageId":"629","endLine":50,"endColumn":62},{"ruleId":"659","severity":1,"message":"660","line":56,"column":33,"nodeType":"625","endLine":56,"endColumn":85},{"ruleId":"623","severity":1,"message":"624","line":56,"column":33,"nodeType":"625","endLine":56,"endColumn":85},{"ruleId":"626","severity":1,"message":"627","line":56,"column":41,"nodeType":"628","messageId":"629","endLine":56,"endColumn":62},{"ruleId":"659","severity":1,"message":"660","line":62,"column":33,"nodeType":"625","endLine":62,"endColumn":85},{"ruleId":"623","severity":1,"message":"624","line":62,"column":33,"nodeType":"625","endLine":62,"endColumn":85},{"ruleId":"626","severity":1,"message":"627","line":62,"column":41,"nodeType":"628","messageId":"629","endLine":62,"endColumn":62},{"ruleId":"659","severity":1,"message":"660","line":68,"column":33,"nodeType":"625","endLine":68,"endColumn":85},{"ruleId":"623","severity":1,"message":"624","line":68,"column":33,"nodeType":"625","endLine":68,"endColumn":85},{"ruleId":"626","severity":1,"message":"627","line":68,"column":41,"nodeType":"628","messageId":"629","endLine":68,"endColumn":62},{"ruleId":"659","severity":1,"message":"660","line":74,"column":33,"nodeType":"625","endLine":74,"endColumn":85},{"ruleId":"623","severity":1,"message":"624","line":74,"column":33,"nodeType":"625","endLine":74,"endColumn":85},{"ruleId":"626","severity":1,"message":"627","line":74,"column":41,"nodeType":"628","messageId":"629","endLine":74,"endColumn":62},{"ruleId":"659","severity":1,"message":"660","line":80,"column":33,"nodeType":"625","endLine":80,"endColumn":85},{"ruleId":"623","severity":1,"message":"624","line":80,"column":33,"nodeType":"625","endLine":80,"endColumn":85},{"ruleId":"626","severity":1,"message":"627","line":80,"column":41,"nodeType":"628","messageId":"629","endLine":80,"endColumn":62},{"ruleId":"659","severity":1,"message":"660","line":86,"column":33,"nodeType":"625","endLine":86,"endColumn":85},{"ruleId":"623","severity":1,"message":"624","line":86,"column":33,"nodeType":"625","endLine":86,"endColumn":85},{"ruleId":"626","severity":1,"message":"627","line":86,"column":41,"nodeType":"628","messageId":"629","endLine":86,"endColumn":62},{"ruleId":"659","severity":1,"message":"660","line":92,"column":33,"nodeType":"625","endLine":92,"endColumn":85},{"ruleId":"623","severity":1,"message":"624","line":92,"column":33,"nodeType":"625","endLine":92,"endColumn":85},{"ruleId":"626","severity":1,"message":"627","line":92,"column":41,"nodeType":"628","messageId":"629","endLine":92,"endColumn":62},{"ruleId":"659","severity":1,"message":"660","line":98,"column":33,"nodeType":"625","endLine":98,"endColumn":85},{"ruleId":"623","severity":1,"message":"624","line":98,"column":33,"nodeType":"625","endLine":98,"endColumn":85},{"ruleId":"626","severity":1,"message":"627","line":98,"column":41,"nodeType":"628","messageId":"629","endLine":98,"endColumn":62},{"ruleId":"659","severity":1,"message":"660","line":104,"column":33,"nodeType":"625","endLine":104,"endColumn":85},{"ruleId":"623","severity":1,"message":"624","line":104,"column":33,"nodeType":"625","endLine":104,"endColumn":85},{"ruleId":"626","severity":1,"message":"627","line":104,"column":41,"nodeType":"628","messageId":"629","endLine":104,"endColumn":62},{"ruleId":"659","severity":1,"message":"660","line":109,"column":17,"nodeType":"625","endLine":109,"endColumn":70},{"ruleId":"623","severity":1,"message":"624","line":109,"column":17,"nodeType":"625","endLine":109,"endColumn":70},{"ruleId":"626","severity":1,"message":"627","line":109,"column":25,"nodeType":"628","messageId":"629","endLine":109,"endColumn":46},{"ruleId":"623","severity":1,"message":"624","line":69,"column":17,"nodeType":"625","endLine":72,"endColumn":18},{"ruleId":"626","severity":1,"message":"627","line":70,"column":24,"nodeType":"628","messageId":"629","endLine":70,"endColumn":45},{"ruleId":"623","severity":1,"message":"624","line":78,"column":17,"nodeType":"625","endLine":83,"endColumn":18},{"ruleId":"623","severity":1,"message":"624","line":86,"column":17,"nodeType":"625","endLine":86,"endColumn":29},{"ruleId":"623","severity":1,"message":"624","line":89,"column":17,"nodeType":"625","endLine":96,"endColumn":18},{"ruleId":"626","severity":1,"message":"627","line":90,"column":24,"nodeType":"628","messageId":"629","endLine":90,"endColumn":45},{"ruleId":"623","severity":1,"message":"624","line":100,"column":19,"nodeType":"625","endLine":106,"endColumn":20},{"ruleId":"626","severity":1,"message":"627","line":101,"column":26,"nodeType":"628","messageId":"629","endLine":101,"endColumn":47},{"ruleId":"623","severity":1,"message":"624","line":109,"column":19,"nodeType":"625","endLine":115,"endColumn":20},{"ruleId":"626","severity":1,"message":"627","line":110,"column":26,"nodeType":"628","messageId":"629","endLine":110,"endColumn":47},{"ruleId":"623","severity":1,"message":"624","line":118,"column":19,"nodeType":"625","endLine":124,"endColumn":20},{"ruleId":"626","severity":1,"message":"627","line":119,"column":26,"nodeType":"628","messageId":"629","endLine":119,"endColumn":47},{"ruleId":"623","severity":1,"message":"624","line":127,"column":19,"nodeType":"625","endLine":133,"endColumn":20},{"ruleId":"626","severity":1,"message":"627","line":128,"column":26,"nodeType":"628","messageId":"629","endLine":128,"endColumn":47},{"ruleId":"623","severity":1,"message":"624","line":136,"column":19,"nodeType":"625","endLine":141,"endColumn":20},{"ruleId":"626","severity":1,"message":"627","line":137,"column":26,"nodeType":"628","messageId":"629","endLine":137,"endColumn":47},{"ruleId":"623","severity":1,"message":"624","line":144,"column":19,"nodeType":"625","endLine":150,"endColumn":20},{"ruleId":"626","severity":1,"message":"627","line":145,"column":26,"nodeType":"628","messageId":"629","endLine":145,"endColumn":47},{"ruleId":"623","severity":1,"message":"624","line":153,"column":19,"nodeType":"625","endLine":153,"endColumn":49},{"ruleId":"626","severity":1,"message":"627","line":153,"column":27,"nodeType":"628","messageId":"629","endLine":153,"endColumn":48},{"ruleId":"623","severity":1,"message":"624","line":157,"column":17,"nodeType":"625","endLine":164,"endColumn":18},{"ruleId":"626","severity":1,"message":"627","line":158,"column":24,"nodeType":"628","messageId":"629","endLine":158,"endColumn":45},{"ruleId":"663","severity":1,"message":"664","line":169,"column":19,"nodeType":"625","messageId":"665","endLine":172,"endColumn":20,"fix":"679"},{"ruleId":"663","severity":1,"message":"664","line":178,"column":19,"nodeType":"625","messageId":"665","endLine":181,"endColumn":20,"fix":"680"},{"ruleId":"623","severity":1,"message":"624","line":204,"column":17,"nodeType":"625","endLine":211,"endColumn":18},{"ruleId":"626","severity":1,"message":"627","line":205,"column":24,"nodeType":"628","messageId":"629","endLine":205,"endColumn":45},{"ruleId":"663","severity":1,"message":"664","line":216,"column":19,"nodeType":"625","messageId":"665","endLine":216,"endColumn":77,"fix":"681"},{"ruleId":"663","severity":1,"message":"664","line":219,"column":19,"nodeType":"625","messageId":"665","endLine":219,"endColumn":77,"fix":"682"},{"ruleId":"623","severity":1,"message":"624","line":225,"column":17,"nodeType":"625","endLine":232,"endColumn":18},{"ruleId":"626","severity":1,"message":"627","line":226,"column":24,"nodeType":"628","messageId":"629","endLine":226,"endColumn":45},{"ruleId":"623","severity":1,"message":"624","line":236,"column":19,"nodeType":"625","endLine":241,"endColumn":20},{"ruleId":"626","severity":1,"message":"627","line":237,"column":26,"nodeType":"628","messageId":"629","endLine":237,"endColumn":47},{"ruleId":"623","severity":1,"message":"624","line":244,"column":19,"nodeType":"625","endLine":244,"endColumn":49},{"ruleId":"626","severity":1,"message":"627","line":244,"column":27,"nodeType":"628","messageId":"629","endLine":244,"endColumn":48},{"ruleId":"623","severity":1,"message":"624","line":245,"column":19,"nodeType":"625","endLine":245,"endColumn":49},{"ruleId":"626","severity":1,"message":"627","line":245,"column":27,"nodeType":"628","messageId":"629","endLine":245,"endColumn":48},{"ruleId":"623","severity":1,"message":"624","line":246,"column":19,"nodeType":"625","endLine":246,"endColumn":49},{"ruleId":"626","severity":1,"message":"627","line":246,"column":27,"nodeType":"628","messageId":"629","endLine":246,"endColumn":48},{"ruleId":"623","severity":1,"message":"624","line":248,"column":21,"nodeType":"625","endLine":255,"endColumn":22},{"ruleId":"626","severity":1,"message":"627","line":249,"column":28,"nodeType":"628","messageId":"629","endLine":249,"endColumn":48},{"ruleId":"623","severity":1,"message":"624","line":266,"column":17,"nodeType":"625","endLine":266,"endColumn":47},{"ruleId":"626","severity":1,"message":"627","line":266,"column":25,"nodeType":"628","messageId":"629","endLine":266,"endColumn":46},{"ruleId":"623","severity":1,"message":"624","line":283,"column":19,"nodeType":"625","endLine":283,"endColumn":49},{"ruleId":"626","severity":1,"message":"627","line":283,"column":27,"nodeType":"628","messageId":"629","endLine":283,"endColumn":48},{"ruleId":"613","severity":1,"message":"683","line":2,"column":8,"nodeType":"615","messageId":"616","endLine":2,"endColumn":12},{"ruleId":"613","severity":1,"message":"678","line":3,"column":8,"nodeType":"615","messageId":"616","endLine":3,"endColumn":18},{"ruleId":"661","severity":1,"message":"662","line":61,"column":65,"nodeType":"625","endLine":61,"endColumn":150},{"ruleId":"659","severity":1,"message":"660","line":66,"column":53,"nodeType":"625","endLine":66,"endColumn":147},{"ruleId":"623","severity":1,"message":"624","line":66,"column":53,"nodeType":"625","endLine":66,"endColumn":147},{"ruleId":"626","severity":1,"message":"627","line":66,"column":61,"nodeType":"628","messageId":"629","endLine":66,"endColumn":82},{"ruleId":"659","severity":1,"message":"660","line":77,"column":37,"nodeType":"625","endLine":77,"endColumn":89},{"ruleId":"623","severity":1,"message":"624","line":77,"column":37,"nodeType":"625","endLine":77,"endColumn":89},{"ruleId":"626","severity":1,"message":"627","line":77,"column":45,"nodeType":"628","messageId":"629","endLine":77,"endColumn":66},{"ruleId":"659","severity":1,"message":"660","line":84,"column":37,"nodeType":"625","endLine":84,"endColumn":89},{"ruleId":"623","severity":1,"message":"624","line":84,"column":37,"nodeType":"625","endLine":84,"endColumn":89},{"ruleId":"626","severity":1,"message":"627","line":84,"column":45,"nodeType":"628","messageId":"629","endLine":84,"endColumn":66},{"ruleId":"659","severity":1,"message":"660","line":91,"column":37,"nodeType":"625","endLine":91,"endColumn":89},{"ruleId":"623","severity":1,"message":"624","line":91,"column":37,"nodeType":"625","endLine":91,"endColumn":89},{"ruleId":"626","severity":1,"message":"627","line":91,"column":45,"nodeType":"628","messageId":"629","endLine":91,"endColumn":66},{"ruleId":"659","severity":1,"message":"660","line":98,"column":37,"nodeType":"625","endLine":98,"endColumn":89},{"ruleId":"623","severity":1,"message":"624","line":98,"column":37,"nodeType":"625","endLine":98,"endColumn":89},{"ruleId":"626","severity":1,"message":"627","line":98,"column":45,"nodeType":"628","messageId":"629","endLine":98,"endColumn":66},{"ruleId":"659","severity":1,"message":"660","line":105,"column":37,"nodeType":"625","endLine":105,"endColumn":89},{"ruleId":"623","severity":1,"message":"624","line":105,"column":37,"nodeType":"625","endLine":105,"endColumn":89},{"ruleId":"626","severity":1,"message":"627","line":105,"column":45,"nodeType":"628","messageId":"629","endLine":105,"endColumn":66},{"ruleId":"659","severity":1,"message":"660","line":112,"column":37,"nodeType":"625","endLine":112,"endColumn":89},{"ruleId":"623","severity":1,"message":"624","line":112,"column":37,"nodeType":"625","endLine":112,"endColumn":89},{"ruleId":"626","severity":1,"message":"627","line":112,"column":45,"nodeType":"628","messageId":"629","endLine":112,"endColumn":66},{"ruleId":"659","severity":1,"message":"660","line":119,"column":37,"nodeType":"625","endLine":119,"endColumn":89},{"ruleId":"623","severity":1,"message":"624","line":119,"column":37,"nodeType":"625","endLine":119,"endColumn":89},{"ruleId":"626","severity":1,"message":"627","line":119,"column":45,"nodeType":"628","messageId":"629","endLine":119,"endColumn":66},{"ruleId":"659","severity":1,"message":"660","line":126,"column":37,"nodeType":"625","endLine":126,"endColumn":89},{"ruleId":"623","severity":1,"message":"624","line":126,"column":37,"nodeType":"625","endLine":126,"endColumn":89},{"ruleId":"626","severity":1,"message":"627","line":126,"column":45,"nodeType":"628","messageId":"629","endLine":126,"endColumn":66},{"ruleId":"659","severity":1,"message":"660","line":133,"column":37,"nodeType":"625","endLine":133,"endColumn":89},{"ruleId":"623","severity":1,"message":"624","line":133,"column":37,"nodeType":"625","endLine":133,"endColumn":89},{"ruleId":"626","severity":1,"message":"627","line":133,"column":45,"nodeType":"628","messageId":"629","endLine":133,"endColumn":66},{"ruleId":"659","severity":1,"message":"660","line":140,"column":37,"nodeType":"625","endLine":140,"endColumn":89},{"ruleId":"623","severity":1,"message":"624","line":140,"column":37,"nodeType":"625","endLine":140,"endColumn":89},{"ruleId":"626","severity":1,"message":"627","line":140,"column":45,"nodeType":"628","messageId":"629","endLine":140,"endColumn":66},{"ruleId":"659","severity":1,"message":"660","line":147,"column":37,"nodeType":"625","endLine":147,"endColumn":89},{"ruleId":"623","severity":1,"message":"624","line":147,"column":37,"nodeType":"625","endLine":147,"endColumn":89},{"ruleId":"626","severity":1,"message":"627","line":147,"column":45,"nodeType":"628","messageId":"629","endLine":147,"endColumn":66},{"ruleId":"659","severity":1,"message":"660","line":154,"column":17,"nodeType":"625","endLine":154,"endColumn":70},{"ruleId":"623","severity":1,"message":"624","line":154,"column":17,"nodeType":"625","endLine":154,"endColumn":70},{"ruleId":"626","severity":1,"message":"627","line":154,"column":25,"nodeType":"628","messageId":"629","endLine":154,"endColumn":46},{"ruleId":"663","severity":1,"message":"664","line":96,"column":11,"nodeType":"625","messageId":"665","endLine":96,"endColumn":81,"fix":"684"},{"ruleId":"623","severity":1,"message":"624","line":127,"column":11,"nodeType":"625","endLine":132,"endColumn":12},{"ruleId":"626","severity":1,"message":"627","line":128,"column":18,"nodeType":"628","messageId":"629","endLine":128,"endColumn":39},{"ruleId":"623","severity":1,"message":"624","line":147,"column":15,"nodeType":"625","endLine":147,"endColumn":63},{"ruleId":"626","severity":1,"message":"627","line":147,"column":23,"nodeType":"628","messageId":"629","endLine":147,"endColumn":43},{"ruleId":"623","severity":1,"message":"624","line":156,"column":15,"nodeType":"625","endLine":156,"endColumn":44},{"ruleId":"626","severity":1,"message":"627","line":156,"column":23,"nodeType":"628","messageId":"629","endLine":156,"endColumn":43},{"ruleId":"623","severity":1,"message":"624","line":165,"column":15,"nodeType":"625","endLine":165,"endColumn":44},{"ruleId":"626","severity":1,"message":"627","line":165,"column":23,"nodeType":"628","messageId":"629","endLine":165,"endColumn":43},{"ruleId":"623","severity":1,"message":"624","line":174,"column":15,"nodeType":"625","endLine":174,"endColumn":44},{"ruleId":"626","severity":1,"message":"627","line":174,"column":23,"nodeType":"628","messageId":"629","endLine":174,"endColumn":43},{"ruleId":"623","severity":1,"message":"624","line":183,"column":15,"nodeType":"625","endLine":183,"endColumn":44},{"ruleId":"626","severity":1,"message":"627","line":183,"column":23,"nodeType":"628","messageId":"629","endLine":183,"endColumn":43},{"ruleId":"623","severity":1,"message":"624","line":192,"column":15,"nodeType":"625","endLine":192,"endColumn":44},{"ruleId":"626","severity":1,"message":"627","line":192,"column":23,"nodeType":"628","messageId":"629","endLine":192,"endColumn":43},{"ruleId":"623","severity":1,"message":"624","line":201,"column":15,"nodeType":"625","endLine":201,"endColumn":44},{"ruleId":"626","severity":1,"message":"627","line":201,"column":23,"nodeType":"628","messageId":"629","endLine":201,"endColumn":43},{"ruleId":"623","severity":1,"message":"624","line":210,"column":15,"nodeType":"625","endLine":210,"endColumn":44},{"ruleId":"626","severity":1,"message":"627","line":210,"column":23,"nodeType":"628","messageId":"629","endLine":210,"endColumn":43},{"ruleId":"623","severity":1,"message":"624","line":219,"column":15,"nodeType":"625","endLine":219,"endColumn":44},{"ruleId":"626","severity":1,"message":"627","line":219,"column":23,"nodeType":"628","messageId":"629","endLine":219,"endColumn":43},{"ruleId":"623","severity":1,"message":"624","line":228,"column":15,"nodeType":"625","endLine":228,"endColumn":44},{"ruleId":"626","severity":1,"message":"627","line":228,"column":23,"nodeType":"628","messageId":"629","endLine":228,"endColumn":43},{"ruleId":"623","severity":1,"message":"624","line":237,"column":15,"nodeType":"625","endLine":237,"endColumn":44},{"ruleId":"626","severity":1,"message":"627","line":237,"column":23,"nodeType":"628","messageId":"629","endLine":237,"endColumn":43},{"ruleId":"623","severity":1,"message":"624","line":246,"column":15,"nodeType":"625","endLine":246,"endColumn":44},{"ruleId":"626","severity":1,"message":"627","line":246,"column":23,"nodeType":"628","messageId":"629","endLine":246,"endColumn":43},{"ruleId":"623","severity":1,"message":"624","line":255,"column":15,"nodeType":"625","endLine":255,"endColumn":44},{"ruleId":"626","severity":1,"message":"627","line":255,"column":23,"nodeType":"628","messageId":"629","endLine":255,"endColumn":43},{"ruleId":"623","severity":1,"message":"624","line":264,"column":15,"nodeType":"625","endLine":264,"endColumn":44},{"ruleId":"626","severity":1,"message":"627","line":264,"column":23,"nodeType":"628","messageId":"629","endLine":264,"endColumn":43},{"ruleId":"623","severity":1,"message":"624","line":273,"column":15,"nodeType":"625","endLine":273,"endColumn":44},{"ruleId":"626","severity":1,"message":"627","line":273,"column":23,"nodeType":"628","messageId":"629","endLine":273,"endColumn":43},{"ruleId":"623","severity":1,"message":"624","line":282,"column":15,"nodeType":"625","endLine":282,"endColumn":44},{"ruleId":"626","severity":1,"message":"627","line":282,"column":23,"nodeType":"628","messageId":"629","endLine":282,"endColumn":43},{"ruleId":"613","severity":1,"message":"678","line":2,"column":8,"nodeType":"615","messageId":"616","endLine":2,"endColumn":18},{"ruleId":"623","severity":1,"message":"624","line":156,"column":21,"nodeType":"625","endLine":156,"endColumn":103},{"ruleId":"626","severity":1,"message":"627","line":156,"column":29,"nodeType":"628","messageId":"629","endLine":156,"endColumn":46},{"ruleId":"613","severity":1,"message":"683","line":2,"column":8,"nodeType":"615","messageId":"616","endLine":2,"endColumn":12},{"ruleId":"659","severity":1,"message":"660","line":66,"column":17,"nodeType":"625","endLine":66,"endColumn":129},{"ruleId":"623","severity":1,"message":"624","line":66,"column":17,"nodeType":"625","endLine":66,"endColumn":129},{"ruleId":"626","severity":1,"message":"627","line":66,"column":25,"nodeType":"628","messageId":"629","endLine":66,"endColumn":46},{"ruleId":"613","severity":1,"message":"685","line":19,"column":5,"nodeType":"615","messageId":"616","endLine":19,"endColumn":6},{"ruleId":"645","severity":1,"message":"646","line":259,"column":22,"nodeType":"647","messageId":"648","endLine":259,"endColumn":24},{"ruleId":"645","severity":1,"message":"646","line":269,"column":22,"nodeType":"647","messageId":"648","endLine":269,"endColumn":24},{"ruleId":"645","severity":1,"message":"646","line":313,"column":47,"nodeType":"647","messageId":"648","endLine":313,"endColumn":49},{"ruleId":"645","severity":1,"message":"646","line":321,"column":47,"nodeType":"647","messageId":"648","endLine":321,"endColumn":49},{"ruleId":"645","severity":1,"message":"646","line":329,"column":47,"nodeType":"647","messageId":"648","endLine":329,"endColumn":49},{"ruleId":"645","severity":1,"message":"646","line":337,"column":44,"nodeType":"647","messageId":"648","endLine":337,"endColumn":46},{"ruleId":"645","severity":1,"message":"646","line":345,"column":44,"nodeType":"647","messageId":"648","endLine":345,"endColumn":46},{"ruleId":"645","severity":1,"message":"646","line":353,"column":44,"nodeType":"647","messageId":"648","endLine":353,"endColumn":46},{"ruleId":"645","severity":1,"message":"646","line":509,"column":22,"nodeType":"647","messageId":"648","endLine":509,"endColumn":24},{"ruleId":"645","severity":1,"message":"646","line":536,"column":39,"nodeType":"647","messageId":"648","endLine":536,"endColumn":41},{"ruleId":"645","severity":1,"message":"646","line":536,"column":89,"nodeType":"647","messageId":"648","endLine":536,"endColumn":91},{"ruleId":"645","severity":1,"message":"646","line":549,"column":49,"nodeType":"647","messageId":"648","endLine":549,"endColumn":51},{"ruleId":"645","severity":1,"message":"646","line":553,"column":49,"nodeType":"647","messageId":"648","endLine":553,"endColumn":51},{"ruleId":"645","severity":1,"message":"646","line":558,"column":49,"nodeType":"647","messageId":"648","endLine":558,"endColumn":51},{"ruleId":"645","severity":1,"message":"646","line":564,"column":46,"nodeType":"647","messageId":"648","endLine":564,"endColumn":48},{"ruleId":"645","severity":1,"message":"646","line":568,"column":46,"nodeType":"647","messageId":"648","endLine":568,"endColumn":48},{"ruleId":"645","severity":1,"message":"646","line":576,"column":46,"nodeType":"647","messageId":"648","endLine":576,"endColumn":48},{"ruleId":"645","severity":1,"message":"646","line":584,"column":46,"nodeType":"647","messageId":"648","endLine":584,"endColumn":48},{"ruleId":"645","severity":1,"message":"646","line":589,"column":46,"nodeType":"647","messageId":"648","endLine":589,"endColumn":48},{"ruleId":"645","severity":1,"message":"646","line":719,"column":47,"nodeType":"647","messageId":"648","endLine":719,"endColumn":49},{"ruleId":"645","severity":1,"message":"646","line":727,"column":47,"nodeType":"647","messageId":"648","endLine":727,"endColumn":49},{"ruleId":"645","severity":1,"message":"646","line":735,"column":47,"nodeType":"647","messageId":"648","endLine":735,"endColumn":49},{"ruleId":"645","severity":1,"message":"646","line":743,"column":44,"nodeType":"647","messageId":"648","endLine":743,"endColumn":46},{"ruleId":"645","severity":1,"message":"646","line":751,"column":44,"nodeType":"647","messageId":"648","endLine":751,"endColumn":46},{"ruleId":"645","severity":1,"message":"646","line":759,"column":44,"nodeType":"647","messageId":"648","endLine":759,"endColumn":46},{"ruleId":"645","severity":1,"message":"646","line":809,"column":32,"nodeType":"647","messageId":"648","endLine":809,"endColumn":34},{"ruleId":"623","severity":1,"message":"624","line":1450,"column":33,"nodeType":"625","endLine":1450,"endColumn":67},{"ruleId":"659","severity":1,"message":"660","line":1586,"column":17,"nodeType":"625","endLine":1586,"endColumn":133},{"ruleId":"623","severity":1,"message":"624","line":1586,"column":17,"nodeType":"625","endLine":1586,"endColumn":133},{"ruleId":"626","severity":1,"message":"627","line":1586,"column":25,"nodeType":"628","messageId":"629","endLine":1586,"endColumn":46},{"ruleId":"613","severity":1,"message":"683","line":2,"column":8,"nodeType":"615","messageId":"616","endLine":2,"endColumn":12},{"ruleId":"659","severity":1,"message":"660","line":48,"column":17,"nodeType":"625","endLine":48,"endColumn":135},{"ruleId":"623","severity":1,"message":"624","line":48,"column":17,"nodeType":"625","endLine":48,"endColumn":135},{"ruleId":"626","severity":1,"message":"627","line":48,"column":25,"nodeType":"628","messageId":"629","endLine":48,"endColumn":46},{"ruleId":"613","severity":1,"message":"683","line":2,"column":8,"nodeType":"615","messageId":"616","endLine":2,"endColumn":12},{"ruleId":"613","severity":1,"message":"686","line":4,"column":10,"nodeType":"615","messageId":"616","endLine":4,"endColumn":17},{"ruleId":"613","severity":1,"message":"632","line":5,"column":8,"nodeType":"615","messageId":"616","endLine":5,"endColumn":16},{"ruleId":"613","severity":1,"message":"622","line":98,"column":13,"nodeType":"615","messageId":"616","endLine":98,"endColumn":20},{"ruleId":"613","severity":1,"message":"622","line":161,"column":13,"nodeType":"615","messageId":"616","endLine":161,"endColumn":20},{"ruleId":"623","severity":1,"message":"624","line":203,"column":29,"nodeType":"625","endLine":203,"endColumn":137},{"ruleId":"626","severity":1,"message":"627","line":203,"column":37,"nodeType":"628","messageId":"629","endLine":203,"endColumn":57},{"ruleId":"623","severity":1,"message":"624","line":204,"column":29,"nodeType":"625","endLine":204,"endColumn":148},{"ruleId":"626","severity":1,"message":"627","line":204,"column":37,"nodeType":"628","messageId":"629","endLine":204,"endColumn":57},{"ruleId":"623","severity":1,"message":"624","line":233,"column":29,"nodeType":"625","endLine":233,"endColumn":138},{"ruleId":"626","severity":1,"message":"627","line":233,"column":37,"nodeType":"628","messageId":"629","endLine":233,"endColumn":57},{"ruleId":"659","severity":1,"message":"660","line":264,"column":17,"nodeType":"625","endLine":264,"endColumn":128},{"ruleId":"623","severity":1,"message":"624","line":264,"column":17,"nodeType":"625","endLine":264,"endColumn":128},{"ruleId":"626","severity":1,"message":"627","line":264,"column":25,"nodeType":"628","messageId":"629","endLine":264,"endColumn":46},{"ruleId":"613","severity":1,"message":"687","line":1,"column":8,"nodeType":"615","messageId":"616","endLine":1,"endColumn":9},{"ruleId":"613","severity":1,"message":"688","line":4,"column":8,"nodeType":"615","messageId":"616","endLine":4,"endColumn":12},{"ruleId":"613","severity":1,"message":"689","line":9,"column":26,"nodeType":"615","messageId":"616","endLine":9,"endColumn":36},{"ruleId":"613","severity":1,"message":"690","line":13,"column":10,"nodeType":"615","messageId":"616","endLine":13,"endColumn":16},{"ruleId":"613","severity":1,"message":"622","line":91,"column":13,"nodeType":"615","messageId":"616","endLine":91,"endColumn":20},{"ruleId":"613","severity":1,"message":"683","line":2,"column":8,"nodeType":"615","messageId":"616","endLine":2,"endColumn":12},{"ruleId":"613","severity":1,"message":"678","line":3,"column":8,"nodeType":"615","messageId":"616","endLine":3,"endColumn":18},{"ruleId":"613","severity":1,"message":"686","line":4,"column":10,"nodeType":"615","messageId":"616","endLine":4,"endColumn":17},{"ruleId":"613","severity":1,"message":"632","line":5,"column":8,"nodeType":"615","messageId":"616","endLine":5,"endColumn":16},{"ruleId":"623","severity":1,"message":"624","line":52,"column":29,"nodeType":"625","endLine":52,"endColumn":136},{"ruleId":"626","severity":1,"message":"627","line":52,"column":37,"nodeType":"628","messageId":"629","endLine":52,"endColumn":57},{"ruleId":"623","severity":1,"message":"624","line":53,"column":29,"nodeType":"625","endLine":53,"endColumn":147},{"ruleId":"626","severity":1,"message":"627","line":53,"column":37,"nodeType":"628","messageId":"629","endLine":53,"endColumn":57},{"ruleId":"623","severity":1,"message":"624","line":72,"column":29,"nodeType":"625","endLine":72,"endColumn":137},{"ruleId":"626","severity":1,"message":"627","line":72,"column":37,"nodeType":"628","messageId":"629","endLine":72,"endColumn":57},{"ruleId":"659","severity":1,"message":"660","line":160,"column":17,"nodeType":"625","endLine":160,"endColumn":126},{"ruleId":"623","severity":1,"message":"624","line":160,"column":17,"nodeType":"625","endLine":160,"endColumn":126},{"ruleId":"626","severity":1,"message":"627","line":160,"column":25,"nodeType":"628","messageId":"629","endLine":160,"endColumn":46},{"ruleId":"613","severity":1,"message":"683","line":2,"column":8,"nodeType":"615","messageId":"616","endLine":2,"endColumn":12},{"ruleId":"613","severity":1,"message":"678","line":3,"column":8,"nodeType":"615","messageId":"616","endLine":3,"endColumn":18},{"ruleId":"613","severity":1,"message":"686","line":4,"column":10,"nodeType":"615","messageId":"616","endLine":4,"endColumn":17},{"ruleId":"613","severity":1,"message":"632","line":5,"column":8,"nodeType":"615","messageId":"616","endLine":5,"endColumn":16},{"ruleId":"623","severity":1,"message":"624","line":52,"column":29,"nodeType":"625","endLine":52,"endColumn":136},{"ruleId":"626","severity":1,"message":"627","line":52,"column":37,"nodeType":"628","messageId":"629","endLine":52,"endColumn":57},{"ruleId":"623","severity":1,"message":"624","line":54,"column":29,"nodeType":"625","endLine":54,"endColumn":147},{"ruleId":"626","severity":1,"message":"627","line":54,"column":37,"nodeType":"628","messageId":"629","endLine":54,"endColumn":57},{"ruleId":"623","severity":1,"message":"624","line":55,"column":29,"nodeType":"625","endLine":55,"endColumn":147},{"ruleId":"626","severity":1,"message":"627","line":55,"column":37,"nodeType":"628","messageId":"629","endLine":55,"endColumn":57},{"ruleId":"623","severity":1,"message":"624","line":64,"column":29,"nodeType":"625","endLine":64,"endColumn":136},{"ruleId":"626","severity":1,"message":"627","line":64,"column":37,"nodeType":"628","messageId":"629","endLine":64,"endColumn":57},{"ruleId":"623","severity":1,"message":"624","line":81,"column":29,"nodeType":"625","endLine":81,"endColumn":136},{"ruleId":"626","severity":1,"message":"627","line":81,"column":37,"nodeType":"628","messageId":"629","endLine":81,"endColumn":57},{"ruleId":"659","severity":1,"message":"660","line":94,"column":17,"nodeType":"625","endLine":94,"endColumn":126},{"ruleId":"623","severity":1,"message":"624","line":94,"column":17,"nodeType":"625","endLine":94,"endColumn":126},{"ruleId":"626","severity":1,"message":"627","line":94,"column":25,"nodeType":"628","messageId":"629","endLine":94,"endColumn":46},{"ruleId":"613","severity":1,"message":"691","line":1,"column":17,"nodeType":"615","messageId":"616","endLine":1,"endColumn":30},{"ruleId":"663","severity":1,"message":"664","line":15,"column":21,"nodeType":"625","messageId":"665","endLine":15,"endColumn":93,"fix":"692"},{"ruleId":"663","severity":1,"message":"664","line":29,"column":33,"nodeType":"625","messageId":"665","endLine":29,"endColumn":108,"fix":"693"},{"ruleId":"661","severity":1,"message":"662","line":45,"column":37,"nodeType":"625","endLine":45,"endColumn":69},{"ruleId":"623","severity":1,"message":"624","line":53,"column":29,"nodeType":"625","endLine":56,"endColumn":30},{"ruleId":"626","severity":1,"message":"627","line":54,"column":38,"nodeType":"628","messageId":"629","endLine":54,"endColumn":59},{"ruleId":"613","severity":1,"message":"683","line":2,"column":8,"nodeType":"615","messageId":"616","endLine":2,"endColumn":12},{"ruleId":"613","severity":1,"message":"678","line":3,"column":8,"nodeType":"615","messageId":"616","endLine":3,"endColumn":18},{"ruleId":"613","severity":1,"message":"686","line":4,"column":10,"nodeType":"615","messageId":"616","endLine":4,"endColumn":17},{"ruleId":"613","severity":1,"message":"632","line":5,"column":8,"nodeType":"615","messageId":"616","endLine":5,"endColumn":16},{"ruleId":"623","severity":1,"message":"624","line":52,"column":25,"nodeType":"625","endLine":52,"endColumn":129},{"ruleId":"626","severity":1,"message":"627","line":52,"column":33,"nodeType":"628","messageId":"629","endLine":52,"endColumn":53},{"ruleId":"623","severity":1,"message":"624","line":53,"column":25,"nodeType":"625","endLine":53,"endColumn":129},{"ruleId":"626","severity":1,"message":"627","line":53,"column":33,"nodeType":"628","messageId":"629","endLine":53,"endColumn":53},{"ruleId":"623","severity":1,"message":"624","line":54,"column":25,"nodeType":"625","endLine":54,"endColumn":129},{"ruleId":"626","severity":1,"message":"627","line":54,"column":33,"nodeType":"628","messageId":"629","endLine":54,"endColumn":53},{"ruleId":"659","severity":1,"message":"660","line":88,"column":17,"nodeType":"625","endLine":88,"endColumn":126},{"ruleId":"623","severity":1,"message":"624","line":88,"column":17,"nodeType":"625","endLine":88,"endColumn":126},{"ruleId":"626","severity":1,"message":"627","line":88,"column":25,"nodeType":"628","messageId":"629","endLine":88,"endColumn":46},{"ruleId":"613","severity":1,"message":"683","line":2,"column":8,"nodeType":"615","messageId":"616","endLine":2,"endColumn":12},{"ruleId":"613","severity":1,"message":"678","line":3,"column":8,"nodeType":"615","messageId":"616","endLine":3,"endColumn":18},{"ruleId":"613","severity":1,"message":"686","line":4,"column":10,"nodeType":"615","messageId":"616","endLine":4,"endColumn":17},{"ruleId":"613","severity":1,"message":"632","line":5,"column":8,"nodeType":"615","messageId":"616","endLine":5,"endColumn":16},{"ruleId":"663","severity":1,"message":"664","line":55,"column":72,"nodeType":"625","messageId":"665","endLine":55,"endColumn":141,"fix":"694"},{"ruleId":"659","severity":1,"message":"660","line":55,"column":72,"nodeType":"625","endLine":55,"endColumn":141},{"ruleId":"661","severity":1,"message":"662","line":58,"column":68,"nodeType":"625","endLine":58,"endColumn":260},{"ruleId":"663","severity":1,"message":"664","line":64,"column":72,"nodeType":"625","messageId":"665","endLine":64,"endColumn":143,"fix":"695"},{"ruleId":"659","severity":1,"message":"660","line":64,"column":72,"nodeType":"625","endLine":64,"endColumn":143},{"ruleId":"661","severity":1,"message":"662","line":67,"column":68,"nodeType":"625","endLine":67,"endColumn":260},{"ruleId":"663","severity":1,"message":"664","line":73,"column":72,"nodeType":"625","messageId":"665","endLine":73,"endColumn":142,"fix":"696"},{"ruleId":"659","severity":1,"message":"660","line":73,"column":72,"nodeType":"625","endLine":73,"endColumn":142},{"ruleId":"661","severity":1,"message":"662","line":76,"column":68,"nodeType":"625","endLine":76,"endColumn":260},{"ruleId":"663","severity":1,"message":"664","line":83,"column":72,"nodeType":"625","messageId":"665","endLine":83,"endColumn":141,"fix":"697"},{"ruleId":"659","severity":1,"message":"660","line":83,"column":72,"nodeType":"625","endLine":83,"endColumn":141},{"ruleId":"661","severity":1,"message":"662","line":86,"column":68,"nodeType":"625","endLine":86,"endColumn":260},{"ruleId":"663","severity":1,"message":"664","line":92,"column":72,"nodeType":"625","messageId":"665","endLine":92,"endColumn":157,"fix":"698"},{"ruleId":"659","severity":1,"message":"660","line":92,"column":72,"nodeType":"625","endLine":92,"endColumn":157},{"ruleId":"661","severity":1,"message":"662","line":95,"column":68,"nodeType":"625","endLine":95,"endColumn":282},{"ruleId":"663","severity":1,"message":"664","line":101,"column":72,"nodeType":"625","messageId":"665","endLine":101,"endColumn":167,"fix":"699"},{"ruleId":"659","severity":1,"message":"660","line":101,"column":72,"nodeType":"625","endLine":101,"endColumn":167},{"ruleId":"661","severity":1,"message":"662","line":104,"column":68,"nodeType":"625","endLine":104,"endColumn":272},{"ruleId":"663","severity":1,"message":"664","line":110,"column":72,"nodeType":"625","messageId":"665","endLine":110,"endColumn":158,"fix":"700"},{"ruleId":"659","severity":1,"message":"660","line":110,"column":72,"nodeType":"625","endLine":110,"endColumn":158},{"ruleId":"663","severity":1,"message":"664","line":118,"column":72,"nodeType":"625","messageId":"665","endLine":118,"endColumn":162,"fix":"701"},{"ruleId":"659","severity":1,"message":"660","line":118,"column":72,"nodeType":"625","endLine":118,"endColumn":162},{"ruleId":"661","severity":1,"message":"662","line":121,"column":68,"nodeType":"625","endLine":121,"endColumn":252},{"ruleId":"663","severity":1,"message":"664","line":182,"column":72,"nodeType":"625","messageId":"665","endLine":182,"endColumn":170,"fix":"702"},{"ruleId":"659","severity":1,"message":"660","line":182,"column":72,"nodeType":"625","endLine":182,"endColumn":170},{"ruleId":"663","severity":1,"message":"664","line":191,"column":72,"nodeType":"625","messageId":"665","endLine":191,"endColumn":160,"fix":"703"},{"ruleId":"659","severity":1,"message":"660","line":191,"column":72,"nodeType":"625","endLine":191,"endColumn":160},{"ruleId":"663","severity":1,"message":"664","line":201,"column":72,"nodeType":"625","messageId":"665","endLine":201,"endColumn":163,"fix":"704"},{"ruleId":"659","severity":1,"message":"660","line":201,"column":72,"nodeType":"625","endLine":201,"endColumn":163},{"ruleId":"659","severity":1,"message":"660","line":220,"column":72,"nodeType":"625","endLine":220,"endColumn":121},{"ruleId":"623","severity":1,"message":"624","line":220,"column":72,"nodeType":"625","endLine":220,"endColumn":121},{"ruleId":"659","severity":1,"message":"660","line":230,"column":72,"nodeType":"625","endLine":230,"endColumn":121},{"ruleId":"623","severity":1,"message":"624","line":230,"column":72,"nodeType":"625","endLine":230,"endColumn":121},{"ruleId":"659","severity":1,"message":"660","line":239,"column":72,"nodeType":"625","endLine":239,"endColumn":121},{"ruleId":"623","severity":1,"message":"624","line":239,"column":72,"nodeType":"625","endLine":239,"endColumn":121},{"ruleId":"659","severity":1,"message":"660","line":248,"column":72,"nodeType":"625","endLine":248,"endColumn":121},{"ruleId":"623","severity":1,"message":"624","line":248,"column":72,"nodeType":"625","endLine":248,"endColumn":121},{"ruleId":"659","severity":1,"message":"660","line":266,"column":72,"nodeType":"625","endLine":266,"endColumn":121},{"ruleId":"623","severity":1,"message":"624","line":266,"column":72,"nodeType":"625","endLine":266,"endColumn":121},{"ruleId":"659","severity":1,"message":"660","line":275,"column":72,"nodeType":"625","endLine":275,"endColumn":121},{"ruleId":"623","severity":1,"message":"624","line":275,"column":72,"nodeType":"625","endLine":275,"endColumn":121},{"ruleId":"659","severity":1,"message":"660","line":284,"column":72,"nodeType":"625","endLine":284,"endColumn":121},{"ruleId":"623","severity":1,"message":"624","line":284,"column":72,"nodeType":"625","endLine":284,"endColumn":121},{"ruleId":"659","severity":1,"message":"660","line":368,"column":17,"nodeType":"625","endLine":368,"endColumn":121},{"ruleId":"623","severity":1,"message":"624","line":368,"column":17,"nodeType":"625","endLine":368,"endColumn":121},{"ruleId":"626","severity":1,"message":"627","line":368,"column":25,"nodeType":"628","messageId":"629","endLine":368,"endColumn":46},"no-native-reassign",["705"],"no-negated-in-lhs",["706"],"no-unused-vars","'lazy' is defined but never used.","Identifier","unusedVar","'Suspense' is defined but never used.","'Redirect' is defined but never used.","'Validation' is defined but never used.","'LoopCircleLoading' is defined but never used.","'web3' is assigned a value but never used.","'address' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'swapFactoryAbi' is defined but never used.","'tokenAbi' is defined but never used.","'Collapse' is defined but never used.","'Highlight' is defined but never used.","'changeFee' is assigned a value but never used.","'displayToken' is assigned a value but never used.","'sideBar' is assigned a value but never used.","'bsc' is assigned a value but never used.","'ethereum' is assigned a value but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","putCommentInBraces","'DepositToken' is defined but never used.","'match' is assigned a value but never used.","'history' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Panobj' is assigned a value but never used.","'MarketCap' is assigned a value but never used.","'tableDataLocal' is assigned a value but never used.","'Uniobj' is assigned a value but never used.","'wbnbPrice' is assigned a value but never used.","'liveETHPrice' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"707","text":"708"},{"range":"709","text":"708"},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'BigNumber' is assigned a value but never used.","'isInvestment' is assigned a value but never used.","'minimumAmountToClaim' is assigned a value but never used.","'limitPice' is assigned a value but never used.","'tokenVaultAbi' is defined but never used.","'constantConfig' is defined but never used.","'web3Config' is defined but never used.",{"range":"710","text":"708"},{"range":"711","text":"708"},{"range":"712","text":"708"},{"range":"713","text":"708"},"'data' is defined but never used.",{"range":"714","text":"708"},"'_' is assigned a value but never used.","'PrePath' is defined but never used.","'_' is defined but never used.","'web3' is defined but never used.","'bscAddress' is defined but never used.","'ethers' is defined but never used.","'PureComponent' is defined but never used.",{"range":"715","text":"708"},{"range":"716","text":"708"},{"range":"717","text":"708"},{"range":"718","text":"708"},{"range":"719","text":"708"},{"range":"720","text":"708"},{"range":"721","text":"708"},{"range":"722","text":"708"},{"range":"723","text":"708"},{"range":"724","text":"708"},{"range":"725","text":"708"},{"range":"726","text":"708"},{"range":"727","text":"708"},"no-global-assign","no-unsafe-negation",[99829,99829]," rel=\"noreferrer\"",[102008,102008],[5839,5839],[6266,6266],[8226,8226],[8388,8388],[2917,2917],[896,896],[1976,1976],[2328,2328],[3302,3302],[4283,4283],[5278,5278],[6257,6257],[7396,7396],[8517,8517],[9376,9376],[16350,16350],[17234,17234],[18131,18131]]